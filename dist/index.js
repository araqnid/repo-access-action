/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 54:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__nccwpck_require__(37));
const utils_1 = __nccwpck_require__(200);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 403:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __nccwpck_require__(54);
const file_command_1 = __nccwpck_require__(787);
const utils_1 = __nccwpck_require__(200);
const os = __importStar(__nccwpck_require__(37));
const path = __importStar(__nccwpck_require__(17));
const oidc_utils_1 = __nccwpck_require__(53);
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        const delimiter = '_GitHubActionsFileCommandDelimeter_';
        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;
        file_command_1.issueCommand('ENV', commandValue);
    }
    else {
        command_1.issueCommand('set-env', { name }, convertedVal);
    }
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
    const inputs = getInput(name, options)
        .split('\n')
        .filter(x => x !== '');
    return inputs;
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, value);
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function error(message, properties = {}) {
    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds a warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function warning(message, properties = {}) {
    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Adds a notice issue
 * @param message notice issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function notice(message, properties = {}) {
    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.notice = notice;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    command_1.issueCommand('save-state', { name }, value);
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
function getIDToken(aud) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield oidc_utils_1.OidcClient.getIDToken(aud);
    });
}
exports.getIDToken = getIDToken;
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 787:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issueCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(147));
const os = __importStar(__nccwpck_require__(37));
const utils_1 = __nccwpck_require__(200);
function issueCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueCommand = issueCommand;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 53:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OidcClient = void 0;
const http_client_1 = __nccwpck_require__(614);
const auth_1 = __nccwpck_require__(464);
const core_1 = __nccwpck_require__(403);
class OidcClient {
    static createHttpClient(allowRetry = true, maxRetry = 10) {
        const requestOptions = {
            allowRetries: allowRetry,
            maxRetries: maxRetry
        };
        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
    static getRequestToken() {
        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];
        if (!token) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');
        }
        return token;
    }
    static getIDTokenUrl() {
        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];
        if (!runtimeUrl) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');
        }
        return runtimeUrl;
    }
    static getCall(id_token_url) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const httpclient = OidcClient.createHttpClient();
            const res = yield httpclient
                .getJson(id_token_url)
                .catch(error => {
                throw new Error(`Failed to get ID Token. \n 
        Error Code : ${error.statusCode}\n 
        Error Message: ${error.result.message}`);
            });
            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
            if (!id_token) {
                throw new Error('Response json body do not have ID Token field');
            }
            return id_token;
        });
    }
    static getIDToken(audience) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                // New ID Token is requested from action service
                let id_token_url = OidcClient.getIDTokenUrl();
                if (audience) {
                    const encodedAudience = encodeURIComponent(audience);
                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;
                }
                core_1.debug(`ID token url is ${id_token_url}`);
                const id_token = yield OidcClient.getCall(id_token_url);
                core_1.setSecret(id_token);
                return id_token;
            }
            catch (error) {
                throw new Error(`Error message: ${error.message}`);
            }
        });
    }
}
exports.OidcClient = OidcClient;
//# sourceMappingURL=oidc-utils.js.map

/***/ }),

/***/ 200:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandProperties = exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
/**
 *
 * @param annotationProperties
 * @returns The command properties to send with the actual annotation command
 * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646
 */
function toCommandProperties(annotationProperties) {
    if (!Object.keys(annotationProperties).length) {
        return {};
    }
    return {
        title: annotationProperties.title,
        file: annotationProperties.file,
        line: annotationProperties.startLine,
        endLine: annotationProperties.endLine,
        col: annotationProperties.startColumn,
        endColumn: annotationProperties.endColumn
    };
}
exports.toCommandProperties = toCommandProperties;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 464:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
class BasicCredentialHandler {
    constructor(username, password) {
        this.username = username;
        this.password = password;
    }
    prepareRequest(options) {
        options.headers['Authorization'] =
            'Basic ' +
                Buffer.from(this.username + ':' + this.password).toString('base64');
    }
    // This handler cannot handle 401
    canHandleAuthentication(response) {
        return false;
    }
    handleAuthentication(httpClient, requestInfo, objs) {
        return null;
    }
}
exports.BasicCredentialHandler = BasicCredentialHandler;
class BearerCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        options.headers['Authorization'] = 'Bearer ' + this.token;
    }
    // This handler cannot handle 401
    canHandleAuthentication(response) {
        return false;
    }
    handleAuthentication(httpClient, requestInfo, objs) {
        return null;
    }
}
exports.BearerCredentialHandler = BearerCredentialHandler;
class PersonalAccessTokenCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        options.headers['Authorization'] =
            'Basic ' + Buffer.from('PAT:' + this.token).toString('base64');
    }
    // This handler cannot handle 401
    canHandleAuthentication(response) {
        return false;
    }
    handleAuthentication(httpClient, requestInfo, objs) {
        return null;
    }
}
exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;


/***/ }),

/***/ 614:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const http = __nccwpck_require__(685);
const https = __nccwpck_require__(687);
const pm = __nccwpck_require__(990);
let tunnel;
var HttpCodes;
(function (HttpCodes) {
    HttpCodes[HttpCodes["OK"] = 200] = "OK";
    HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
    HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
    HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
    HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
    HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
    HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
    HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
    HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
    HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
    HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
var Headers;
(function (Headers) {
    Headers["Accept"] = "accept";
    Headers["ContentType"] = "content-type";
})(Headers = exports.Headers || (exports.Headers = {}));
var MediaTypes;
(function (MediaTypes) {
    MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
const HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
];
const HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
];
const RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
const ExponentialBackoffCeiling = 10;
const ExponentialBackoffTimeSlice = 5;
class HttpClientError extends Error {
    constructor(message, statusCode) {
        super(message);
        this.name = 'HttpClientError';
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, HttpClientError.prototype);
    }
}
exports.HttpClientError = HttpClientError;
class HttpClientResponse {
    constructor(message) {
        this.message = message;
    }
    readBody() {
        return new Promise(async (resolve, reject) => {
            let output = Buffer.alloc(0);
            this.message.on('data', (chunk) => {
                output = Buffer.concat([output, chunk]);
            });
            this.message.on('end', () => {
                resolve(output.toString());
            });
        });
    }
}
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
    let parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
            if (requestOptions.ignoreSslError != null) {
                this._ignoreSslError = requestOptions.ignoreSslError;
            }
            this._socketTimeout = requestOptions.socketTimeout;
            if (requestOptions.allowRedirects != null) {
                this._allowRedirects = requestOptions.allowRedirects;
            }
            if (requestOptions.allowRedirectDowngrade != null) {
                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
            }
            if (requestOptions.maxRedirects != null) {
                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
            }
            if (requestOptions.keepAlive != null) {
                this._keepAlive = requestOptions.keepAlive;
            }
            if (requestOptions.allowRetries != null) {
                this._allowRetries = requestOptions.allowRetries;
            }
            if (requestOptions.maxRetries != null) {
                this._maxRetries = requestOptions.maxRetries;
            }
        }
    }
    options(requestUrl, additionalHeaders) {
        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});
    }
    get(requestUrl, additionalHeaders) {
        return this.request('GET', requestUrl, null, additionalHeaders || {});
    }
    del(requestUrl, additionalHeaders) {
        return this.request('DELETE', requestUrl, null, additionalHeaders || {});
    }
    post(requestUrl, data, additionalHeaders) {
        return this.request('POST', requestUrl, data, additionalHeaders || {});
    }
    patch(requestUrl, data, additionalHeaders) {
        return this.request('PATCH', requestUrl, data, additionalHeaders || {});
    }
    put(requestUrl, data, additionalHeaders) {
        return this.request('PUT', requestUrl, data, additionalHeaders || {});
    }
    head(requestUrl, additionalHeaders) {
        return this.request('HEAD', requestUrl, null, additionalHeaders || {});
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
        return this.request(verb, requestUrl, stream, additionalHeaders);
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
    async getJson(requestUrl, additionalHeaders = {}) {
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        let res = await this.get(requestUrl, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    async postJson(requestUrl, obj, additionalHeaders = {}) {
        let data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        let res = await this.post(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    async putJson(requestUrl, obj, additionalHeaders = {}) {
        let data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        let res = await this.put(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    async patchJson(requestUrl, obj, additionalHeaders = {}) {
        let data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        let res = await this.patch(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
    async request(verb, requestUrl, data, headers) {
        if (this._disposed) {
            throw new Error('Client has already been disposed.');
        }
        let parsedUrl = new URL(requestUrl);
        let info = this._prepareRequest(verb, parsedUrl, headers);
        // Only perform retries on reads since writes may not be idempotent.
        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1
            ? this._maxRetries + 1
            : 1;
        let numTries = 0;
        let response;
        while (numTries < maxTries) {
            response = await this.requestRaw(info, data);
            // Check if it's an authentication challenge
            if (response &&
                response.message &&
                response.message.statusCode === HttpCodes.Unauthorized) {
                let authenticationHandler;
                for (let i = 0; i < this.handlers.length; i++) {
                    if (this.handlers[i].canHandleAuthentication(response)) {
                        authenticationHandler = this.handlers[i];
                        break;
                    }
                }
                if (authenticationHandler) {
                    return authenticationHandler.handleAuthentication(this, info, data);
                }
                else {
                    // We have received an unauthorized response but have no handlers to handle it.
                    // Let the response return to the caller.
                    return response;
                }
            }
            let redirectsRemaining = this._maxRedirects;
            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&
                this._allowRedirects &&
                redirectsRemaining > 0) {
                const redirectUrl = response.message.headers['location'];
                if (!redirectUrl) {
                    // if there's no location to redirect to, we won't
                    break;
                }
                let parsedRedirectUrl = new URL(redirectUrl);
                if (parsedUrl.protocol == 'https:' &&
                    parsedUrl.protocol != parsedRedirectUrl.protocol &&
                    !this._allowRedirectDowngrade) {
                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
                }
                // we need to finish reading the response before reassigning response
                // which will leak the open socket.
                await response.readBody();
                // strip authorization header if redirected to a different hostname
                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                    for (let header in headers) {
                        // header names are case insensitive
                        if (header.toLowerCase() === 'authorization') {
                            delete headers[header];
                        }
                    }
                }
                // let's make the request with the new redirectUrl
                info = this._prepareRequest(verb, parsedRedirectUrl, headers);
                response = await this.requestRaw(info, data);
                redirectsRemaining--;
            }
            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {
                // If not a retry code, return immediately instead of retrying
                return response;
            }
            numTries += 1;
            if (numTries < maxTries) {
                await response.readBody();
                await this._performExponentialBackoff(numTries);
            }
        }
        return response;
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
    dispose() {
        if (this._agent) {
            this._agent.destroy();
        }
        this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
    requestRaw(info, data) {
        return new Promise((resolve, reject) => {
            let callbackForResult = function (err, res) {
                if (err) {
                    reject(err);
                }
                resolve(res);
            };
            this.requestRawWithCallback(info, data, callbackForResult);
        });
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
    requestRawWithCallback(info, data, onResult) {
        let socket;
        if (typeof data === 'string') {
            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
        }
        let callbackCalled = false;
        let handleResult = (err, res) => {
            if (!callbackCalled) {
                callbackCalled = true;
                onResult(err, res);
            }
        };
        let req = info.httpModule.request(info.options, (msg) => {
            let res = new HttpClientResponse(msg);
            handleResult(null, res);
        });
        req.on('socket', sock => {
            socket = sock;
        });
        // If we ever get disconnected, we want the socket to timeout eventually
        req.setTimeout(this._socketTimeout || 3 * 60000, () => {
            if (socket) {
                socket.end();
            }
            handleResult(new Error('Request timeout: ' + info.options.path), null);
        });
        req.on('error', function (err) {
            // err has statusCode property
            // res should have headers
            handleResult(err, null);
        });
        if (data && typeof data === 'string') {
            req.write(data, 'utf8');
        }
        if (data && typeof data !== 'string') {
            data.on('close', function () {
                req.end();
            });
            data.pipe(req);
        }
        else {
            req.end();
        }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
    getAgent(serverUrl) {
        let parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === 'https:';
        info.httpModule = usingSsl ? https : http;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port
            ? parseInt(info.parsedUrl.port)
            : defaultPort;
        info.options.path =
            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
            info.options.headers['user-agent'] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        // gives handlers an opportunity to participate
        if (this.handlers) {
            this.handlers.forEach(handler => {
                handler.prepareRequest(info.options);
            });
        }
        return info;
    }
    _mergeHeaders(headers) {
        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
        if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));
        }
        return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
        let agent;
        let proxyUrl = pm.getProxyUrl(parsedUrl);
        let useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
            agent = this._proxyAgent;
        }
        if (this._keepAlive && !useProxy) {
            agent = this._agent;
        }
        // if agent is already assigned use that agent.
        if (!!agent) {
            return agent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        let maxSockets = 100;
        if (!!this.requestOptions) {
            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
        }
        if (useProxy) {
            // If using proxy, need tunnel
            if (!tunnel) {
                tunnel = __nccwpck_require__(108);
            }
            const agentOptions = {
                maxSockets: maxSockets,
                keepAlive: this._keepAlive,
                proxy: {
                    ...((proxyUrl.username || proxyUrl.password) && {
                        proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
                    }),
                    host: proxyUrl.hostname,
                    port: proxyUrl.port
                }
            };
            let tunnelAgent;
            const overHttps = proxyUrl.protocol === 'https:';
            if (usingSsl) {
                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
            }
            else {
                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
            }
            agent = tunnelAgent(agentOptions);
            this._proxyAgent = agent;
        }
        // if reusing agent across request and tunneling agent isn't assigned create a new agent
        if (this._keepAlive && !agent) {
            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };
            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
            this._agent = agent;
        }
        // if not using private agent and tunnel agent isn't setup then use global agent
        if (!agent) {
            agent = usingSsl ? https.globalAgent : http.globalAgent;
        }
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            agent.options = Object.assign(agent.options || {}, {
                rejectUnauthorized: false
            });
        }
        return agent;
    }
    _performExponentialBackoff(retryNumber) {
        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
        return new Promise(resolve => setTimeout(() => resolve(), ms));
    }
    static dateTimeDeserializer(key, value) {
        if (typeof value === 'string') {
            let a = new Date(value);
            if (!isNaN(a.valueOf())) {
                return a;
            }
        }
        return value;
    }
    async _processResponse(res, options) {
        return new Promise(async (resolve, reject) => {
            const statusCode = res.message.statusCode;
            const response = {
                statusCode: statusCode,
                result: null,
                headers: {}
            };
            // not found leads to null obj returned
            if (statusCode == HttpCodes.NotFound) {
                resolve(response);
            }
            let obj;
            let contents;
            // get the result from the body
            try {
                contents = await res.readBody();
                if (contents && contents.length > 0) {
                    if (options && options.deserializeDates) {
                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);
                    }
                    else {
                        obj = JSON.parse(contents);
                    }
                    response.result = obj;
                }
                response.headers = res.message.headers;
            }
            catch (err) {
                // Invalid resource (contents not json);  leaving result obj null
            }
            // note that 3xx redirects are handled by the http layer.
            if (statusCode > 299) {
                let msg;
                // if exception/error in body, attempt to get better error
                if (obj && obj.message) {
                    msg = obj.message;
                }
                else if (contents && contents.length > 0) {
                    // it may be the case that the exception is in the body message as string
                    msg = contents;
                }
                else {
                    msg = 'Failed request: (' + statusCode + ')';
                }
                let err = new HttpClientError(msg, statusCode);
                err.result = response.result;
                reject(err);
            }
            else {
                resolve(response);
            }
        });
    }
}
exports.HttpClient = HttpClient;


/***/ }),

/***/ 990:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function getProxyUrl(reqUrl) {
    let usingSsl = reqUrl.protocol === 'https:';
    let proxyUrl;
    if (checkBypass(reqUrl)) {
        return proxyUrl;
    }
    let proxyVar;
    if (usingSsl) {
        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];
    }
    else {
        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];
    }
    if (proxyVar) {
        proxyUrl = new URL(proxyVar);
    }
    return proxyUrl;
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
    if (!reqUrl.hostname) {
        return false;
    }
    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
    if (!noProxy) {
        return false;
    }
    // Determine the request port
    let reqPort;
    if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
    }
    else if (reqUrl.protocol === 'http:') {
        reqPort = 80;
    }
    else if (reqUrl.protocol === 'https:') {
        reqPort = 443;
    }
    // Format the request hostname and hostname with port
    let upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === 'number') {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    // Compare request host against noproxy
    for (let upperNoProxyItem of noProxy
        .split(',')
        .map(x => x.trim().toUpperCase())
        .filter(x => x)) {
        if (upperReqHosts.some(x => x === upperNoProxyItem)) {
            return true;
        }
    }
    return false;
}
exports.checkBypass = checkBypass;


/***/ }),

/***/ 108:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(299);


/***/ }),

/***/ 299:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


var net = __nccwpck_require__(808);
var tls = __nccwpck_require__(404);
var http = __nccwpck_require__(685);
var https = __nccwpck_require__(687);
var events = __nccwpck_require__(361);
var assert = __nccwpck_require__(491);
var util = __nccwpck_require__(837);


exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}


function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];

  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function(socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);

    function onFree() {
      self.emit('free', socket, options);
    }

    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);

  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64');
  }

  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade);   // for v0.6
  connectReq.once('connect', onConnect);   // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head);
    });
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();

    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d',
        res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' +
        'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }

  function onError(cause) {
    connectReq.removeAllListeners();

    debug('tunneling socket could not be established, cause=%s\n',
          cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' +
                          'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);

  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket);
    });
  }
};

function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}


function toOptions(host, port, localAddress) {
  if (typeof host === 'string') { // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}

function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}


var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  }
} else {
  debug = function() {};
}
exports.debug = debug; // for test


/***/ }),

/***/ 771:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var fillArrayVal = kotlin_kotlin.$_$.x6;
  var Unit_getInstance = kotlin_kotlin.$_$.m3;
  var classMeta = kotlin_kotlin.$_$.u6;
  var objectMeta = kotlin_kotlin.$_$.r7;
  var toString = kotlin_kotlin.$_$.ga;
  //endregion
  //region block: pre-declaration
  None.prototype = Object.create(atomicfu$TraceBase.prototype);
  None.prototype.constructor = None;
  //endregion
  function loop(_this__u8e3s4, action) {
    while (true) {
      action(_this__u8e3s4.zh_1);
    }
  }
  function loop_0(_this__u8e3s4, action) {
    while (true) {
      action(_this__u8e3s4.ai_1);
    }
  }
  function atomicfu$AtomicRefArray$ref(size) {
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = size;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = atomic$ref$1(null);
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.bi_1 = tmp_2;
  }
  atomicfu$AtomicRefArray$ref.prototype.ci = function () {
    return this.bi_1.length;
  };
  atomicfu$AtomicRefArray$ref.prototype.atomicfu$get = function (index) {
    return this.bi_1[index];
  };
  atomicfu$AtomicRefArray$ref.$metadata$ = classMeta('AtomicArray');
  Object.defineProperty(atomicfu$AtomicRefArray$ref.prototype, 'atomicfu$size', {
    configurable: true,
    get: atomicfu$AtomicRefArray$ref.prototype.ci
  });
  function atomicfu$AtomicRefArray$ofNulls(size) {
    return new atomicfu$AtomicRefArray$ref(size);
  }
  function getAndUpdate(_this__u8e3s4, function_0) {
    while (true) {
      var cur = _this__u8e3s4.ai_1;
      var upd = function_0(cur);
      if (_this__u8e3s4.atomicfu$compareAndSet(cur, upd))
        return cur;
    }
  }
  function None() {
    None_instance = this;
    atomicfu$TraceBase.call(this);
  }
  None.$metadata$ = objectMeta('None', undefined, undefined, undefined, undefined, atomicfu$TraceBase.prototype);
  var None_instance;
  function None_getInstance() {
    if (None_instance == null)
      new None();
    return None_instance;
  }
  function atomicfu$TraceBase() {
  }
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$1 = function (event) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$2 = function (event1, event2) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$3 = function (event1, event2, event3) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$4 = function (event1, event2, event3, event4) {
  };
  atomicfu$TraceBase.$metadata$ = classMeta('TraceBase');
  function AtomicRef(value) {
    this.zh_1 = value;
  }
  AtomicRef.prototype.di = function (_set____db54di) {
    this.zh_1 = _set____db54di;
  };
  AtomicRef.prototype.ei = function () {
    return this.zh_1;
  };
  AtomicRef.prototype.fi = function (value) {
    this.zh_1 = value;
  };
  AtomicRef.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.zh_1 === expect))
      return false;
    this.zh_1 = update;
    return true;
  };
  AtomicRef.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.zh_1;
    this.zh_1 = value;
    return oldValue;
  };
  AtomicRef.prototype.toString = function () {
    return toString(this.zh_1);
  };
  AtomicRef.$metadata$ = classMeta('AtomicRef');
  Object.defineProperty(AtomicRef.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicRef.prototype.ei,
    set: AtomicRef.prototype.di
  });
  function atomic$ref$1(initial) {
    return atomic(initial, None_getInstance());
  }
  function AtomicBoolean(value) {
    this.gi_1 = value;
  }
  AtomicBoolean.prototype.hi = function (_set____db54di) {
    this.gi_1 = _set____db54di;
  };
  AtomicBoolean.prototype.ei = function () {
    return this.gi_1;
  };
  AtomicBoolean.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.gi_1 === expect))
      return false;
    this.gi_1 = update;
    return true;
  };
  AtomicBoolean.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.gi_1;
    this.gi_1 = value;
    return oldValue;
  };
  AtomicBoolean.prototype.toString = function () {
    return this.gi_1.toString();
  };
  AtomicBoolean.$metadata$ = classMeta('AtomicBoolean');
  Object.defineProperty(AtomicBoolean.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicBoolean.prototype.ei,
    set: AtomicBoolean.prototype.hi
  });
  function atomic$boolean$1(initial) {
    return atomic_0(initial, None_getInstance());
  }
  function AtomicInt(value) {
    this.ai_1 = value;
  }
  AtomicInt.prototype.ii = function (_set____db54di) {
    this.ai_1 = _set____db54di;
  };
  AtomicInt.prototype.ei = function () {
    return this.ai_1;
  };
  AtomicInt.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.ai_1 === expect))
      return false;
    this.ai_1 = update;
    return true;
  };
  AtomicInt.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.ai_1;
    this.ai_1 = value;
    return oldValue;
  };
  AtomicInt.prototype.atomicfu$getAndIncrement = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.ai_1;
    tmp0_this.ai_1 = tmp1 + 1 | 0;
    return tmp1;
  };
  AtomicInt.prototype.atomicfu$getAndDecrement = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.ai_1;
    tmp0_this.ai_1 = tmp1 - 1 | 0;
    return tmp1;
  };
  AtomicInt.prototype.atomicfu$getAndAdd = function (delta) {
    var oldValue = this.ai_1;
    var tmp0_this = this;
    tmp0_this.ai_1 = tmp0_this.ai_1 + delta | 0;
    return oldValue;
  };
  AtomicInt.prototype.atomicfu$addAndGet = function (delta) {
    var tmp0_this = this;
    tmp0_this.ai_1 = tmp0_this.ai_1 + delta | 0;
    return this.ai_1;
  };
  AtomicInt.prototype.atomicfu$incrementAndGet = function () {
    var tmp0_this = this;
    tmp0_this.ai_1 = tmp0_this.ai_1 + 1 | 0;
    return tmp0_this.ai_1;
  };
  AtomicInt.prototype.atomicfu$decrementAndGet = function () {
    var tmp0_this = this;
    tmp0_this.ai_1 = tmp0_this.ai_1 - 1 | 0;
    return tmp0_this.ai_1;
  };
  AtomicInt.prototype.toString = function () {
    return this.ai_1.toString();
  };
  AtomicInt.$metadata$ = classMeta('AtomicInt');
  Object.defineProperty(AtomicInt.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicInt.prototype.ei,
    set: AtomicInt.prototype.ii
  });
  function atomic$int$1(initial) {
    return atomic_1(initial, None_getInstance());
  }
  function AtomicLong(value) {
    this.ji_1 = value;
  }
  AtomicLong.prototype.ki = function (_set____db54di) {
    this.ji_1 = _set____db54di;
  };
  AtomicLong.prototype.ei = function () {
    return this.ji_1;
  };
  AtomicLong.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!this.ji_1.equals(expect))
      return false;
    this.ji_1 = update;
    return true;
  };
  AtomicLong.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.ji_1;
    this.ji_1 = value;
    return oldValue;
  };
  AtomicLong.prototype.atomicfu$getAndIncrement$long = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.ji_1;
    tmp0_this.ji_1 = tmp1.fg();
    return tmp1;
  };
  AtomicLong.prototype.atomicfu$getAndDecrement$long = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.ji_1;
    tmp0_this.ji_1 = tmp1.gg();
    return tmp1;
  };
  AtomicLong.prototype.atomicfu$getAndAdd$long = function (delta) {
    var oldValue = this.ji_1;
    var tmp0_this = this;
    tmp0_this.ji_1 = tmp0_this.ji_1.z4(delta);
    return oldValue;
  };
  AtomicLong.prototype.atomicfu$addAndGet$long = function (delta) {
    var tmp0_this = this;
    tmp0_this.ji_1 = tmp0_this.ji_1.z4(delta);
    return this.ji_1;
  };
  AtomicLong.prototype.atomicfu$incrementAndGet$long = function () {
    var tmp0_this = this;
    tmp0_this.ji_1 = tmp0_this.ji_1.fg();
    return tmp0_this.ji_1;
  };
  AtomicLong.prototype.atomicfu$decrementAndGet$long = function () {
    var tmp0_this = this;
    tmp0_this.ji_1 = tmp0_this.ji_1.gg();
    return tmp0_this.ji_1;
  };
  AtomicLong.prototype.toString = function () {
    return this.ji_1.toString();
  };
  AtomicLong.$metadata$ = classMeta('AtomicLong');
  Object.defineProperty(AtomicLong.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicLong.prototype.ei,
    set: AtomicLong.prototype.ki
  });
  function atomic$long$1(initial) {
    return atomic_2(initial, None_getInstance());
  }
  function atomic(initial, trace) {
    return new AtomicRef(initial);
  }
  function atomic_0(initial, trace) {
    return new AtomicBoolean(initial);
  }
  function atomic_1(initial, trace) {
    return new AtomicInt(initial);
  }
  function atomic_2(initial, trace) {
    return new AtomicLong(initial);
  }
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = atomicfu$AtomicRefArray$ofNulls;
  _.$_$.b = atomic$boolean$1;
  _.$_$.c = atomic$long$1;
  _.$_$.d = atomic$ref$1;
  _.$_$.e = atomic$int$1;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(737)));

//# sourceMappingURL=88b0986a7186d029-atomicfu-js-ir.js.map

/***/ }),

/***/ 737:
/***/ ((module) => {

//region block: polyfills
if (typeof ArrayBuffer.isView === 'undefined') {
  ArrayBuffer.isView = function (a) {
    return a != null && a.__proto__ != null && a.__proto__.__proto__ === Int8Array.prototype.__proto__;
  };
}
if (typeof Array.prototype.fill === 'undefined') {
  Object.defineProperty(Array.prototype, 'fill', {value: function (value) {
    if (this == null) {
      throw new TypeError('this is null or not defined');
    }
    var O = Object(this);
    var len = O.length >>> 0;
    var start = arguments[1];
    var relativeStart = start >> 0;
    var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len);
    var end = arguments[2];
    var relativeEnd = end === undefined ? len : end >> 0;
    var finalValue = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len);
    while (k < finalValue) {
      O[k] = value;
      k++;
    }
    return O;
  }});
}
[Int8Array, Int16Array, Uint16Array, Int32Array, Float32Array, Float64Array].forEach(function (TypedArray) {
  if (typeof TypedArray.prototype.fill === 'undefined') {
    Object.defineProperty(TypedArray.prototype, 'fill', {value: Array.prototype.fill});
  }
});
if (typeof Math.clz32 === 'undefined') {
  Math.clz32 = function (log, LN2) {
    return function (x) {
      var asUint = x >>> 0;
      if (asUint === 0) {
        return 32;
      }
      return 31 - (log(asUint) / LN2 | 0) | 0;
    };
  }(Math.log, Math.LN2);
}
if (typeof String.prototype.startsWith === 'undefined') {
  Object.defineProperty(String.prototype, 'startsWith', {value: function (searchString, position) {
    position = position || 0;
    return this.lastIndexOf(searchString, position) === position;
  }});
}
if (typeof Math.imul === 'undefined') {
  Math.imul = function imul(a, b) {
    return (a & 4.29490176E9) * (b & 65535) + (a & 65535) * (b | 0) | 0;
  };
}
//endregion
(function (_) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var isView = ArrayBuffer.isView;
  var clz32 = Math.clz32;
  //endregion
  //region block: pre-declaration
  Exception.prototype = Object.create(Error.prototype);
  Exception.prototype.constructor = Exception;
  RuntimeException.prototype = Object.create(Exception.prototype);
  RuntimeException.prototype.constructor = RuntimeException;
  KotlinNothingValueException.prototype = Object.create(RuntimeException.prototype);
  KotlinNothingValueException.prototype.constructor = KotlinNothingValueException;
  AbstractSet.prototype = Object.create(AbstractCollection.prototype);
  AbstractSet.prototype.constructor = AbstractSet;
  AbstractMap$keys$1.prototype = Object.create(AbstractSet.prototype);
  AbstractMap$keys$1.prototype.constructor = AbstractMap$keys$1;
  SequenceBuilderIterator.prototype = Object.create(SequenceScope.prototype);
  SequenceBuilderIterator.prototype.constructor = SequenceBuilderIterator;
  function plus(context) {
    var tmp;
    if (context === EmptyCoroutineContext_getInstance()) {
      tmp = this;
    } else {
      tmp = context.f4(this, CoroutineContext$plus$lambda());
    }
    return tmp;
  }
  function get(key) {
    var tmp;
    if (equals_1(this.j1(), key)) {
      tmp = isInterface(this, Element) ? this : THROW_CCE();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function fold(initial, operation) {
    return operation(initial, this);
  }
  function minusKey(key) {
    return equals_1(this.j1(), key) ? EmptyCoroutineContext_getInstance() : this;
  }
  function releaseInterceptedContinuation(continuation) {
  }
  function get_0(key) {
    if (key instanceof AbstractCoroutineContextKey) {
      var tmp;
      if (key.d4(this.j1())) {
        var tmp_0 = key.c4(this);
        tmp = (!(tmp_0 == null) ? isInterface(tmp_0, Element) : false) ? tmp_0 : null;
      } else {
        tmp = null;
      }
      return tmp;
    }
    var tmp_1;
    if (Key_getInstance() === key) {
      tmp_1 = isInterface(this, Element) ? this : THROW_CCE();
    } else {
      tmp_1 = null;
    }
    return tmp_1;
  }
  function minusKey_0(key) {
    if (key instanceof AbstractCoroutineContextKey) {
      return (key.d4(this.j1()) ? !(key.c4(this) == null) : false) ? EmptyCoroutineContext_getInstance() : this;
    }
    return Key_getInstance() === key ? EmptyCoroutineContext_getInstance() : this;
  }
  CoroutineSingletons.prototype = Object.create(Enum.prototype);
  CoroutineSingletons.prototype.constructor = CoroutineSingletons;
  KVariance.prototype = Object.create(Enum.prototype);
  KVariance.prototype.constructor = KVariance;
  DeepRecursiveScopeImpl.prototype = Object.create(DeepRecursiveScope.prototype);
  DeepRecursiveScopeImpl.prototype.constructor = DeepRecursiveScopeImpl;
  LazyThreadSafetyMode.prototype = Object.create(Enum.prototype);
  LazyThreadSafetyMode.prototype.constructor = LazyThreadSafetyMode;
  Error_0.prototype = Object.create(Error.prototype);
  Error_0.prototype.constructor = Error_0;
  NotImplementedError.prototype = Object.create(Error_0.prototype);
  NotImplementedError.prototype.constructor = NotImplementedError;
  IntProgressionIterator.prototype = Object.create(IntIterator.prototype);
  IntProgressionIterator.prototype.constructor = IntProgressionIterator;
  CharProgressionIterator.prototype = Object.create(CharIterator.prototype);
  CharProgressionIterator.prototype.constructor = CharProgressionIterator;
  IntRange.prototype = Object.create(IntProgression.prototype);
  IntRange.prototype.constructor = IntRange;
  CharRange.prototype = Object.create(CharProgression.prototype);
  CharRange.prototype.constructor = CharRange;
  AbstractMutableCollection.prototype = Object.create(AbstractCollection.prototype);
  AbstractMutableCollection.prototype.constructor = AbstractMutableCollection;
  AbstractMutableList.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableList.prototype.constructor = AbstractMutableList;
  AbstractMutableSet.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableSet.prototype.constructor = AbstractMutableSet;
  AbstractEntrySet.prototype = Object.create(AbstractMutableSet.prototype);
  AbstractEntrySet.prototype.constructor = AbstractEntrySet;
  AbstractMutableMap$keys$1.prototype = Object.create(AbstractMutableSet.prototype);
  AbstractMutableMap$keys$1.prototype.constructor = AbstractMutableMap$keys$1;
  AbstractMutableMap.prototype = Object.create(AbstractMap.prototype);
  AbstractMutableMap.prototype.constructor = AbstractMutableMap;
  ArrayList.prototype = Object.create(AbstractMutableList.prototype);
  ArrayList.prototype.constructor = ArrayList;
  EntrySet.prototype = Object.create(AbstractEntrySet.prototype);
  EntrySet.prototype.constructor = EntrySet;
  HashMap.prototype = Object.create(AbstractMutableMap.prototype);
  HashMap.prototype.constructor = HashMap;
  HashSet.prototype = Object.create(AbstractMutableSet.prototype);
  HashSet.prototype.constructor = HashSet;
  function createJsMap() {
    var result = Object.create(null);
    result['foo'] = 1;
    jsDeleteProperty(result, 'foo');
    return result;
  }
  ChainEntry.prototype = Object.create(SimpleEntry.prototype);
  ChainEntry.prototype.constructor = ChainEntry;
  EntrySet_0.prototype = Object.create(AbstractEntrySet.prototype);
  EntrySet_0.prototype.constructor = EntrySet_0;
  LinkedHashMap.prototype = Object.create(HashMap.prototype);
  LinkedHashMap.prototype.constructor = LinkedHashMap;
  LinkedHashSet.prototype = Object.create(HashSet.prototype);
  LinkedHashSet.prototype.constructor = LinkedHashSet;
  IllegalStateException.prototype = Object.create(RuntimeException.prototype);
  IllegalStateException.prototype.constructor = IllegalStateException;
  CancellationException.prototype = Object.create(IllegalStateException.prototype);
  CancellationException.prototype.constructor = CancellationException;
  PrimitiveKClassImpl.prototype = Object.create(KClassImpl.prototype);
  PrimitiveKClassImpl.prototype.constructor = PrimitiveKClassImpl;
  NothingKClassImpl.prototype = Object.create(KClassImpl.prototype);
  NothingKClassImpl.prototype.constructor = NothingKClassImpl;
  SimpleKClassImpl.prototype = Object.create(KClassImpl.prototype);
  SimpleKClassImpl.prototype.constructor = SimpleKClassImpl;
  DurationUnit.prototype = Object.create(Enum.prototype);
  DurationUnit.prototype.constructor = DurationUnit;
  Long.prototype = Object.create(Number_0.prototype);
  Long.prototype.constructor = Long;
  _no_name_provided__qut3iv_2.prototype = Object.create(CoroutineImpl.prototype);
  _no_name_provided__qut3iv_2.prototype.constructor = _no_name_provided__qut3iv_2;
  _no_name_provided__qut3iv_3.prototype = Object.create(CoroutineImpl.prototype);
  _no_name_provided__qut3iv_3.prototype.constructor = _no_name_provided__qut3iv_3;
  IllegalArgumentException.prototype = Object.create(RuntimeException.prototype);
  IllegalArgumentException.prototype.constructor = IllegalArgumentException;
  NoSuchElementException.prototype = Object.create(RuntimeException.prototype);
  NoSuchElementException.prototype.constructor = NoSuchElementException;
  UnsupportedOperationException.prototype = Object.create(RuntimeException.prototype);
  UnsupportedOperationException.prototype.constructor = UnsupportedOperationException;
  IndexOutOfBoundsException.prototype = Object.create(RuntimeException.prototype);
  IndexOutOfBoundsException.prototype.constructor = IndexOutOfBoundsException;
  AssertionError.prototype = Object.create(Error_0.prototype);
  AssertionError.prototype.constructor = AssertionError;
  NumberFormatException.prototype = Object.create(IllegalArgumentException.prototype);
  NumberFormatException.prototype.constructor = NumberFormatException;
  ArithmeticException.prototype = Object.create(RuntimeException.prototype);
  ArithmeticException.prototype.constructor = ArithmeticException;
  NullPointerException.prototype = Object.create(RuntimeException.prototype);
  NullPointerException.prototype.constructor = NullPointerException;
  NoWhenBranchMatchedException.prototype = Object.create(RuntimeException.prototype);
  NoWhenBranchMatchedException.prototype.constructor = NoWhenBranchMatchedException;
  ClassCastException.prototype = Object.create(RuntimeException.prototype);
  ClassCastException.prototype.constructor = ClassCastException;
  UninitializedPropertyAccessException.prototype = Object.create(RuntimeException.prototype);
  UninitializedPropertyAccessException.prototype.constructor = UninitializedPropertyAccessException;
  //endregion
  function toList(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this__u8e3s4[0]);
      default:
        return toMutableList(_this__u8e3s4);
    }
  }
  function withIndex(_this__u8e3s4) {
    return new IndexingIterable(withIndex$lambda(_this__u8e3s4));
  }
  function get_indices(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex(_this__u8e3s4));
  }
  function get_indices_0(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex_0(_this__u8e3s4));
  }
  function associateBy(_this__u8e3s4, keySelector) {
    var capacity = coerceAtLeast(mapCapacity(_this__u8e3s4.length), 16);
    var tmp$ret$0;
    {
      var tmp0_associateByTo = LinkedHashMap_init_$Create$_1(capacity);
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        tmp0_associateByTo.a(keySelector(element), element);
      }
      tmp$ret$0 = tmp0_associateByTo;
    }
    return tmp$ret$0;
  }
  function joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function indexOf(_this__u8e3s4, element) {
    if (element == null) {
      var inductionVariable = 0;
      var last = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (_this__u8e3s4[index] == null) {
            return index;
          }
        }
         while (inductionVariable <= last);
    } else {
      var inductionVariable_0 = 0;
      var last_0 = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable_0 <= last_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          if (equals_1(element, _this__u8e3s4[index_0])) {
            return index_0;
          }
        }
         while (inductionVariable_0 <= last_0);
    }
    return -1;
  }
  function single(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Array is empty.');
      case 1:
        tmp = _this__u8e3s4[0];
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Array has more than one element.');
    }
    return tmp;
  }
  function any(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (predicate(new Char_0(element)))
        return true;
    }
    return false;
  }
  function toMutableList(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asCollection(_this__u8e3s4));
  }
  function get_lastIndex(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function get_lastIndex_0(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function associateByTo(_this__u8e3s4, destination, keySelector) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.a(keySelector(element), element);
    }
    return destination;
  }
  function joinTo(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.b(prefix);
    var count = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      count = count + 1 | 0;
      if (count > 1) {
        buffer.b(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.b(truncated);
    }
    buffer.b(postfix);
    return buffer;
  }
  function toSet(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    switch (tmp0_subject) {
      case 0:
        return emptySet();
      case 1:
        return setOf_0(_this__u8e3s4[0]);
      default:
        return toCollection(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.length)));
    }
  }
  function firstOrNull(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (predicate(element))
        return element;
    }
    return null;
  }
  function isEmpty(_this__u8e3s4) {
    return _this__u8e3s4.length === 0;
  }
  function contains(_this__u8e3s4, element) {
    return indexOf(_this__u8e3s4, element) >= 0;
  }
  function toCollection(_this__u8e3s4, destination) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.c(item);
    }
    return destination;
  }
  function map(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      var tmp0_mapTo = ArrayList_init_$Create$_0(_this__u8e3s4.length);
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        tmp0_mapTo.c(transform(item));
      }
      tmp$ret$0 = tmp0_mapTo;
    }
    return tmp$ret$0;
  }
  function forEach(_this__u8e3s4, action) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      action(element);
    }
  }
  function mapTo(_this__u8e3s4, destination, transform) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.c(transform(item));
    }
    return destination;
  }
  function get_lastIndex_1(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function withIndex$lambda($this_withIndex) {
    return function () {
      return arrayIterator($this_withIndex);
    };
  }
  function firstOrNull_0(_this__u8e3s4, predicate) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (predicate(element))
        return element;
    }
    return null;
  }
  function toHashSet(_this__u8e3s4) {
    return toCollection_0(_this__u8e3s4, HashSet_init_$Create$_1(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 12))));
  }
  function toBooleanArray(_this__u8e3s4) {
    var result = booleanArray(_this__u8e3s4.g());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function map_0(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(_this__u8e3s4, 10));
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var item = tmp0_iterator.f();
        tmp0_mapTo.c(transform(item));
      }
      tmp$ret$0 = tmp0_mapTo;
    }
    return tmp$ret$0;
  }
  function joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo_0(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function fold_0(_this__u8e3s4, initial, operation) {
    var accumulator = initial;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      accumulator = operation(accumulator, element);
    }
    return accumulator;
  }
  function find(_this__u8e3s4, predicate) {
    var tmp$ret$0;
    $l$block: {
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        if (predicate(element)) {
          tmp$ret$0 = element;
          break $l$block;
        }
      }
      tmp$ret$0 = null;
    }
    return tmp$ret$0;
  }
  function toCollection_0(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var item = tmp0_iterator.f();
      destination.c(item);
    }
    return destination;
  }
  function mapTo_0(_this__u8e3s4, destination, transform) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var item = tmp0_iterator.f();
      destination.c(transform(item));
    }
    return destination;
  }
  function joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.b(prefix);
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.d();
    $l$loop: while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      count = count + 1 | 0;
      if (count > 1) {
        buffer.b(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.b(truncated);
    }
    buffer.b(postfix);
    return buffer;
  }
  function joinTo$default(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      separator = ', ';
    if (!(($mask0 & 4) === 0))
      prefix = '';
    if (!(($mask0 & 8) === 0))
      postfix = '';
    if (!(($mask0 & 16) === 0))
      limit = -1;
    if (!(($mask0 & 32) === 0))
      truncated = '...';
    if (!(($mask0 & 64) === 0))
      transform = null;
    return joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform);
  }
  function sortedWith(_this__u8e3s4, comparator) {
    if (isInterface(_this__u8e3s4, Collection)) {
      if (_this__u8e3s4.g() <= 1)
        return toList_0(_this__u8e3s4);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_toTypedArray = _this__u8e3s4;
          tmp$ret$0 = copyToArray(tmp0_toTypedArray);
        }
        var tmp = tmp$ret$0;
        var tmp1_apply = isArray(tmp) ? tmp : THROW_CCE();
        {
        }
        {
          sortWith_0(tmp1_apply, comparator);
        }
        tmp$ret$1 = tmp1_apply;
      }
      return asList(tmp$ret$1);
    }
    var tmp$ret$2;
    {
      var tmp2_apply = toMutableList_0(_this__u8e3s4);
      {
      }
      {
        sortWith(tmp2_apply, comparator);
      }
      tmp$ret$2 = tmp2_apply;
    }
    return tmp$ret$2;
  }
  function toList_0(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.g();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyList();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List)) {
            tmp_0 = _this__u8e3s4.h(0);
          } else {
            tmp_0 = _this__u8e3s4.d().f();
          }

          tmp = listOf_0(tmp_0);
          break;
        default:
          tmp = toMutableList_1(_this__u8e3s4);
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyList(toMutableList_0(_this__u8e3s4));
  }
  function toMutableList_0(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection))
      return toMutableList_1(_this__u8e3s4);
    return toCollection_0(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function toMutableList_1(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(_this__u8e3s4);
  }
  function associateByTo_0(_this__u8e3s4, destination, keySelector, valueTransform) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      destination.a(keySelector(element), valueTransform(element));
    }
    return destination;
  }
  function all(_this__u8e3s4, predicate) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.i();
    } else {
      tmp = false;
    }
    if (tmp)
      return true;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (!predicate(element))
        return false;
    }
    return true;
  }
  function any_0(_this__u8e3s4, predicate) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.i();
    } else {
      tmp = false;
    }
    if (tmp)
      return false;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (predicate(element))
        return true;
    }
    return false;
  }
  function last(_this__u8e3s4) {
    if (_this__u8e3s4.i())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this__u8e3s4.h(get_lastIndex_2(_this__u8e3s4));
  }
  function singleOrNull(_this__u8e3s4) {
    return _this__u8e3s4.g() === 1 ? _this__u8e3s4.h(0) : null;
  }
  function lastOrNull(_this__u8e3s4) {
    return _this__u8e3s4.i() ? null : _this__u8e3s4.h(_this__u8e3s4.g() - 1 | 0);
  }
  function minOrNull(_this__u8e3s4) {
    var iterator = _this__u8e3s4.d();
    if (!iterator.e())
      return null;
    var min = iterator.f();
    while (iterator.e()) {
      var e = iterator.f();
      if (compareTo_0(min, e) > 0)
        min = e;
    }
    return min;
  }
  function filter(_this__u8e3s4, predicate) {
    var tmp$ret$0;
    {
      var tmp0_filterTo = ArrayList_init_$Create$();
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        if (predicate(element)) {
          tmp0_filterTo.c(element);
        }
      }
      tmp$ret$0 = tmp0_filterTo;
    }
    return tmp$ret$0;
  }
  function mapIndexedNotNull(_this__u8e3s4, transform) {
    var tmp$ret$1;
    {
      var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
      {
        var index = 0;
        var tmp0_iterator = _this__u8e3s4.d();
        while (tmp0_iterator.e()) {
          var item = tmp0_iterator.f();
          {
            var tmp1 = index;
            index = tmp1 + 1 | 0;
            var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
            var tmp0_safe_receiver = transform(tmp0__anonymous__q1qw7t, item);
            if (tmp0_safe_receiver == null)
              null;
            else {
              var tmp$ret$0;
              {
                {
                }
                tmp1_mapIndexedNotNullTo.c(tmp0_safe_receiver);
                tmp$ret$0 = Unit_getInstance();
              }
            }
          }
        }
      }
      tmp$ret$1 = tmp1_mapIndexedNotNullTo;
    }
    return tmp$ret$1;
  }
  function filterTo(_this__u8e3s4, destination, predicate) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (predicate(element)) {
        destination.c(element);
      }
    }
    return destination;
  }
  function mapIndexedNotNullTo(_this__u8e3s4, destination, transform) {
    {
      var index = 0;
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var item = tmp0_iterator.f();
        {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
          var tmp0_safe_receiver = transform(tmp0__anonymous__q1qw7t, item);
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$0;
            {
              {
              }
              destination.c(tmp0_safe_receiver);
              tmp$ret$0 = Unit_getInstance();
            }
          }
        }
      }
    }
    return destination;
  }
  function forEachIndexed(_this__u8e3s4, action) {
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var item = tmp0_iterator.f();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      action(checkIndexOverflow(tmp1), item);
    }
  }
  function single_0(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    if (isInterface(tmp0_subject, List))
      return single_1(_this__u8e3s4);
    else {
      var iterator = _this__u8e3s4.d();
      if (!iterator.e())
        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
      var single = iterator.f();
      if (iterator.e())
        throw IllegalArgumentException_init_$Create$_0('Collection has more than one element.');
      return single;
    }
  }
  function single_1(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.g();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('List is empty.');
      case 1:
        tmp = _this__u8e3s4.h(0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('List has more than one element.');
    }
    return tmp;
  }
  function forEach_0(_this__u8e3s4, action) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.j().d();
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      action(element);
    }
  }
  function titlecaseImpl(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = toString_0(_this__u8e3s4);
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var uppercase = tmp$ret$2;
    if (uppercase.length > 1) {
      var tmp;
      if (equals_1(new Char_0(_this__u8e3s4), new Char_0(_Char___init__impl__6a9atx(329)))) {
        tmp = uppercase;
      } else {
        var tmp$ret$7;
        {
          var tmp3_plus = charSequenceGet(uppercase, 0);
          var tmp$ret$6;
          {
            var tmp$ret$4;
            {
              var tmp$ret$3;
              {
                tmp$ret$3 = uppercase;
              }
              tmp$ret$4 = tmp$ret$3.substring(1);
            }
            var tmp2_lowercase = tmp$ret$4;
            var tmp$ret$5;
            {
              tmp$ret$5 = tmp2_lowercase;
            }
            tmp$ret$6 = tmp$ret$5.toLowerCase();
          }
          var tmp4_plus = tmp$ret$6;
          tmp$ret$7 = toString_0(tmp3_plus) + tmp4_plus;
        }
        tmp = tmp$ret$7;
      }
      return tmp;
    }
    return toString_0(titlecaseChar(_this__u8e3s4));
  }
  function until(_this__u8e3s4, to) {
    if (to <= IntCompanionObject_getInstance().l_1)
      return Companion_getInstance_11().k_1;
    return numberRangeToNumber(_this__u8e3s4, to - 1 | 0);
  }
  function coerceIn(_this__u8e3s4, minimumValue, maximumValue) {
    if (minimumValue.r(maximumValue) > 0)
      throw IllegalArgumentException_init_$Create$_0('Cannot coerce value to an empty range: maximum ' + toString_2(maximumValue) + ' is less than minimum ' + toString_2(minimumValue) + '.');
    if (_this__u8e3s4.r(minimumValue) < 0)
      return minimumValue;
    if (_this__u8e3s4.r(maximumValue) > 0)
      return maximumValue;
    return _this__u8e3s4;
  }
  function coerceAtLeast(_this__u8e3s4, minimumValue) {
    return _this__u8e3s4 < minimumValue ? minimumValue : _this__u8e3s4;
  }
  function step(_this__u8e3s4, step) {
    checkStepIsPositive(step > 0, step);
    return Companion_getInstance_9().v(_this__u8e3s4.s_1, _this__u8e3s4.t_1, _this__u8e3s4.u_1 > 0 ? step : -step | 0);
  }
  function coerceAtMost(_this__u8e3s4, maximumValue) {
    return _this__u8e3s4 > maximumValue ? maximumValue : _this__u8e3s4;
  }
  function downTo(_this__u8e3s4, to) {
    return Companion_getInstance_9().v(_this__u8e3s4, to, -1);
  }
  function coerceIn_0(_this__u8e3s4, minimumValue, maximumValue) {
    if (minimumValue > maximumValue)
      throw IllegalArgumentException_init_$Create$_0('Cannot coerce value to an empty range: maximum ' + maximumValue + ' is less than minimum ' + minimumValue + '.');
    if (_this__u8e3s4 < minimumValue)
      return minimumValue;
    if (_this__u8e3s4 > maximumValue)
      return maximumValue;
    return _this__u8e3s4;
  }
  function toList_1(_this__u8e3s4) {
    return optimizeReadOnlyList(toMutableList_2(_this__u8e3s4));
  }
  function map_1(_this__u8e3s4, transform) {
    return new TransformingSequence(_this__u8e3s4, transform);
  }
  function toMutableList_2(_this__u8e3s4) {
    return toCollection_1(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function toCollection_1(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var item = tmp0_iterator.f();
      destination.c(item);
    }
    return destination;
  }
  function plus_0(_this__u8e3s4, elements) {
    var tmp0_safe_receiver = collectionSizeOrNull(elements);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4.g() + tmp0_safe_receiver | 0;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    var result = LinkedHashSet_init_$Create$_1(mapCapacity(tmp1_elvis_lhs == null ? imul(_this__u8e3s4.g(), 2) : tmp1_elvis_lhs));
    result.w(_this__u8e3s4);
    addAll(result, elements);
    return result;
  }
  function getOrElse(_this__u8e3s4, index, defaultValue) {
    return (index >= 0 ? index <= get_lastIndex_3(_this__u8e3s4) : false) ? charSequenceGet(_this__u8e3s4, index) : defaultValue(index).x_1;
  }
  function indexOfLast(_this__u8e3s4, predicate) {
    var inductionVariable = charSequenceLength(_this__u8e3s4) - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        if (predicate(new Char_0(charSequenceGet(_this__u8e3s4, index)))) {
          return index;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  }
  function last_0(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(_this__u8e3s4) === 0;
    }
    if (tmp$ret$0)
      throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
    return charSequenceGet(_this__u8e3s4, get_lastIndex_3(_this__u8e3s4));
  }
  function drop(_this__u8e3s4, n) {
    {
      var tmp0_require = n >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Requested character count ' + n + ' is less than zero.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$2;
    {
      var tmp1_substring = coerceAtMost(n, _this__u8e3s4.length);
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4;
      }
      tmp$ret$2 = tmp$ret$1.substring(tmp1_substring);
    }
    return tmp$ret$2;
  }
  function all_0(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    while (inductionVariable < charSequenceLength(indexedObject)) {
      var element = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      if (!predicate(new Char_0(element)))
        return false;
    }
    return true;
  }
  function single_2(_this__u8e3s4) {
    var tmp0_subject = charSequenceLength(_this__u8e3s4);
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
      case 1:
        tmp = charSequenceGet(_this__u8e3s4, 0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Char sequence has more than one element.');
    }
    return tmp;
  }
  function indexOfFirst(_this__u8e3s4, predicate) {
    var inductionVariable = 0;
    var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (predicate(new Char_0(charSequenceGet(_this__u8e3s4, index)))) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function KotlinNothingValueException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    KotlinNothingValueException.call($this);
    return $this;
  }
  function KotlinNothingValueException_init_$Create$() {
    var tmp = KotlinNothingValueException_init_$Init$(Object.create(KotlinNothingValueException.prototype));
    captureStack(tmp, KotlinNothingValueException_init_$Create$);
    return tmp;
  }
  function KotlinNothingValueException() {
    captureStack(this, KotlinNothingValueException);
  }
  KotlinNothingValueException.$metadata$ = classMeta('KotlinNothingValueException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function get_code(_this__u8e3s4) {
    return Char__toInt_impl_vasixd(_this__u8e3s4);
  }
  function Char(code) {
    var tmp;
    var tmp$ret$0;
    {
      Companion_getInstance_13();
      var tmp0__get_code__88qj9g = _Char___init__impl__6a9atx(0);
      tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
    }
    if (code < tmp$ret$0) {
      tmp = true;
    } else {
      var tmp$ret$1;
      {
        Companion_getInstance_13();
        var tmp1__get_code__adl84j = _Char___init__impl__6a9atx(65535);
        tmp$ret$1 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
      }
      tmp = code > tmp$ret$1;
    }
    if (tmp) {
      throw IllegalArgumentException_init_$Create$_0('Invalid Char code: ' + code);
    }
    return numberToChar(code);
  }
  function AbstractCollection$toString$lambda(this$0) {
    return function (it) {
      return it === this$0 ? '(this Collection)' : toString_1(it);
    };
  }
  function AbstractCollection() {
  }
  AbstractCollection.prototype.a1 = function (element) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(this, Collection)) {
        tmp = this.i();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = this.d();
      while (tmp0_iterator.e()) {
        var element_0 = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = equals_1(element_0, element);
        }
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  AbstractCollection.prototype.b1 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.i();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.a1(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  AbstractCollection.prototype.i = function () {
    return this.g() === 0;
  };
  AbstractCollection.prototype.toString = function () {
    return joinToString$default_0(this, ', ', '[', ']', 0, null, AbstractCollection$toString$lambda(this), 24, null);
  };
  AbstractCollection.prototype.toArray = function () {
    return copyToArrayImpl(this);
  };
  AbstractCollection.$metadata$ = classMeta('AbstractCollection', [Collection]);
  function Companion() {
    Companion_instance = this;
  }
  Companion.prototype.c1 = function (index, size) {
    if (index < 0 ? true : index >= size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  Companion.prototype.d1 = function (index, size) {
    if (index < 0 ? true : index > size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  Companion.prototype.e1 = function (fromIndex, toIndex, size) {
    if (fromIndex < 0 ? true : toIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex + ', size: ' + size);
    }
    if (fromIndex > toIndex) {
      throw IllegalArgumentException_init_$Create$_0('fromIndex: ' + fromIndex + ' > toIndex: ' + toIndex);
    }
  };
  Companion.prototype.f1 = function (startIndex, endIndex, size) {
    if (startIndex < 0 ? true : endIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('startIndex: ' + startIndex + ', endIndex: ' + endIndex + ', size: ' + size);
    }
    if (startIndex > endIndex) {
      throw IllegalArgumentException_init_$Create$_0('startIndex: ' + startIndex + ' > endIndex: ' + endIndex);
    }
  };
  Companion.prototype.g1 = function (c) {
    var hashCode = 1;
    var tmp0_iterator = c.d();
    while (tmp0_iterator.e()) {
      var e = tmp0_iterator.f();
      var tmp = imul(31, hashCode);
      var tmp1_safe_receiver = e;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode_0(tmp1_safe_receiver);
      hashCode = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode;
  };
  Companion.prototype.h1 = function (c, other) {
    if (!(c.g() === other.g()))
      return false;
    var otherIterator = other.d();
    var tmp0_iterator = c.d();
    while (tmp0_iterator.e()) {
      var elem = tmp0_iterator.f();
      var elemOther = otherIterator.f();
      if (!equals_1(elem, elemOther)) {
        return false;
      }
    }
    return true;
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function AbstractMap$keys$1$iterator$1($entryIterator) {
    this.i1_1 = $entryIterator;
  }
  AbstractMap$keys$1$iterator$1.prototype.e = function () {
    return this.i1_1.e();
  };
  AbstractMap$keys$1$iterator$1.prototype.f = function () {
    return this.i1_1.f().j1();
  };
  AbstractMap$keys$1$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function toString($this, o) {
    return o === $this ? '(this Map)' : toString_1(o);
  }
  function implFindEntry($this, key) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_firstOrNull = $this.j();
      var tmp0_iterator = tmp0_firstOrNull.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$0;
        {
          tmp$ret$0 = equals_1(element.j1(), key);
        }
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.prototype.k1 = function (e) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp2_safe_receiver = e.j1();
        var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : hashCode_0(tmp2_safe_receiver);
        var tmp = tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs;
        var tmp0_safe_receiver = e.l1();
        var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
        tmp$ret$0 = tmp ^ (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  Companion_0.prototype.m1 = function (e) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        tmp$ret$0 = toString_1(e.j1()) + '=' + toString_1(e.l1());
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  Companion_0.prototype.n1 = function (e, other) {
    if (!(!(other == null) ? isInterface(other, Entry) : false))
      return false;
    return equals_1(e.j1(), other.j1()) ? equals_1(e.l1(), other.l1()) : false;
  };
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_0() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function AbstractMap$keys$1(this$0) {
    this.o1_1 = this$0;
    AbstractSet.call(this);
  }
  AbstractMap$keys$1.prototype.p1 = function (element) {
    return this.o1_1.s1(element);
  };
  AbstractMap$keys$1.prototype.a1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.p1((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMap$keys$1.prototype.d = function () {
    var entryIterator = this.o1_1.j().d();
    return new AbstractMap$keys$1$iterator$1(entryIterator);
  };
  AbstractMap$keys$1.prototype.g = function () {
    return this.o1_1.g();
  };
  AbstractMap$keys$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractSet.prototype);
  function AbstractMap$toString$lambda(this$0) {
    return function (it) {
      return this$0.t1(it);
    };
  }
  function AbstractMap() {
    Companion_getInstance_0();
    this.q1_1 = null;
    this.r1_1 = null;
  }
  AbstractMap.prototype.s1 = function (key) {
    return !(implFindEntry(this, key) == null);
  };
  AbstractMap.prototype.u1 = function (entry) {
    if (!(!(entry == null) ? isInterface(entry, Entry) : false))
      return false;
    var key = entry.j1();
    var value = entry.l1();
    var tmp$ret$0;
    {
      tmp$ret$0 = (isInterface(this, Map) ? this : THROW_CCE()).v1(key);
    }
    var ourValue = tmp$ret$0;
    if (!equals_1(value, ourValue)) {
      return false;
    }
    var tmp;
    if (ourValue == null) {
      var tmp$ret$1;
      {
        tmp$ret$1 = (isInterface(this, Map) ? this : THROW_CCE()).s1(key);
      }
      tmp = !tmp$ret$1;
    } else {
      tmp = false;
    }
    if (tmp) {
      return false;
    }
    return true;
  };
  AbstractMap.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Map) : false))
      return false;
    if (!(this.g() === other.g()))
      return false;
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_all = other.j();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.i();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.u1(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  AbstractMap.prototype.v1 = function (key) {
    var tmp0_safe_receiver = implFindEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.l1();
  };
  AbstractMap.prototype.hashCode = function () {
    return hashCode_0(this.j());
  };
  AbstractMap.prototype.i = function () {
    return this.g() === 0;
  };
  AbstractMap.prototype.g = function () {
    return this.j().g();
  };
  AbstractMap.prototype.w1 = function () {
    if (this.q1_1 == null) {
      var tmp = this;
      tmp.q1_1 = new AbstractMap$keys$1(this);
    }
    return ensureNotNull(this.q1_1);
  };
  AbstractMap.prototype.toString = function () {
    var tmp = this.j();
    return joinToString$default_0(tmp, ', ', '{', '}', 0, null, AbstractMap$toString$lambda(this), 24, null);
  };
  AbstractMap.prototype.t1 = function (entry) {
    return toString(this, entry.j1()) + '=' + toString(this, entry.l1());
  };
  AbstractMap.$metadata$ = classMeta('AbstractMap', [Map]);
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.prototype.x1 = function (c) {
    var hashCode = 0;
    var tmp0_iterator = c.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      var tmp = hashCode;
      var tmp1_safe_receiver = element;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode_0(tmp1_safe_receiver);
      hashCode = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode;
  };
  Companion_1.prototype.y1 = function (c, other) {
    if (!(c.g() === other.g()))
      return false;
    var tmp$ret$0;
    {
      tmp$ret$0 = c.b1(other);
    }
    return tmp$ret$0;
  };
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_1() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function AbstractSet() {
    Companion_getInstance_1();
    AbstractCollection.call(this);
  }
  AbstractSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().y1(this, other);
  };
  AbstractSet.prototype.hashCode = function () {
    return Companion_getInstance_1().x1(this);
  };
  AbstractSet.$metadata$ = classMeta('AbstractSet', [Set], undefined, undefined, undefined, AbstractCollection.prototype);
  function emptyList() {
    return EmptyList_getInstance();
  }
  function arrayListOf() {
    return ArrayList_init_$Create$();
  }
  function isNullOrEmpty(_this__u8e3s4) {
    {
    }
    return _this__u8e3s4 == null ? true : _this__u8e3s4.i();
  }
  function listOf(elements) {
    return elements.length > 0 ? asList(elements) : emptyList();
  }
  function optimizeReadOnlyList(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.g();
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this__u8e3s4.h(0));
      default:
        return _this__u8e3s4;
    }
  }
  function get_lastIndex_2(_this__u8e3s4) {
    return _this__u8e3s4.g() - 1 | 0;
  }
  function EmptyList() {
    EmptyList_instance = this;
    this.z1_1 = new Long(-1478467534, -1720727600);
  }
  EmptyList.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, List) : false) {
      tmp = other.i();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyList.prototype.hashCode = function () {
    return 1;
  };
  EmptyList.prototype.toString = function () {
    return '[]';
  };
  EmptyList.prototype.g = function () {
    return 0;
  };
  EmptyList.prototype.i = function () {
    return true;
  };
  EmptyList.prototype.a2 = function (elements) {
    return elements.i();
  };
  EmptyList.prototype.b1 = function (elements) {
    return this.a2(elements);
  };
  EmptyList.prototype.h = function (index) {
    throw IndexOutOfBoundsException_init_$Create$("Empty list doesn't contain element at index " + index + '.');
  };
  EmptyList.prototype.d = function () {
    return EmptyIterator_getInstance();
  };
  EmptyList.$metadata$ = objectMeta('EmptyList', [List, Serializable, RandomAccess]);
  var EmptyList_instance;
  function EmptyList_getInstance() {
    if (EmptyList_instance == null)
      new EmptyList();
    return EmptyList_instance;
  }
  function EmptyIterator() {
    EmptyIterator_instance = this;
  }
  EmptyIterator.prototype.e = function () {
    return false;
  };
  EmptyIterator.prototype.f = function () {
    throw NoSuchElementException_init_$Create$();
  };
  EmptyIterator.$metadata$ = objectMeta('EmptyIterator', [ListIterator]);
  var EmptyIterator_instance;
  function EmptyIterator_getInstance() {
    if (EmptyIterator_instance == null)
      new EmptyIterator();
    return EmptyIterator_instance;
  }
  function asCollection(_this__u8e3s4) {
    return new ArrayAsCollection(_this__u8e3s4, false);
  }
  function arrayListOf_0(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function ArrayAsCollection(values, isVarargs) {
    this.b2_1 = values;
    this.c2_1 = isVarargs;
  }
  ArrayAsCollection.prototype.g = function () {
    return this.b2_1.length;
  };
  ArrayAsCollection.prototype.i = function () {
    var tmp$ret$0;
    {
      var tmp0_isEmpty = this.b2_1;
      tmp$ret$0 = tmp0_isEmpty.length === 0;
    }
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.d2 = function (element) {
    return contains(this.b2_1, element);
  };
  ArrayAsCollection.prototype.e2 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.i();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.d2(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.b1 = function (elements) {
    return this.e2(elements);
  };
  ArrayAsCollection.prototype.d = function () {
    return arrayIterator(this.b2_1);
  };
  ArrayAsCollection.$metadata$ = classMeta('ArrayAsCollection', [Collection]);
  function containsAll(_this__u8e3s4, elements) {
    return _this__u8e3s4.b1(elements);
  }
  function throwIndexOverflow() {
    throw ArithmeticException_init_$Create$('Index overflow has happened.');
  }
  function mutableListOf() {
    return ArrayList_init_$Create$();
  }
  function mutableListOf_0(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function IndexedValue(index, value) {
    this.f2_1 = index;
    this.g2_1 = value;
  }
  IndexedValue.prototype.h2 = function () {
    return this.f2_1;
  };
  IndexedValue.prototype.l1 = function () {
    return this.g2_1;
  };
  IndexedValue.prototype.toString = function () {
    return 'IndexedValue(index=' + this.f2_1 + ', value=' + this.g2_1 + ')';
  };
  IndexedValue.prototype.hashCode = function () {
    var result = this.f2_1;
    result = imul(result, 31) + (this.g2_1 == null ? 0 : hashCode_0(this.g2_1)) | 0;
    return result;
  };
  IndexedValue.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof IndexedValue))
      return false;
    var tmp0_other_with_cast = other instanceof IndexedValue ? other : THROW_CCE();
    if (!(this.f2_1 === tmp0_other_with_cast.f2_1))
      return false;
    if (!equals_1(this.g2_1, tmp0_other_with_cast.g2_1))
      return false;
    return true;
  };
  IndexedValue.$metadata$ = classMeta('IndexedValue');
  function Iterable(iterator) {
    return new _no_name_provided__qut3iv(iterator);
  }
  function collectionSizeOrDefault(_this__u8e3s4, default_0) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.g();
    } else {
      tmp = default_0;
    }
    return tmp;
  }
  function IndexingIterable(iteratorFactory) {
    this.i2_1 = iteratorFactory;
  }
  IndexingIterable.prototype.d = function () {
    return new IndexingIterator(this.i2_1());
  };
  IndexingIterable.$metadata$ = classMeta('IndexingIterable', [Iterable_0]);
  function collectionSizeOrNull(_this__u8e3s4) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.g();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function _no_name_provided__qut3iv($iterator) {
    this.j2_1 = $iterator;
  }
  _no_name_provided__qut3iv.prototype.d = function () {
    return this.j2_1();
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Iterable_0]);
  function forEach_1(_this__u8e3s4, operation) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      operation(element);
    }
  }
  function iterator(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function IndexingIterator(iterator) {
    this.k2_1 = iterator;
    this.l2_1 = 0;
  }
  IndexingIterator.prototype.e = function () {
    return this.k2_1.e();
  };
  IndexingIterator.prototype.f = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.l2_1;
    tmp0_this.l2_1 = tmp1 + 1 | 0;
    return new IndexedValue(checkIndexOverflow(tmp1), this.k2_1.f());
  };
  IndexingIterator.$metadata$ = classMeta('IndexingIterator', [Iterator]);
  function getOrImplicitDefault(_this__u8e3s4, key) {
    if (isInterface(_this__u8e3s4, MapWithDefault))
      return _this__u8e3s4.m2(key);
    var tmp$ret$0;
    $l$block: {
      var value = _this__u8e3s4.v1(key);
      if (value == null ? !_this__u8e3s4.s1(key) : false) {
        throw NoSuchElementException_init_$Create$_0('Key ' + key + ' is missing in the map.');
      } else {
        tmp$ret$0 = (value == null ? true : isObject(value)) ? value : THROW_CCE();
        break $l$block;
      }
    }
    return tmp$ret$0;
  }
  function MapWithDefault() {
  }
  MapWithDefault.$metadata$ = interfaceMeta('MapWithDefault', [Map]);
  function mapOf(pairs) {
    return pairs.length > 0 ? toMap_0(pairs, LinkedHashMap_init_$Create$_1(mapCapacity(pairs.length))) : emptyMap();
  }
  function emptyMap() {
    var tmp = EmptyMap_getInstance();
    return isInterface(tmp, Map) ? tmp : THROW_CCE();
  }
  function get_1(_this__u8e3s4, key) {
    return (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).v1(key);
  }
  function component1(_this__u8e3s4) {
    return _this__u8e3s4.j1();
  }
  function component2(_this__u8e3s4) {
    return _this__u8e3s4.l1();
  }
  function getValue(_this__u8e3s4, key) {
    return getOrImplicitDefault(_this__u8e3s4, key);
  }
  function set(_this__u8e3s4, key, value) {
    _this__u8e3s4.a(key, value);
  }
  function iterator_0(_this__u8e3s4) {
    return _this__u8e3s4.j().d();
  }
  function toMap(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.g();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyMap();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List)) {
            tmp_0 = _this__u8e3s4.h(0);
          } else {
            tmp_0 = _this__u8e3s4.d().f();
          }

          tmp = mapOf_0(tmp_0);
          break;
        default:
          tmp = toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$_1(mapCapacity(_this__u8e3s4.g())));
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyMap(toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$()));
  }
  function getOrPut(_this__u8e3s4, key, defaultValue) {
    var value = _this__u8e3s4.v1(key);
    var tmp;
    if (value == null) {
      var answer = defaultValue();
      _this__u8e3s4.a(key, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  }
  function buildMap(builderAction) {
    {
    }
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_apply = LinkedHashMap_init_$Create$();
        {
        }
        builderAction(tmp0_apply);
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.x2();
    }
    return tmp$ret$1;
  }
  function mapValues(_this__u8e3s4, transform) {
    var tmp$ret$2;
    {
      var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_1(mapCapacity(_this__u8e3s4.g()));
      var tmp$ret$1;
      {
        var tmp0_associateByTo = _this__u8e3s4.j();
        var tmp0_iterator = tmp0_associateByTo.d();
        while (tmp0_iterator.e()) {
          var element = tmp0_iterator.f();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.j1();
          }
          tmp1_mapValuesTo.a(tmp$ret$0, transform(element));
        }
        tmp$ret$1 = tmp1_mapValuesTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  }
  function toMap_0(_this__u8e3s4, destination) {
    var tmp$ret$0;
    {
      {
      }
      {
        putAll(destination, _this__u8e3s4);
      }
      tmp$ret$0 = destination;
    }
    return tmp$ret$0;
  }
  function EmptyMap() {
    EmptyMap_instance = this;
    this.y2_1 = new Long(-888910638, 1920087921);
  }
  EmptyMap.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Map) : false) {
      tmp = other.i();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyMap.prototype.hashCode = function () {
    return 0;
  };
  EmptyMap.prototype.toString = function () {
    return '{}';
  };
  EmptyMap.prototype.g = function () {
    return 0;
  };
  EmptyMap.prototype.i = function () {
    return true;
  };
  EmptyMap.prototype.z2 = function (key) {
    return false;
  };
  EmptyMap.prototype.s1 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return false;
    return this.z2((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.a3 = function (key) {
    return null;
  };
  EmptyMap.prototype.v1 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return null;
    return this.a3((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.j = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.prototype.w1 = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.$metadata$ = objectMeta('EmptyMap', [Map, Serializable]);
  var EmptyMap_instance;
  function EmptyMap_getInstance() {
    if (EmptyMap_instance == null)
      new EmptyMap();
    return EmptyMap_instance;
  }
  function toMap_1(_this__u8e3s4, destination) {
    var tmp$ret$0;
    {
      {
      }
      {
        putAll_0(destination, _this__u8e3s4);
      }
      tmp$ret$0 = destination;
    }
    return tmp$ret$0;
  }
  function optimizeReadOnlyMap(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.g();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = emptyMap();
        break;
      case 1:
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }

        tmp = tmp$ret$0;
        break;
      default:
        tmp = _this__u8e3s4;
        break;
    }
    return tmp;
  }
  function mapValuesTo(_this__u8e3s4, destination, transform) {
    var tmp$ret$1;
    {
      var tmp0_associateByTo = _this__u8e3s4.j();
      var tmp0_iterator = tmp0_associateByTo.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$0;
        {
          tmp$ret$0 = element.j1();
        }
        destination.a(tmp$ret$0, transform(element));
      }
      tmp$ret$1 = destination;
    }
    return tmp$ret$1;
  }
  function putAll(_this__u8e3s4, pairs) {
    var indexedObject = pairs;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var tmp1_loop_parameter = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var key = tmp1_loop_parameter.d3();
      var value = tmp1_loop_parameter.e3();
      _this__u8e3s4.a(key, value);
    }
  }
  function putAll_0(_this__u8e3s4, pairs) {
    var tmp0_iterator = pairs.d();
    while (tmp0_iterator.e()) {
      var tmp1_loop_parameter = tmp0_iterator.f();
      var key = tmp1_loop_parameter.d3();
      var value = tmp1_loop_parameter.e3();
      _this__u8e3s4.a(key, value);
    }
  }
  function hashMapOf(pairs) {
    var tmp$ret$0;
    {
      var tmp0_apply = HashMap_init_$Create$_1(mapCapacity(pairs.length));
      {
      }
      {
        putAll(tmp0_apply, pairs);
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function getOrElseNullable(_this__u8e3s4, key, defaultValue) {
    var value = _this__u8e3s4.v1(key);
    if (value == null ? !_this__u8e3s4.s1(key) : false) {
      return defaultValue();
    } else {
      return (value == null ? true : isObject(value)) ? value : THROW_CCE();
    }
  }
  function containsKey(_this__u8e3s4, key) {
    return (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).s1(key);
  }
  function linkedMapOf() {
    return LinkedHashMap_init_$Create$();
  }
  function contains_0(_this__u8e3s4, key) {
    var tmp$ret$0;
    {
      tmp$ret$0 = (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).s1(key);
    }
    return tmp$ret$0;
  }
  function plusAssign(_this__u8e3s4, element) {
    _this__u8e3s4.c(element);
  }
  function removeLast(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4.i()) {
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    } else {
      tmp = _this__u8e3s4.f3(get_lastIndex_2(_this__u8e3s4));
    }
    return tmp;
  }
  function addAll(_this__u8e3s4, elements) {
    var tmp0_subject = elements;
    if (isInterface(tmp0_subject, Collection))
      return _this__u8e3s4.w(elements);
    else {
      var result = false;
      var tmp1_iterator = elements.d();
      while (tmp1_iterator.e()) {
        var item = tmp1_iterator.f();
        if (_this__u8e3s4.c(item))
          result = true;
      }
      return result;
    }
  }
  function Sequence() {
  }
  Sequence.$metadata$ = interfaceMeta('Sequence');
  function sequence(block) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_0(block);
    }
    return tmp$ret$0;
  }
  function SequenceScope() {
  }
  SequenceScope.$metadata$ = classMeta('SequenceScope');
  function iterator_1(block) {
    var iterator = new SequenceBuilderIterator();
    iterator.k3_1 = createCoroutineUnintercepted(block, iterator, iterator);
    return iterator;
  }
  function nextNotReady($this) {
    if (!$this.e())
      throw NoSuchElementException_init_$Create$();
    else
      return $this.f();
  }
  function exceptionalState($this) {
    var tmp0_subject = $this.h3_1;
    switch (tmp0_subject) {
      case 4:
        return NoSuchElementException_init_$Create$();
      case 5:
        return IllegalStateException_init_$Create$('Iterator has failed.');
      default:
        return IllegalStateException_init_$Create$('Unexpected state of the iterator: ' + $this.h3_1);
    }
  }
  function SequenceBuilderIterator() {
    SequenceScope.call(this);
    this.h3_1 = 0;
    this.i3_1 = null;
    this.j3_1 = null;
    this.k3_1 = null;
  }
  SequenceBuilderIterator.prototype.l3 = function (_set____db54di) {
    this.k3_1 = _set____db54di;
  };
  SequenceBuilderIterator.prototype.e = function () {
    while (true) {
      var tmp0_subject = this.h3_1;
      switch (tmp0_subject) {
        case 0:
          break;
        case 1:
          if (ensureNotNull(this.j3_1).e()) {
            this.h3_1 = 2;
            return true;
          } else {
            this.j3_1 = null;
          }

          break;
        case 4:
          return false;
        case 3:
        case 2:
          return true;
        default:
          throw exceptionalState(this);
      }
      this.h3_1 = 5;
      var step = ensureNotNull(this.k3_1);
      this.k3_1 = null;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_success = Companion_getInstance_4();
          tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
        }
        tmp$ret$1 = step.m3(tmp$ret$0);
      }
    }
  };
  SequenceBuilderIterator.prototype.f = function () {
    var tmp0_subject = this.h3_1;
    switch (tmp0_subject) {
      case 0:
      case 1:
        return nextNotReady(this);
      case 2:
        this.h3_1 = 1;
        return ensureNotNull(this.j3_1).f();
      case 3:
        this.h3_1 = 0;
        var tmp = this.i3_1;
        var result = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
        this.i3_1 = null;
        return result;
      default:
        throw exceptionalState(this);
    }
  };
  SequenceBuilderIterator.prototype.g3 = function (value, $cont) {
    this.i3_1 = value;
    this.h3_1 = 3;
    var tmp$ret$0;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      this.k3_1 = tmp0__anonymous__q1qw7t;
      tmp$ret$0 = get_COROUTINE_SUSPENDED();
    }
    return tmp$ret$0;
  };
  SequenceBuilderIterator.prototype.n3 = function (result) {
    var tmp$ret$0;
    {
      throwOnFailure(result);
      var tmp = _Result___get_value__impl__bjfvqg(result);
      tmp$ret$0 = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
    }
    this.h3_1 = 4;
  };
  SequenceBuilderIterator.prototype.m3 = function (result) {
    return this.n3(result);
  };
  SequenceBuilderIterator.prototype.o3 = function () {
    return EmptyCoroutineContext_getInstance();
  };
  SequenceBuilderIterator.$metadata$ = classMeta('SequenceBuilderIterator', [Iterator, Continuation], undefined, undefined, undefined, SequenceScope.prototype);
  function _no_name_provided__qut3iv_0($block) {
    this.p3_1 = $block;
  }
  _no_name_provided__qut3iv_0.prototype.d = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = iterator_1(this.p3_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_0.$metadata$ = classMeta(undefined, [Sequence]);
  function Sequence_0(iterator) {
    return new _no_name_provided__qut3iv_1(iterator);
  }
  function TransformingSequence$iterator$1(this$0) {
    this.r3_1 = this$0;
    this.q3_1 = this$0.s3_1.d();
  }
  TransformingSequence$iterator$1.prototype.f = function () {
    return this.r3_1.t3_1(this.q3_1.f());
  };
  TransformingSequence$iterator$1.prototype.e = function () {
    return this.q3_1.e();
  };
  TransformingSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function TransformingSequence(sequence, transformer) {
    this.s3_1 = sequence;
    this.t3_1 = transformer;
  }
  TransformingSequence.prototype.d = function () {
    return new TransformingSequence$iterator$1(this);
  };
  TransformingSequence.$metadata$ = classMeta('TransformingSequence', [Sequence]);
  function _no_name_provided__qut3iv_1($iterator) {
    this.u3_1 = $iterator;
  }
  _no_name_provided__qut3iv_1.prototype.d = function () {
    return this.u3_1();
  };
  _no_name_provided__qut3iv_1.$metadata$ = classMeta(undefined, [Sequence]);
  function setOf(elements) {
    return elements.length > 0 ? toSet(elements) : emptySet();
  }
  function mutableSetOf() {
    return LinkedHashSet_init_$Create$();
  }
  function EmptySet() {
    EmptySet_instance = this;
    this.v3_1 = new Long(1993859828, 793161749);
  }
  EmptySet.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Set) : false) {
      tmp = other.i();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptySet.prototype.hashCode = function () {
    return 0;
  };
  EmptySet.prototype.toString = function () {
    return '[]';
  };
  EmptySet.prototype.g = function () {
    return 0;
  };
  EmptySet.prototype.i = function () {
    return true;
  };
  EmptySet.prototype.w3 = function (element) {
    return false;
  };
  EmptySet.prototype.a1 = function (element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.w3(tmp);
  };
  EmptySet.prototype.a2 = function (elements) {
    return elements.i();
  };
  EmptySet.prototype.b1 = function (elements) {
    return this.a2(elements);
  };
  EmptySet.prototype.d = function () {
    return EmptyIterator_getInstance();
  };
  EmptySet.$metadata$ = objectMeta('EmptySet', [Set, Serializable]);
  var EmptySet_instance;
  function EmptySet_getInstance() {
    if (EmptySet_instance == null)
      new EmptySet();
    return EmptySet_instance;
  }
  function emptySet() {
    return EmptySet_getInstance();
  }
  function hashSetOf(elements) {
    return toCollection(elements, HashSet_init_$Create$_1(mapCapacity(elements.length)));
  }
  function linkedSetOf() {
    return LinkedHashSet_init_$Create$();
  }
  function orEmpty(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4;
    return tmp0_elvis_lhs == null ? emptySet() : tmp0_elvis_lhs;
  }
  function compareValuesBy(a, b, selector) {
    return compareValues(selector(a), selector(b));
  }
  function compareValues(a, b) {
    if (a === b)
      return 0;
    if (a == null)
      return -1;
    if (b == null)
      return 1;
    return compareTo_0((!(a == null) ? isComparable(a) : false) ? a : THROW_CCE(), b);
  }
  function contract(builder) {
  }
  function Continuation() {
  }
  Continuation.$metadata$ = interfaceMeta('Continuation');
  function resume(_this__u8e3s4, value) {
    var tmp$ret$0;
    {
      var tmp0_success = Companion_getInstance_4();
      tmp$ret$0 = _Result___init__impl__xyqfz8(value);
    }
    return _this__u8e3s4.m3(tmp$ret$0);
  }
  function resumeWithException(_this__u8e3s4, exception) {
    var tmp$ret$0;
    {
      var tmp0_failure = Companion_getInstance_4();
      tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(exception));
    }
    return _this__u8e3s4.m3(tmp$ret$0);
  }
  function startCoroutine(_this__u8e3s4, receiver, completion) {
    var tmp$ret$1;
    {
      var tmp0_resume = intercepted(createCoroutineUnintercepted(_this__u8e3s4, receiver, completion));
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_4();
        tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      }
      tmp$ret$1 = tmp0_resume.m3(tmp$ret$0);
    }
  }
  function Key() {
    Key_instance = this;
  }
  Key.$metadata$ = objectMeta('Key', [Key_0]);
  var Key_instance;
  function Key_getInstance() {
    if (Key_instance == null)
      new Key();
    return Key_instance;
  }
  function ContinuationInterceptor() {
  }
  ContinuationInterceptor.$metadata$ = interfaceMeta('ContinuationInterceptor', [Element]);
  function Key_0() {
  }
  Key_0.$metadata$ = interfaceMeta('Key');
  function Element() {
  }
  Element.$metadata$ = interfaceMeta('Element', [CoroutineContext]);
  function CoroutineContext$plus$lambda() {
    return function (acc, element) {
      var removed = acc.e4(element.j1());
      var tmp;
      if (removed === EmptyCoroutineContext_getInstance()) {
        tmp = element;
      } else {
        var interceptor = removed.z3(Key_getInstance());
        var tmp_0;
        if (interceptor == null) {
          tmp_0 = new CombinedContext(removed, element);
        } else {
          var left = removed.e4(Key_getInstance());
          tmp_0 = left === EmptyCoroutineContext_getInstance() ? new CombinedContext(element, interceptor) : new CombinedContext(new CombinedContext(left, element), interceptor);
        }
        tmp = tmp_0;
      }
      return tmp;
    };
  }
  function CoroutineContext() {
  }
  CoroutineContext.$metadata$ = interfaceMeta('CoroutineContext');
  function EmptyCoroutineContext() {
    EmptyCoroutineContext_instance = this;
    this.h4_1 = new Long(0, 0);
  }
  EmptyCoroutineContext.prototype.z3 = function (key) {
    return null;
  };
  EmptyCoroutineContext.prototype.f4 = function (initial, operation) {
    return initial;
  };
  EmptyCoroutineContext.prototype.g4 = function (context) {
    return context;
  };
  EmptyCoroutineContext.prototype.e4 = function (key) {
    return this;
  };
  EmptyCoroutineContext.prototype.hashCode = function () {
    return 0;
  };
  EmptyCoroutineContext.prototype.toString = function () {
    return 'EmptyCoroutineContext';
  };
  EmptyCoroutineContext.$metadata$ = objectMeta('EmptyCoroutineContext', [CoroutineContext, Serializable]);
  var EmptyCoroutineContext_instance;
  function EmptyCoroutineContext_getInstance() {
    if (EmptyCoroutineContext_instance == null)
      new EmptyCoroutineContext();
    return EmptyCoroutineContext_instance;
  }
  function size($this) {
    var cur = $this;
    var size = 2;
    while (true) {
      var tmp = cur.i4_1;
      var tmp0_elvis_lhs = tmp instanceof CombinedContext ? tmp : null;
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        return size;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      cur = tmp_0;
      var tmp1 = size;
      size = tmp1 + 1 | 0;
    }
  }
  function contains_1($this, element) {
    return equals_1($this.z3(element.j1()), element);
  }
  function containsAll_0($this, context) {
    var cur = context;
    while (true) {
      if (!contains_1($this, cur.j4_1))
        return false;
      var next = cur.i4_1;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        return contains_1($this, isInterface(next, Element) ? next : THROW_CCE());
      }
    }
  }
  function CombinedContext$toString$lambda() {
    return function (acc, element) {
      var tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = charSequenceLength(acc) === 0;
      }
      if (tmp$ret$0) {
        tmp = toString_2(element);
      } else {
        tmp = acc + ', ' + element;
      }
      return tmp;
    };
  }
  function CombinedContext(left, element) {
    this.i4_1 = left;
    this.j4_1 = element;
  }
  CombinedContext.prototype.z3 = function (key) {
    var cur = this;
    while (true) {
      var tmp0_safe_receiver = cur.j4_1.z3(key);
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          return tmp0_safe_receiver;
        }
      }
      var next = cur.i4_1;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        return next.z3(key);
      }
    }
  };
  CombinedContext.prototype.f4 = function (initial, operation) {
    return operation(this.i4_1.f4(initial, operation), this.j4_1);
  };
  CombinedContext.prototype.e4 = function (key) {
    var tmp0_safe_receiver = this.j4_1.z3(key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return this.i4_1;
      }
    }
    var newLeft = this.i4_1.e4(key);
    return newLeft === this.i4_1 ? this : newLeft === EmptyCoroutineContext_getInstance() ? this.j4_1 : new CombinedContext(newLeft, this.j4_1);
  };
  CombinedContext.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      if (other instanceof CombinedContext) {
        tmp_1 = size(other) === size(this);
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = containsAll_0(other, this);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  CombinedContext.prototype.hashCode = function () {
    return hashCode_0(this.i4_1) + hashCode_0(this.j4_1) | 0;
  };
  CombinedContext.prototype.toString = function () {
    return '[' + this.f4('', CombinedContext$toString$lambda()) + ']';
  };
  CombinedContext.$metadata$ = classMeta('CombinedContext', [CoroutineContext, Serializable]);
  function AbstractCoroutineContextKey(baseKey, safeCast) {
    this.a4_1 = safeCast;
    var tmp = this;
    var tmp_0;
    if (baseKey instanceof AbstractCoroutineContextKey) {
      tmp_0 = baseKey.b4_1;
    } else {
      tmp_0 = baseKey;
    }
    tmp.b4_1 = tmp_0;
  }
  AbstractCoroutineContextKey.prototype.c4 = function (element) {
    return this.a4_1(element);
  };
  AbstractCoroutineContextKey.prototype.d4 = function (key) {
    return key === this ? true : this.b4_1 === key;
  };
  AbstractCoroutineContextKey.$metadata$ = classMeta('AbstractCoroutineContextKey', [Key_0]);
  function AbstractCoroutineContextElement(key) {
    this.k4_1 = key;
  }
  AbstractCoroutineContextElement.prototype.j1 = function () {
    return this.k4_1;
  };
  AbstractCoroutineContextElement.$metadata$ = classMeta('AbstractCoroutineContextElement', [Element]);
  function get_COROUTINE_SUSPENDED() {
    return CoroutineSingletons_COROUTINE_SUSPENDED_getInstance();
  }
  var CoroutineSingletons_COROUTINE_SUSPENDED_instance;
  var CoroutineSingletons_UNDECIDED_instance;
  var CoroutineSingletons_RESUMED_instance;
  var CoroutineSingletons_entriesInitialized;
  function CoroutineSingletons_initEntries() {
    if (CoroutineSingletons_entriesInitialized)
      return Unit_getInstance();
    CoroutineSingletons_entriesInitialized = true;
    CoroutineSingletons_COROUTINE_SUSPENDED_instance = new CoroutineSingletons('COROUTINE_SUSPENDED', 0);
    CoroutineSingletons_UNDECIDED_instance = new CoroutineSingletons('UNDECIDED', 1);
    CoroutineSingletons_RESUMED_instance = new CoroutineSingletons('RESUMED', 2);
  }
  function CoroutineSingletons(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CoroutineSingletons.$metadata$ = classMeta('CoroutineSingletons', undefined, undefined, undefined, undefined, Enum.prototype);
  function CoroutineSingletons_COROUTINE_SUSPENDED_getInstance() {
    CoroutineSingletons_initEntries();
    return CoroutineSingletons_COROUTINE_SUSPENDED_instance;
  }
  function CoroutineSingletons_UNDECIDED_getInstance() {
    CoroutineSingletons_initEntries();
    return CoroutineSingletons_UNDECIDED_instance;
  }
  function CoroutineSingletons_RESUMED_getInstance() {
    CoroutineSingletons_initEntries();
    return CoroutineSingletons_RESUMED_instance;
  }
  function checkStepIsPositive(isPositive, step) {
    if (!isPositive)
      throw IllegalArgumentException_init_$Create$_0('Step must be positive, was: ' + toString_2(step) + '.');
  }
  function KClassifier() {
  }
  KClassifier.$metadata$ = interfaceMeta('KClassifier');
  function KTypeParameter() {
  }
  KTypeParameter.$metadata$ = interfaceMeta('KTypeParameter', [KClassifier]);
  function Companion_2() {
    Companion_instance_2 = this;
    this.o4_1 = new KTypeProjection(null, null);
  }
  Companion_2.prototype.p4 = function (type) {
    return new KTypeProjection(KVariance_INVARIANT_getInstance(), type);
  };
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_2() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function KTypeProjection(variance, type) {
    Companion_getInstance_2();
    this.q4_1 = variance;
    this.r4_1 = type;
    {
      var tmp0_require = this.q4_1 == null === (this.r4_1 == null);
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = this.q4_1 == null ? 'Star projection must have no type specified.' : 'The projection variance ' + this.q4_1 + ' requires type to be specified.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
  }
  KTypeProjection.prototype.s4 = function () {
    return this.q4_1;
  };
  KTypeProjection.prototype.t4 = function () {
    return this.r4_1;
  };
  KTypeProjection.prototype.toString = function () {
    var tmp0_subject = this.q4_1;
    var tmp0 = tmp0_subject == null ? -1 : tmp0_subject.u4();
    var tmp;
    switch (tmp0) {
      case -1:
        tmp = '*';
        break;
      case 0:
        tmp = toString_1(this.r4_1);
        break;
      case 1:
        tmp = 'in ' + this.r4_1;
        break;
      case 2:
        tmp = 'out ' + this.r4_1;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  KTypeProjection.prototype.hashCode = function () {
    var result = this.q4_1 == null ? 0 : this.q4_1.hashCode();
    result = imul(result, 31) + (this.r4_1 == null ? 0 : hashCode_0(this.r4_1)) | 0;
    return result;
  };
  KTypeProjection.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof KTypeProjection))
      return false;
    var tmp0_other_with_cast = other instanceof KTypeProjection ? other : THROW_CCE();
    if (!equals_1(this.q4_1, tmp0_other_with_cast.q4_1))
      return false;
    if (!equals_1(this.r4_1, tmp0_other_with_cast.r4_1))
      return false;
    return true;
  };
  KTypeProjection.$metadata$ = classMeta('KTypeProjection');
  var KVariance_INVARIANT_instance;
  var KVariance_IN_instance;
  var KVariance_OUT_instance;
  var KVariance_entriesInitialized;
  function KVariance_initEntries() {
    if (KVariance_entriesInitialized)
      return Unit_getInstance();
    KVariance_entriesInitialized = true;
    KVariance_INVARIANT_instance = new KVariance('INVARIANT', 0);
    KVariance_IN_instance = new KVariance('IN', 1);
    KVariance_OUT_instance = new KVariance('OUT', 2);
  }
  function KVariance(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  KVariance.$metadata$ = classMeta('KVariance', undefined, undefined, undefined, undefined, Enum.prototype);
  function KVariance_INVARIANT_getInstance() {
    KVariance_initEntries();
    return KVariance_INVARIANT_instance;
  }
  function appendElement(_this__u8e3s4, element, transform) {
    if (!(transform == null)) {
      _this__u8e3s4.b(transform(element));
    } else {
      if (element == null ? true : isCharSequence(element)) {
        _this__u8e3s4.b(element);
      } else {
        if (element instanceof Char_0) {
          _this__u8e3s4.v4(element.x_1);
        } else {
          _this__u8e3s4.b(toString_1(element));
        }
      }
    }
  }
  function equals(_this__u8e3s4, other, ignoreCase) {
    if (equals_1(new Char_0(_this__u8e3s4), new Char_0(other)))
      return true;
    if (!ignoreCase)
      return false;
    var thisUpper = uppercaseChar(_this__u8e3s4);
    var otherUpper = uppercaseChar(other);
    var tmp;
    if (equals_1(new Char_0(thisUpper), new Char_0(otherUpper))) {
      tmp = true;
    } else {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              var tmp0_asDynamic = toString_0(thisUpper);
              tmp$ret$0 = tmp0_asDynamic;
            }
            var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
            tmp$ret$1 = tmp1_unsafeCast;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = charSequenceGet(tmp$ret$2, 0);
      }
      var tmp_0 = new Char_0(tmp$ret$3);
      var tmp$ret$7;
      {
        var tmp$ret$6;
        {
          var tmp$ret$5;
          {
            var tmp$ret$4;
            {
              var tmp2_asDynamic = toString_0(otherUpper);
              tmp$ret$4 = tmp2_asDynamic;
            }
            var tmp3_unsafeCast = tmp$ret$4.toLowerCase();
            tmp$ret$5 = tmp3_unsafeCast;
          }
          tmp$ret$6 = tmp$ret$5;
        }
        tmp$ret$7 = charSequenceGet(tmp$ret$6, 0);
      }
      tmp = equals_1(tmp_0, new Char_0(tmp$ret$7));
    }
    return tmp;
  }
  function titlecase(_this__u8e3s4) {
    return titlecaseImpl(_this__u8e3s4);
  }
  function plus_1(_this__u8e3s4, other) {
    return toString_0(_this__u8e3s4) + other;
  }
  function trimIndent(_this__u8e3s4) {
    return replaceIndent(_this__u8e3s4, '');
  }
  function replaceIndent(_this__u8e3s4, newIndent) {
    var lines_0 = lines(_this__u8e3s4);
    var tmp$ret$3;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_filterTo = ArrayList_init_$Create$();
          var tmp0_iterator = lines_0.d();
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            if (isNotBlank(element)) {
              tmp0_filterTo.c(element);
            }
          }
          tmp$ret$0 = tmp0_filterTo;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      var tmp0_map = tmp$ret$1;
      var tmp$ret$2;
      {
        var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator_0 = tmp0_map.d();
        while (tmp0_iterator_0.e()) {
          var item = tmp0_iterator_0.f();
          tmp0_mapTo.c(indentWidth(item));
        }
        tmp$ret$2 = tmp0_mapTo;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    var tmp0_elvis_lhs = minOrNull(tmp$ret$3);
    var minCommonIndent = tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs;
    var tmp$ret$10;
    {
      var tmp1_reindent = _this__u8e3s4.length + imul(newIndent.length, lines_0.g()) | 0;
      var tmp2_reindent = getIndentFunction(newIndent);
      var lastIndex = get_lastIndex_2(lines_0);
      var tmp$ret$9;
      {
        var tmp$ret$8;
        {
          var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
          {
            var index = 0;
            var tmp0_iterator_1 = lines_0.d();
            while (tmp0_iterator_1.e()) {
              var item_0 = tmp0_iterator_1.f();
              {
                var tmp1 = index;
                index = tmp1 + 1 | 0;
                var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
                var tmp$ret$6;
                {
                  var tmp;
                  if ((tmp0__anonymous__q1qw7t === 0 ? true : tmp0__anonymous__q1qw7t === lastIndex) ? isBlank(item_0) : false) {
                    tmp = null;
                  } else {
                    var tmp$ret$4;
                    {
                      tmp$ret$4 = drop(item_0, minCommonIndent);
                    }
                    var tmp0_safe_receiver = tmp$ret$4;
                    var tmp_0;
                    if (tmp0_safe_receiver == null) {
                      tmp_0 = null;
                    } else {
                      var tmp$ret$5;
                      {
                        {
                        }
                        tmp$ret$5 = tmp2_reindent(tmp0_safe_receiver);
                      }
                      tmp_0 = tmp$ret$5;
                    }
                    var tmp1_elvis_lhs = tmp_0;
                    tmp = tmp1_elvis_lhs == null ? item_0 : tmp1_elvis_lhs;
                  }
                  tmp$ret$6 = tmp;
                }
                var tmp0_safe_receiver_0 = tmp$ret$6;
                if (tmp0_safe_receiver_0 == null)
                  null;
                else {
                  var tmp$ret$7;
                  {
                    {
                    }
                    tmp1_mapIndexedNotNullTo.c(tmp0_safe_receiver_0);
                    tmp$ret$7 = Unit_getInstance();
                  }
                }
              }
            }
          }
          tmp$ret$8 = tmp1_mapIndexedNotNullTo;
        }
        tmp$ret$9 = tmp$ret$8;
      }
      var tmp_1 = tmp$ret$9;
      var tmp_2 = StringBuilder_init_$Create$(tmp1_reindent);
      tmp$ret$10 = joinTo$default(tmp_1, tmp_2, '\n', null, null, 0, null, null, 124, null).toString();
    }
    return tmp$ret$10;
  }
  function indentWidth(_this__u8e3s4) {
    var tmp$ret$3;
    {
      var tmp$ret$1;
      $l$block: {
        var inductionVariable = 0;
        var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
        if (inductionVariable <= last)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$0;
            {
              var tmp0__anonymous__q1qw7t = charSequenceGet(_this__u8e3s4, index);
              tmp$ret$0 = !isWhitespace(tmp0__anonymous__q1qw7t);
            }
            if (tmp$ret$0) {
              tmp$ret$1 = index;
              break $l$block;
            }
          }
           while (inductionVariable <= last);
        tmp$ret$1 = -1;
      }
      var tmp1_let = tmp$ret$1;
      {
      }
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_let === -1 ? _this__u8e3s4.length : tmp1_let;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    return tmp$ret$3;
  }
  function reindent(_this__u8e3s4, resultSizeEstimate, indentAddFunction, indentCutFunction) {
    var lastIndex = get_lastIndex_2(_this__u8e3s4);
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
        {
          var index = 0;
          var tmp0_iterator = _this__u8e3s4.d();
          while (tmp0_iterator.e()) {
            var item = tmp0_iterator.f();
            {
              var tmp1 = index;
              index = tmp1 + 1 | 0;
              var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
              var tmp$ret$1;
              {
                var tmp;
                if ((tmp0__anonymous__q1qw7t === 0 ? true : tmp0__anonymous__q1qw7t === lastIndex) ? isBlank(item) : false) {
                  tmp = null;
                } else {
                  var tmp0_safe_receiver = indentCutFunction(item);
                  var tmp_0;
                  if (tmp0_safe_receiver == null) {
                    tmp_0 = null;
                  } else {
                    var tmp$ret$0;
                    {
                      {
                      }
                      tmp$ret$0 = indentAddFunction(tmp0_safe_receiver);
                    }
                    tmp_0 = tmp$ret$0;
                  }
                  var tmp1_elvis_lhs = tmp_0;
                  tmp = tmp1_elvis_lhs == null ? item : tmp1_elvis_lhs;
                }
                tmp$ret$1 = tmp;
              }
              var tmp0_safe_receiver_0 = tmp$ret$1;
              if (tmp0_safe_receiver_0 == null)
                null;
              else {
                var tmp$ret$2;
                {
                  {
                  }
                  tmp1_mapIndexedNotNullTo.c(tmp0_safe_receiver_0);
                  tmp$ret$2 = Unit_getInstance();
                }
              }
            }
          }
        }
        tmp$ret$3 = tmp1_mapIndexedNotNullTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var tmp_1 = tmp$ret$4;
    var tmp_2 = StringBuilder_init_$Create$(resultSizeEstimate);
    return joinTo$default(tmp_1, tmp_2, '\n', null, null, 0, null, null, 124, null).toString();
  }
  function getIndentFunction(indent) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(indent) === 0;
    }
    if (tmp$ret$0) {
      tmp = getIndentFunction$lambda();
    } else {
      tmp = getIndentFunction$lambda_0(indent);
    }
    return tmp;
  }
  function getIndentFunction$lambda() {
    return function (line) {
      return line;
    };
  }
  function getIndentFunction$lambda_0($indent) {
    return function (line) {
      return $indent + line;
    };
  }
  function buildString(builderAction) {
    {
    }
    var tmp$ret$0;
    {
      var tmp0_apply = StringBuilder_init_$Create$_0();
      {
      }
      builderAction(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0.toString();
  }
  function toLongOrNull(_this__u8e3s4) {
    return toLongOrNull_0(_this__u8e3s4, 10);
  }
  function toIntOrNull(_this__u8e3s4) {
    return toIntOrNull_0(_this__u8e3s4, 10);
  }
  function toLongOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(45)))) {
        isNegative = true;
        Companion_getInstance_15();
        limit = new Long(0, -2147483648);
      } else if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43)))) {
        isNegative = false;
        Companion_getInstance_15();
        limit = (new Long(-1, 2147483647)).w4();
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      Companion_getInstance_15();
      limit = (new Long(-1, 2147483647)).w4();
    }
    var tmp$ret$0;
    {
      Companion_getInstance_15();
      var tmp0_div = (new Long(-1, 2147483647)).w4();
      tmp$ret$0 = tmp0_div.x4(new Long(36, 0));
    }
    var limitForMaxRadix = tmp$ret$0;
    var limitBeforeMul = limitForMaxRadix;
    var result = new Long(0, 0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result.r(limitBeforeMul) < 0) {
          if (limitBeforeMul.equals(limitForMaxRadix)) {
            var tmp$ret$1;
            {
              tmp$ret$1 = limit.x4(toLong_0(radix));
            }
            limitBeforeMul = tmp$ret$1;
            if (result.r(limitBeforeMul) < 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$2;
        {
          var tmp1_times = result;
          tmp$ret$2 = tmp1_times.y4(toLong_0(radix));
        }
        result = tmp$ret$2;
        var tmp = result;
        var tmp$ret$3;
        {
          tmp$ret$3 = limit.z4(toLong_0(digit));
        }
        if (tmp.r(tmp$ret$3) < 0)
          return null;
        var tmp$ret$4;
        {
          var tmp2_minus = result;
          tmp$ret$4 = tmp2_minus.a5(toLong_0(digit));
        }
        result = tmp$ret$4;
      }
       while (inductionVariable < length);
    return isNegative ? result : result.w4();
  }
  function toIntOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(45)))) {
        isNegative = true;
        limit = IntCompanionObject_getInstance().l_1;
      } else if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43)))) {
        isNegative = false;
        limit = -IntCompanionObject_getInstance().m_1 | 0;
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      limit = -IntCompanionObject_getInstance().m_1 | 0;
    }
    var limitForMaxRadix = (-IntCompanionObject_getInstance().m_1 | 0) / 36 | 0;
    var limitBeforeMul = limitForMaxRadix;
    var result = 0;
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result < limitBeforeMul) {
          if (limitBeforeMul === limitForMaxRadix) {
            limitBeforeMul = limit / radix | 0;
            if (result < limitBeforeMul) {
              return null;
            }
          } else {
            return null;
          }
        }
        result = imul(result, radix);
        if (result < (limit + digit | 0))
          return null;
        result = result - digit | 0;
      }
       while (inductionVariable < length);
    return isNegative ? result : -result | 0;
  }
  function numberFormatError(input) {
    throw NumberFormatException_init_$Create$("Invalid number format: '" + input + "'");
  }
  function isEmpty_0(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) === 0;
  }
  function isNotBlank(_this__u8e3s4) {
    return !isBlank(_this__u8e3s4);
  }
  function padStart(_this__u8e3s4, length, padChar) {
    return toString_2(padStart_0(isCharSequence(_this__u8e3s4) ? _this__u8e3s4 : THROW_CCE(), length, padChar));
  }
  function startsWith(_this__u8e3s4, char, ignoreCase) {
    return charSequenceLength(_this__u8e3s4) > 0 ? equals(charSequenceGet(_this__u8e3s4, 0), char, ignoreCase) : false;
  }
  function startsWith$default(_this__u8e3s4, char, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return startsWith(_this__u8e3s4, char, ignoreCase);
  }
  function contains_2(_this__u8e3s4, char, ignoreCase) {
    return indexOf$default(_this__u8e3s4, char, 0, ignoreCase, 2, null) >= 0;
  }
  function contains$default(_this__u8e3s4, char, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return contains_2(_this__u8e3s4, char, ignoreCase);
  }
  function indexOf_0(_this__u8e3s4, char, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp$ret$0;
      {
        tmp$ret$0 = charArrayOf_0([char]);
      }
      tmp = indexOfAny(_this__u8e3s4, tmp$ret$0, startIndex, ignoreCase);
    } else {
      var tmp$ret$3;
      {
        var tmp1_nativeIndexOf = _this__u8e3s4;
        var tmp$ret$2;
        {
          var tmp0_nativeIndexOf = toString_0(char);
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp1_nativeIndexOf;
          }
          tmp$ret$2 = tmp$ret$1.indexOf(tmp0_nativeIndexOf, startIndex);
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp = tmp$ret$3;
    }
    return tmp;
  }
  function indexOf$default(_this__u8e3s4, char, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_0(_this__u8e3s4, char, startIndex, ignoreCase);
  }
  function get_lastIndex_3(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) - 1 | 0;
  }
  function padStart_0(_this__u8e3s4, length, padChar) {
    if (length < 0)
      throw IllegalArgumentException_init_$Create$_0('Desired length ' + length + ' is less than zero.');
    if (length <= charSequenceLength(_this__u8e3s4))
      return charSequenceSubSequence(_this__u8e3s4, 0, charSequenceLength(_this__u8e3s4));
    var sb = StringBuilder_init_$Create$(length);
    var inductionVariable = 1;
    var last = length - charSequenceLength(_this__u8e3s4) | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        sb.v4(padChar);
      }
       while (!(i === last));
    sb.b(_this__u8e3s4);
    return sb;
  }
  function indexOfAny(_this__u8e3s4, chars, startIndex, ignoreCase) {
    var tmp;
    if (!ignoreCase ? chars.length === 1 : false) {
      tmp = typeof _this__u8e3s4 === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var char = single(chars);
      var tmp$ret$2;
      {
        var tmp1_nativeIndexOf = _this__u8e3s4;
        var tmp$ret$1;
        {
          var tmp0_nativeIndexOf = toString_0(char);
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp1_nativeIndexOf;
          }
          tmp$ret$1 = tmp$ret$0.indexOf(tmp0_nativeIndexOf, startIndex);
        }
        tmp$ret$2 = tmp$ret$1;
      }
      return tmp$ret$2;
    }
    var inductionVariable = coerceAtLeast(startIndex, 0);
    var last = get_lastIndex_3(_this__u8e3s4);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var charAtIndex = charSequenceGet(_this__u8e3s4, index);
        var tmp$ret$4;
        $l$block: {
          var indexedObject = chars;
          var inductionVariable_0 = 0;
          var last_0 = indexedObject.length;
          while (inductionVariable_0 < last_0) {
            var element = indexedObject[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$3;
            {
              tmp$ret$3 = equals(element, charAtIndex, ignoreCase);
            }
            if (tmp$ret$3) {
              tmp$ret$4 = true;
              break $l$block;
            }
          }
          tmp$ret$4 = false;
        }
        if (tmp$ret$4)
          return index;
      }
       while (!(index === last));
    return -1;
  }
  function get_indices_1(_this__u8e3s4) {
    return numberRangeToNumber(0, charSequenceLength(_this__u8e3s4) - 1 | 0);
  }
  function regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    if (((otherOffset < 0 ? true : thisOffset < 0) ? true : thisOffset > (charSequenceLength(_this__u8e3s4) - length | 0)) ? true : otherOffset > (charSequenceLength(other) - length | 0)) {
      return false;
    }
    var inductionVariable = 0;
    if (inductionVariable < length)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(charSequenceGet(_this__u8e3s4, thisOffset + index | 0), charSequenceGet(other, otherOffset + index | 0), ignoreCase))
          return false;
      }
       while (inductionVariable < length);
    return true;
  }
  function substring(_this__u8e3s4, startIndex, endIndex) {
    return toString_2(charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex));
  }
  function lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      tmp = indexOf_1(_this__u8e3s4, string, startIndex, 0, ignoreCase, true);
    } else {
      var tmp$ret$1;
      {
        var tmp0_nativeLastIndexOf = _this__u8e3s4;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_nativeLastIndexOf;
        }
        tmp$ret$1 = tmp$ret$0.lastIndexOf(string, startIndex);
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function lastIndexOf$default(_this__u8e3s4, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = get_lastIndex_3(_this__u8e3s4);
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase);
  }
  function indexOf_1(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last) {
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), coerceAtMost(endIndex, charSequenceLength(_this__u8e3s4))) : downTo(coerceAtMost(startIndex, get_lastIndex_3(_this__u8e3s4)), coerceAtLeast(endIndex, 0));
    var tmp;
    if (typeof _this__u8e3s4 === 'string') {
      tmp = typeof other === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var inductionVariable = indices.s_1;
      var last_0 = indices.t_1;
      var step = indices.u_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          if (regionMatches(other, 0, _this__u8e3s4, index, charSequenceLength(other), ignoreCase))
            return index;
        }
         while (!(index === last_0));
    } else {
      var inductionVariable_0 = indices.s_1;
      var last_1 = indices.t_1;
      var step_0 = indices.u_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          if (regionMatchesImpl(other, 0, _this__u8e3s4, index_0, charSequenceLength(other), ignoreCase))
            return index_0;
        }
         while (!(index_0 === last_1));
    }
    return -1;
  }
  function indexOf$default_0(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last, $mask0, $handler) {
    if (!(($mask0 & 16) === 0))
      last = false;
    return indexOf_1(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last);
  }
  function replaceFirstChar(_this__u8e3s4, transform) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(_this__u8e3s4) > 0;
    }
    if (tmp$ret$0) {
      var tmp_0 = toString_2(transform(new Char_0(charSequenceGet(_this__u8e3s4, 0))));
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = _this__u8e3s4;
        }
        tmp$ret$2 = tmp$ret$1.substring(1);
      }
      tmp = tmp_0 + tmp$ret$2;
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function isNotEmpty(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) > 0;
  }
  function lines(_this__u8e3s4) {
    return toList_1(lineSequence(_this__u8e3s4));
  }
  function lineSequence(_this__u8e3s4) {
    return splitToSequence$default(_this__u8e3s4, ['\r\n', '\n', '\r'], false, 0, 6, null);
  }
  function splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit) {
    var tmp = rangesDelimitedBy$default(_this__u8e3s4, delimiters, 0, ignoreCase, limit, 2, null);
    return map_1(tmp, splitToSequence$lambda(_this__u8e3s4));
  }
  function splitToSequence$default(_this__u8e3s4, delimiters, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    if (!(($mask0 & 4) === 0))
      limit = 0;
    return splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit);
  }
  function substring_0(_this__u8e3s4, range) {
    return toString_2(charSequenceSubSequence(_this__u8e3s4, range.f5(), range.g5() + 1 | 0));
  }
  function rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    var delimitersList = asList(delimiters);
    return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda(delimitersList, ignoreCase));
  }
  function rangesDelimitedBy$default(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    if (!(($mask0 & 8) === 0))
      limit = 0;
    return rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit);
  }
  function requireNonNegativeLimit(limit) {
    var tmp0_require = limit >= 0;
    {
    }
    var tmp;
    if (!tmp0_require) {
      var tmp$ret$0;
      {
        tmp$ret$0 = 'Limit must be non-negative, but was ' + limit;
      }
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_2(message));
    }
    return tmp;
  }
  function calcNext($this) {
    if ($this.j5_1 < 0) {
      $this.h5_1 = 0;
      $this.k5_1 = null;
    } else {
      var tmp;
      var tmp_0;
      if ($this.m5_1.p5_1 > 0) {
        var tmp0_this = $this;
        tmp0_this.l5_1 = tmp0_this.l5_1 + 1 | 0;
        tmp_0 = tmp0_this.l5_1 >= $this.m5_1.p5_1;
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = true;
      } else {
        tmp = $this.j5_1 > charSequenceLength($this.m5_1.n5_1);
      }
      if (tmp) {
        $this.k5_1 = numberRangeToNumber($this.i5_1, get_lastIndex_3($this.m5_1.n5_1));
        $this.j5_1 = -1;
      } else {
        var match = $this.m5_1.q5_1($this.m5_1.n5_1, $this.j5_1);
        if (match == null) {
          $this.k5_1 = numberRangeToNumber($this.i5_1, get_lastIndex_3($this.m5_1.n5_1));
          $this.j5_1 = -1;
        } else {
          var tmp1_container = match;
          var index = tmp1_container.d3();
          var length = tmp1_container.e3();
          $this.k5_1 = until($this.i5_1, index);
          $this.i5_1 = index + length | 0;
          $this.j5_1 = $this.i5_1 + (length === 0 ? 1 : 0) | 0;
        }
      }
      $this.h5_1 = 1;
    }
  }
  function DelimitedRangesSequence$iterator$1(this$0) {
    this.m5_1 = this$0;
    this.h5_1 = -1;
    this.i5_1 = coerceIn_0(this$0.o5_1, 0, charSequenceLength(this$0.n5_1));
    this.j5_1 = this.i5_1;
    this.k5_1 = null;
    this.l5_1 = 0;
  }
  DelimitedRangesSequence$iterator$1.prototype.f = function () {
    if (this.h5_1 === -1)
      calcNext(this);
    if (this.h5_1 === 0)
      throw NoSuchElementException_init_$Create$();
    var tmp = this.k5_1;
    var result = tmp instanceof IntRange ? tmp : THROW_CCE();
    this.k5_1 = null;
    this.h5_1 = -1;
    return result;
  };
  DelimitedRangesSequence$iterator$1.prototype.e = function () {
    if (this.h5_1 === -1)
      calcNext(this);
    return this.h5_1 === 1;
  };
  DelimitedRangesSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function DelimitedRangesSequence(input, startIndex, limit, getNextMatch) {
    this.n5_1 = input;
    this.o5_1 = startIndex;
    this.p5_1 = limit;
    this.q5_1 = getNextMatch;
  }
  DelimitedRangesSequence.prototype.d = function () {
    return new DelimitedRangesSequence$iterator$1(this);
  };
  DelimitedRangesSequence.$metadata$ = classMeta('DelimitedRangesSequence', [Sequence]);
  function findAnyOf(_this__u8e3s4, strings, startIndex, ignoreCase, last) {
    if (!ignoreCase ? strings.g() === 1 : false) {
      var string = single_0(strings);
      var tmp;
      if (!last) {
        tmp = indexOf$default_1(_this__u8e3s4, string, startIndex, false, 4, null);
      } else {
        tmp = lastIndexOf$default(_this__u8e3s4, string, startIndex, false, 4, null);
      }
      var index = tmp;
      return index < 0 ? null : to(index, string);
    }
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), charSequenceLength(_this__u8e3s4)) : downTo(coerceAtMost(startIndex, get_lastIndex_3(_this__u8e3s4)), 0);
    if (typeof _this__u8e3s4 === 'string') {
      var inductionVariable = indices.s_1;
      var last_0 = indices.t_1;
      var step = indices.u_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index_0 = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          var tmp$ret$1;
          $l$block: {
            var tmp0_iterator = strings.d();
            while (tmp0_iterator.e()) {
              var element = tmp0_iterator.f();
              var tmp$ret$0;
              {
                tmp$ret$0 = regionMatches(element, 0, _this__u8e3s4, index_0, element.length, ignoreCase);
              }
              if (tmp$ret$0) {
                tmp$ret$1 = element;
                break $l$block;
              }
            }
            tmp$ret$1 = null;
          }
          var matchingString = tmp$ret$1;
          if (!(matchingString == null))
            return to(index_0, matchingString);
        }
         while (!(index_0 === last_0));
    } else {
      var inductionVariable_0 = indices.s_1;
      var last_1 = indices.t_1;
      var step_0 = indices.u_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_1 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          var tmp$ret$3;
          $l$block_0: {
            var tmp0_iterator_0 = strings.d();
            while (tmp0_iterator_0.e()) {
              var element_0 = tmp0_iterator_0.f();
              var tmp$ret$2;
              {
                tmp$ret$2 = regionMatchesImpl(element_0, 0, _this__u8e3s4, index_1, element_0.length, ignoreCase);
              }
              if (tmp$ret$2) {
                tmp$ret$3 = element_0;
                break $l$block_0;
              }
            }
            tmp$ret$3 = null;
          }
          var matchingString_0 = tmp$ret$3;
          if (!(matchingString_0 == null))
            return to(index_1, matchingString_0);
        }
         while (!(index_1 === last_1));
    }
    return null;
  }
  function indexOf_2(_this__u8e3s4, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp_1 = charSequenceLength(_this__u8e3s4);
      tmp = indexOf$default_0(_this__u8e3s4, string, startIndex, tmp_1, ignoreCase, false, 16, null);
    } else {
      var tmp$ret$1;
      {
        var tmp0_nativeIndexOf = _this__u8e3s4;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_nativeIndexOf;
        }
        tmp$ret$1 = tmp$ret$0.indexOf(string, startIndex);
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function indexOf$default_1(_this__u8e3s4, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_2(_this__u8e3s4, string, startIndex, ignoreCase);
  }
  function splitToSequence$lambda($this_splitToSequence) {
    return function (it) {
      return substring_0($this_splitToSequence, it);
    };
  }
  function rangesDelimitedBy$lambda($delimitersList, $ignoreCase) {
    return function ($this$$receiver, currentIndex) {
      var tmp0_safe_receiver = findAnyOf($this$$receiver, $delimitersList, currentIndex, $ignoreCase, false);
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$1;
        {
          {
          }
          var tmp$ret$0;
          {
            tmp$ret$0 = to(tmp0_safe_receiver.b3_1, tmp0_safe_receiver.c3_1.length);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp = tmp$ret$1;
      }
      return tmp;
    };
  }
  function _Duration___init__impl__kdtzql(rawValue) {
    var tmp$ret$0;
    {
      tmp$ret$0 = true;
    }
    if (tmp$ret$0) {
      if (isInNanos(rawValue)) {
        var containsLower = new Long(387905, -1073741824);
        var containsUpper = new Long(-387905, 1073741823);
        var containsArg = _get_value__a43j40(rawValue);
        if (!(containsLower.r(containsArg) <= 0 ? containsArg.r(containsUpper) <= 0 : false))
          throw AssertionError_init_$Create$(toString_2(_get_value__a43j40(rawValue)) + ' ns is out of nanoseconds range');
      } else {
        var containsLower_0 = new Long(1, -1073741824);
        var containsUpper_0 = new Long(-1, 1073741823);
        var containsArg_0 = _get_value__a43j40(rawValue);
        if (!(containsLower_0.r(containsArg_0) <= 0 ? containsArg_0.r(containsUpper_0) <= 0 : false))
          throw AssertionError_init_$Create$(toString_2(_get_value__a43j40(rawValue)) + ' ms is out of milliseconds range');
        var containsLower_1 = new Long(1108857478, -1074);
        var containsUpper_1 = new Long(-1108857478, 1073);
        var containsArg_1 = _get_value__a43j40(rawValue);
        if (containsLower_1.r(containsArg_1) <= 0 ? containsArg_1.r(containsUpper_1) <= 0 : false)
          throw AssertionError_init_$Create$(toString_2(_get_value__a43j40(rawValue)) + ' ms is denormalized');
      }
    }
    return rawValue;
  }
  function _get_rawValue__5zfu4e($this) {
    return $this;
  }
  function _get_value__a43j40($this) {
    return _get_rawValue__5zfu4e($this).r5(1);
  }
  function isInNanos($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _get_rawValue__5zfu4e($this).s5() & 1;
    }
    return tmp$ret$0 === 0;
  }
  function isInMillis($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _get_rawValue__5zfu4e($this).s5() & 1;
    }
    return tmp$ret$0 === 1;
  }
  function _get_storageUnit__szjgha($this) {
    return isInNanos($this) ? DurationUnit_NANOSECONDS_getInstance() : DurationUnit_MILLISECONDS_getInstance();
  }
  function Companion_3() {
    Companion_instance_3 = this;
    this.t5_1 = _Duration___init__impl__kdtzql(new Long(0, 0));
    this.u5_1 = durationOfMillis(new Long(-1, 1073741823));
    this.v5_1 = durationOfMillis(new Long(1, -1073741824));
  }
  Companion_3.prototype.w5 = function (value) {
    var tmp;
    try {
      tmp = parseDuration(value, true);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof IllegalArgumentException) {
        throw IllegalArgumentException_init_$Create$_1("Invalid ISO duration string format: '" + value + "'.", $p);
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_3() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function Duration__unaryMinus_impl_x2k1y0($this) {
    var tmp = _get_value__a43j40($this).w4();
    var tmp$ret$0;
    {
      tmp$ret$0 = _get_rawValue__5zfu4e($this).s5() & 1;
    }
    return durationOf(tmp, tmp$ret$0);
  }
  function Duration__plus_impl_yu9v8f($this, other) {
    if (Duration__isInfinite_impl_tsn9y3($this)) {
      if (Duration__isFinite_impl_rzjsps(other) ? true : _get_rawValue__5zfu4e($this).x5(_get_rawValue__5zfu4e(other)).r(new Long(0, 0)) >= 0)
        return $this;
      else
        throw IllegalArgumentException_init_$Create$_0('Summing infinite durations of different signs yields an undefined result.');
    } else if (Duration__isInfinite_impl_tsn9y3(other))
      return other;
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = _get_rawValue__5zfu4e($this).s5() & 1;
    }
    var tmp_0 = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _get_rawValue__5zfu4e(other).s5() & 1;
    }
    if (tmp_0 === tmp$ret$1) {
      var result = _get_value__a43j40($this).z4(_get_value__a43j40(other));
      tmp = isInNanos($this) ? durationOfNanosNormalized(result) : durationOfMillisNormalized(result);
    } else {
      if (isInMillis($this)) {
        tmp = addValuesMixedRanges($this, _get_value__a43j40($this), _get_value__a43j40(other));
      } else {
        tmp = addValuesMixedRanges($this, _get_value__a43j40(other), _get_value__a43j40($this));
      }
    }
    return tmp;
  }
  function addValuesMixedRanges($this, thisMillis, otherNanos) {
    var otherMillis = nanosToMillis(otherNanos);
    var resultMillis = thisMillis.z4(otherMillis);
    var tmp;
    var containsLower = new Long(1108857478, -1074);
    if (resultMillis.r(new Long(-1108857478, 1073)) <= 0 ? containsLower.r(resultMillis) <= 0 : false) {
      var otherNanoRemainder = otherNanos.a5(millisToNanos(otherMillis));
      tmp = durationOfNanos(millisToNanos(resultMillis).z4(otherNanoRemainder));
    } else {
      tmp = durationOfMillis(coerceIn(resultMillis, new Long(1, -1073741824), new Long(-1, 1073741823)));
    }
    return tmp;
  }
  function Duration__isNegative_impl_pbysfa($this) {
    return _get_rawValue__5zfu4e($this).r(new Long(0, 0)) < 0;
  }
  function Duration__isInfinite_impl_tsn9y3($this) {
    return _get_rawValue__5zfu4e($this).equals(_get_rawValue__5zfu4e(Companion_getInstance_3().u5_1)) ? true : _get_rawValue__5zfu4e($this).equals(_get_rawValue__5zfu4e(Companion_getInstance_3().v5_1));
  }
  function Duration__isFinite_impl_rzjsps($this) {
    return !Duration__isInfinite_impl_tsn9y3($this);
  }
  function _Duration___get_absoluteValue__impl__vr7i6w($this) {
    return Duration__isNegative_impl_pbysfa($this) ? Duration__unaryMinus_impl_x2k1y0($this) : $this;
  }
  function Duration__compareTo_impl_pchp0f($this, other) {
    var compareBits = _get_rawValue__5zfu4e($this).x5(_get_rawValue__5zfu4e(other));
    if (compareBits.r(new Long(0, 0)) < 0 ? true : (compareBits.s5() & 1) === 0)
      return _get_rawValue__5zfu4e($this).r(_get_rawValue__5zfu4e(other));
    var tmp$ret$0;
    {
      tmp$ret$0 = _get_rawValue__5zfu4e($this).s5() & 1;
    }
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _get_rawValue__5zfu4e(other).s5() & 1;
    }
    var r = tmp - tmp$ret$1 | 0;
    return Duration__isNegative_impl_pbysfa($this) ? -r | 0 : r;
  }
  function Duration__compareTo_impl_pchp0f_0($this, other) {
    var tmp = $this.y5_1;
    return Duration__compareTo_impl_pchp0f(tmp, other instanceof Duration ? other.y5_1 : THROW_CCE());
  }
  function Duration__toComponents_impl_rvki3c($this, action) {
    {
    }
    return action(_Duration___get_inWholeDays__impl__7bvpxz($this), _Duration___get_hoursComponent__impl__7hllxa($this), _Duration___get_minutesComponent__impl__ctvd8u($this), _Duration___get_secondsComponent__impl__if34a6($this), _Duration___get_nanosecondsComponent__impl__nh19kq($this));
  }
  function Duration__toComponents_impl_rvki3c_0($this, action) {
    {
    }
    return action(_Duration___get_inWholeHours__impl__kb9f3j($this), _Duration___get_minutesComponent__impl__ctvd8u($this), _Duration___get_secondsComponent__impl__if34a6($this), _Duration___get_nanosecondsComponent__impl__nh19kq($this));
  }
  function _Duration___get_hoursComponent__impl__7hllxa($this) {
    var tmp;
    if (Duration__isInfinite_impl_tsn9y3($this)) {
      tmp = 0;
    } else {
      var tmp$ret$0;
      {
        var tmp0_rem = _Duration___get_inWholeHours__impl__kb9f3j($this);
        tmp$ret$0 = tmp0_rem.z5(new Long(24, 0));
      }
      tmp = tmp$ret$0.s5();
    }
    return tmp;
  }
  function _Duration___get_minutesComponent__impl__ctvd8u($this) {
    var tmp;
    if (Duration__isInfinite_impl_tsn9y3($this)) {
      tmp = 0;
    } else {
      var tmp$ret$0;
      {
        var tmp0_rem = _Duration___get_inWholeMinutes__impl__dognoh($this);
        tmp$ret$0 = tmp0_rem.z5(new Long(60, 0));
      }
      tmp = tmp$ret$0.s5();
    }
    return tmp;
  }
  function _Duration___get_secondsComponent__impl__if34a6($this) {
    var tmp;
    if (Duration__isInfinite_impl_tsn9y3($this)) {
      tmp = 0;
    } else {
      var tmp$ret$0;
      {
        var tmp0_rem = _Duration___get_inWholeSeconds__impl__hpy7b3($this);
        tmp$ret$0 = tmp0_rem.z5(new Long(60, 0));
      }
      tmp = tmp$ret$0.s5();
    }
    return tmp;
  }
  function _Duration___get_nanosecondsComponent__impl__nh19kq($this) {
    var tmp;
    if (Duration__isInfinite_impl_tsn9y3($this)) {
      tmp = 0;
    } else if (isInMillis($this)) {
      var tmp$ret$0;
      {
        var tmp0_rem = _get_value__a43j40($this);
        tmp$ret$0 = tmp0_rem.z5(new Long(1000, 0));
      }
      tmp = millisToNanos(tmp$ret$0).s5();
    } else {
      var tmp$ret$1;
      {
        var tmp1_rem = _get_value__a43j40($this);
        tmp$ret$1 = tmp1_rem.z5(new Long(1000000000, 0));
      }
      tmp = tmp$ret$1.s5();
    }
    return tmp;
  }
  function Duration__toLong_impl_shr43i($this, unit) {
    var tmp0_subject = _get_rawValue__5zfu4e($this);
    var tmp;
    if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_3().u5_1))) {
      Companion_getInstance_15();
      tmp = new Long(-1, 2147483647);
    } else if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_3().v5_1))) {
      Companion_getInstance_15();
      tmp = new Long(0, -2147483648);
    } else {
      tmp = convertDurationUnit_0(_get_value__a43j40($this), _get_storageUnit__szjgha($this), unit);
    }
    return tmp;
  }
  function _Duration___get_inWholeDays__impl__7bvpxz($this) {
    return Duration__toLong_impl_shr43i($this, DurationUnit_DAYS_getInstance());
  }
  function _Duration___get_inWholeHours__impl__kb9f3j($this) {
    return Duration__toLong_impl_shr43i($this, DurationUnit_HOURS_getInstance());
  }
  function _Duration___get_inWholeMinutes__impl__dognoh($this) {
    return Duration__toLong_impl_shr43i($this, DurationUnit_MINUTES_getInstance());
  }
  function _Duration___get_inWholeSeconds__impl__hpy7b3($this) {
    return Duration__toLong_impl_shr43i($this, DurationUnit_SECONDS_getInstance());
  }
  function Duration__toString_impl_8d916b($this) {
    var tmp0_subject = _get_rawValue__5zfu4e($this);
    var tmp;
    if (tmp0_subject.equals(new Long(0, 0))) {
      tmp = '0s';
    } else if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_3().u5_1))) {
      tmp = 'Infinity';
    } else if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_3().v5_1))) {
      tmp = '-Infinity';
    } else {
      var isNegative = Duration__isNegative_impl_pbysfa($this);
      var tmp$ret$2;
      {
        {
        }
        var tmp$ret$1;
        {
          var tmp0_apply = StringBuilder_init_$Create$_0();
          {
          }
          {
            if (isNegative) {
              tmp0_apply.v4(_Char___init__impl__6a9atx(45));
            }
            var tmp$ret$0;
            {
              var tmp0_toComponents = _Duration___get_absoluteValue__impl__vr7i6w($this);
              {
              }
              var tmp1__anonymous__uwfjfc = _Duration___get_inWholeDays__impl__7bvpxz(tmp0_toComponents);
              var tmp2__anonymous__z9zvc9 = _Duration___get_hoursComponent__impl__7hllxa(tmp0_toComponents);
              var tmp3__anonymous__ufb84q = _Duration___get_minutesComponent__impl__ctvd8u(tmp0_toComponents);
              var tmp4__anonymous__pkmkx7 = _Duration___get_secondsComponent__impl__if34a6(tmp0_toComponents);
              var tmp5__anonymous__kpxxpo = _Duration___get_nanosecondsComponent__impl__nh19kq(tmp0_toComponents);
              var hasDays = !tmp1__anonymous__uwfjfc.equals(new Long(0, 0));
              var hasHours = !(tmp2__anonymous__z9zvc9 === 0);
              var hasMinutes = !(tmp3__anonymous__ufb84q === 0);
              var hasSeconds = !(tmp4__anonymous__pkmkx7 === 0) ? true : !(tmp5__anonymous__kpxxpo === 0);
              var components = 0;
              if (hasDays) {
                tmp0_apply.a6(tmp1__anonymous__uwfjfc).v4(_Char___init__impl__6a9atx(100));
                var tmp0 = components;
                components = tmp0 + 1 | 0;
              }
              if (hasHours ? true : hasDays ? hasMinutes ? true : hasSeconds : false) {
                var tmp1 = components;
                components = tmp1 + 1 | 0;
                if (tmp1 > 0) {
                  tmp0_apply.v4(_Char___init__impl__6a9atx(32));
                }
                tmp0_apply.a6(tmp2__anonymous__z9zvc9).v4(_Char___init__impl__6a9atx(104));
              }
              if (hasMinutes ? true : hasSeconds ? hasHours ? true : hasDays : false) {
                var tmp2 = components;
                components = tmp2 + 1 | 0;
                if (tmp2 > 0) {
                  tmp0_apply.v4(_Char___init__impl__6a9atx(32));
                }
                tmp0_apply.a6(tmp3__anonymous__ufb84q).v4(_Char___init__impl__6a9atx(109));
              }
              if (hasSeconds) {
                var tmp3 = components;
                components = tmp3 + 1 | 0;
                if (tmp3 > 0) {
                  tmp0_apply.v4(_Char___init__impl__6a9atx(32));
                }
                if (((!(tmp4__anonymous__pkmkx7 === 0) ? true : hasDays) ? true : hasHours) ? true : hasMinutes)
                  appendFractional(tmp0_apply, $this, tmp4__anonymous__pkmkx7, tmp5__anonymous__kpxxpo, 9, 's', false);
                else if (tmp5__anonymous__kpxxpo >= 1000000)
                  appendFractional(tmp0_apply, $this, tmp5__anonymous__kpxxpo / 1000000 | 0, tmp5__anonymous__kpxxpo % 1000000 | 0, 6, 'ms', false);
                else if (tmp5__anonymous__kpxxpo >= 1000)
                  appendFractional(tmp0_apply, $this, tmp5__anonymous__kpxxpo / 1000 | 0, tmp5__anonymous__kpxxpo % 1000 | 0, 3, 'us', false);
                else {
                  tmp0_apply.a6(tmp5__anonymous__kpxxpo).b6('ns');
                }
              }
              var tmp_0;
              if (isNegative ? components > 1 : false) {
                tmp0_apply.c6(1, _Char___init__impl__6a9atx(40)).v4(_Char___init__impl__6a9atx(41));
                tmp_0 = Unit_getInstance();
              }
              tmp$ret$0 = tmp_0;
            }
          }
          tmp$ret$1 = tmp0_apply;
        }
        tmp$ret$2 = tmp$ret$1.toString();
      }
      tmp = tmp$ret$2;
    }
    return tmp;
  }
  function appendFractional(_this__u8e3s4, $this, whole, fractional, fractionalSize, unit, isoZeroes) {
    _this__u8e3s4.a6(whole);
    if (!(fractional === 0)) {
      _this__u8e3s4.v4(_Char___init__impl__6a9atx(46));
      var fracString = padStart(fractional.toString(), fractionalSize, _Char___init__impl__6a9atx(48));
      var tmp$ret$1;
      $l$block: {
        var inductionVariable = charSequenceLength(fracString) - 1 | 0;
        if (0 <= inductionVariable)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            var tmp$ret$0;
            {
              var tmp0__anonymous__q1qw7t = charSequenceGet(fracString, index);
              tmp$ret$0 = !equals_1(new Char_0(tmp0__anonymous__q1qw7t), new Char_0(_Char___init__impl__6a9atx(48)));
            }
            if (tmp$ret$0) {
              tmp$ret$1 = index;
              break $l$block;
            }
          }
           while (0 <= inductionVariable);
        tmp$ret$1 = -1;
      }
      var nonZeroDigits = tmp$ret$1 + 1 | 0;
      if (!isoZeroes ? nonZeroDigits < 3 : false) {
        _this__u8e3s4.d6(fracString, 0, nonZeroDigits);
      } else {
        _this__u8e3s4.d6(fracString, 0, imul((nonZeroDigits + 2 | 0) / 3 | 0, 3));
      }
    }
    _this__u8e3s4.b6(unit);
  }
  function Duration__toIsoString_impl_9h6wsm($this) {
    var tmp$ret$2;
    {
      {
      }
      var tmp$ret$1;
      {
        var tmp0_apply = StringBuilder_init_$Create$_0();
        {
        }
        {
          if (Duration__isNegative_impl_pbysfa($this)) {
            tmp0_apply.v4(_Char___init__impl__6a9atx(45));
          }
          tmp0_apply.b6('PT');
          var tmp$ret$0;
          {
            var tmp0_toComponents = _Duration___get_absoluteValue__impl__vr7i6w($this);
            {
            }
            var tmp1__anonymous__uwfjfc = _Duration___get_inWholeHours__impl__kb9f3j(tmp0_toComponents);
            var tmp2__anonymous__z9zvc9 = _Duration___get_minutesComponent__impl__ctvd8u(tmp0_toComponents);
            var tmp3__anonymous__ufb84q = _Duration___get_secondsComponent__impl__if34a6(tmp0_toComponents);
            var tmp4__anonymous__pkmkx7 = _Duration___get_nanosecondsComponent__impl__nh19kq(tmp0_toComponents);
            var hours = tmp1__anonymous__uwfjfc;
            if (Duration__isInfinite_impl_tsn9y3($this)) {
              hours = new Long(1316134911, 2328);
            }
            var hasHours = !hours.equals(new Long(0, 0));
            var hasSeconds = !(tmp3__anonymous__ufb84q === 0) ? true : !(tmp4__anonymous__pkmkx7 === 0);
            var hasMinutes = !(tmp2__anonymous__z9zvc9 === 0) ? true : hasSeconds ? hasHours : false;
            if (hasHours) {
              tmp0_apply.a6(hours).v4(_Char___init__impl__6a9atx(72));
            }
            if (hasMinutes) {
              tmp0_apply.a6(tmp2__anonymous__z9zvc9).v4(_Char___init__impl__6a9atx(77));
            }
            var tmp;
            if (hasSeconds ? true : !hasHours ? !hasMinutes : false) {
              tmp = appendFractional(tmp0_apply, $this, tmp3__anonymous__ufb84q, tmp4__anonymous__pkmkx7, 9, 'S', true);
            }
            tmp$ret$0 = tmp;
          }
        }
        tmp$ret$1 = tmp0_apply;
      }
      tmp$ret$2 = tmp$ret$1.toString();
    }
    return tmp$ret$2;
  }
  function Duration__hashCode_impl_u4exz6($this) {
    return $this.hashCode();
  }
  function Duration__equals_impl_ygj6w6($this, other) {
    if (!(other instanceof Duration))
      return false;
    var tmp0_other_with_cast = other instanceof Duration ? other.y5_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function Duration(rawValue) {
    Companion_getInstance_3();
    this.y5_1 = rawValue;
  }
  Duration.prototype.e6 = function (other) {
    return Duration__compareTo_impl_pchp0f(this.y5_1, other);
  };
  Duration.prototype.f6 = function (other) {
    return Duration__compareTo_impl_pchp0f_0(this, other);
  };
  Duration.prototype.toString = function () {
    return Duration__toString_impl_8d916b(this.y5_1);
  };
  Duration.prototype.hashCode = function () {
    return Duration__hashCode_impl_u4exz6(this.y5_1);
  };
  Duration.prototype.equals = function (other) {
    return Duration__equals_impl_ygj6w6(this.y5_1, other);
  };
  Duration.$metadata$ = classMeta('Duration', [Comparable]);
  function durationOfMillis(normalMillis) {
    var tmp$ret$0;
    {
      var tmp0_plus = normalMillis.g6(1);
      tmp$ret$0 = tmp0_plus.z4(new Long(1, 0));
    }
    return _Duration___init__impl__kdtzql(tmp$ret$0);
  }
  function toDuration(_this__u8e3s4, unit) {
    var maxNsInUnit = convertDurationUnitOverflow(new Long(-387905, 1073741823), DurationUnit_NANOSECONDS_getInstance(), unit);
    if (maxNsInUnit.w4().r(_this__u8e3s4) <= 0 ? _this__u8e3s4.r(maxNsInUnit) <= 0 : false) {
      return durationOfNanos(convertDurationUnitOverflow(_this__u8e3s4, unit, DurationUnit_NANOSECONDS_getInstance()));
    } else {
      var millis = convertDurationUnit_0(_this__u8e3s4, unit, DurationUnit_MILLISECONDS_getInstance());
      return durationOfMillis(coerceIn(millis, new Long(1, -1073741824), new Long(-1, 1073741823)));
    }
  }
  function toDuration_0(_this__u8e3s4, unit) {
    var valueInNs = convertDurationUnit(_this__u8e3s4, unit, DurationUnit_NANOSECONDS_getInstance());
    {
      var tmp0_require = !isNaN_0(valueInNs);
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Duration value cannot be NaN.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var nanos = roundToLong(valueInNs);
    var tmp;
    var containsLower = new Long(387905, -1073741824);
    if (nanos.r(new Long(-387905, 1073741823)) <= 0 ? containsLower.r(nanos) <= 0 : false) {
      tmp = durationOfNanos(nanos);
    } else {
      var millis = roundToLong(convertDurationUnit(_this__u8e3s4, unit, DurationUnit_MILLISECONDS_getInstance()));
      tmp = durationOfMillisNormalized(millis);
    }
    return tmp;
  }
  function parseDuration(value, strictIso) {
    var length = value.length;
    if (length === 0)
      throw IllegalArgumentException_init_$Create$_0('The string is empty');
    var index = 0;
    var result = Companion_getInstance_3().t5_1;
    var infinityString = 'Infinity';
    var tmp0_subject = charSequenceGet(value, index);
    if (equals_1(new Char_0(tmp0_subject), new Char_0(_Char___init__impl__6a9atx(43))) ? true : equals_1(new Char_0(tmp0_subject), new Char_0(_Char___init__impl__6a9atx(45)))) {
      var tmp1 = index;
      index = tmp1 + 1 | 0;
    }
    var hasSign = index > 0;
    var tmp;
    if (hasSign) {
      var tmp_0 = _Char___init__impl__6a9atx(45);
      tmp = startsWith$default(value, tmp_0, false, 2, null);
    } else {
      tmp = false;
    }
    var isNegative = tmp;
    if (length <= index)
      throw IllegalArgumentException_init_$Create$_0('No components');
    else {
      if (equals_1(new Char_0(charSequenceGet(value, index)), new Char_0(_Char___init__impl__6a9atx(80)))) {
        index = index + 1 | 0;
        if (index === length)
          throw IllegalArgumentException_init_$Create$();
        var nonDigitSymbols = '+-.';
        var isTimeComponent = false;
        var prevUnit = null;
        $l$loop: while (index < length) {
          if (equals_1(new Char_0(charSequenceGet(value, index)), new Char_0(_Char___init__impl__6a9atx(84)))) {
            var tmp_1;
            if (isTimeComponent) {
              tmp_1 = true;
            } else {
              index = index + 1 | 0;
              tmp_1 = index === length;
            }
            if (tmp_1)
              throw IllegalArgumentException_init_$Create$();
            isTimeComponent = true;
            continue $l$loop;
          }
          var tmp$ret$4;
          {
            var tmp1_substringWhile = index;
            var tmp$ret$3;
            {
              var tmp$ret$1;
              {
                var i = tmp1_substringWhile;
                $l$loop_0: while (true) {
                  var tmp_2;
                  if (i < value.length) {
                    var tmp$ret$0;
                    {
                      var tmp2__anonymous__z9zvc9 = charSequenceGet(value, i);
                      var tmp_3;
                      if (_Char___init__impl__6a9atx(48) <= tmp2__anonymous__z9zvc9 ? tmp2__anonymous__z9zvc9 <= _Char___init__impl__6a9atx(57) : false) {
                        tmp_3 = true;
                      } else {
                        tmp_3 = contains$default(nonDigitSymbols, tmp2__anonymous__z9zvc9, false, 2, null);
                      }
                      tmp$ret$0 = tmp_3;
                    }
                    tmp_2 = tmp$ret$0;
                  } else {
                    tmp_2 = false;
                  }
                  if (!tmp_2) {
                    break $l$loop_0;
                  }
                  var tmp0 = i;
                  i = tmp0 + 1 | 0;
                }
                tmp$ret$1 = i;
              }
              var tmp0_substring = tmp$ret$1;
              var tmp$ret$2;
              {
                tmp$ret$2 = value;
              }
              tmp$ret$3 = tmp$ret$2.substring(tmp1_substringWhile, tmp0_substring);
            }
            tmp$ret$4 = tmp$ret$3;
          }
          var component = tmp$ret$4;
          var tmp$ret$5;
          {
            tmp$ret$5 = charSequenceLength(component) === 0;
          }
          if (tmp$ret$5)
            throw IllegalArgumentException_init_$Create$();
          index = index + component.length | 0;
          var tmp$ret$6;
          {
            var tmp3_getOrElse = index;
            var tmp_4;
            if (tmp3_getOrElse >= 0 ? tmp3_getOrElse <= get_lastIndex_3(value) : false) {
              tmp_4 = charSequenceGet(value, tmp3_getOrElse);
            } else {
              throw IllegalArgumentException_init_$Create$_0('Missing unit for value ' + component);
            }
            tmp$ret$6 = tmp_4;
          }
          var unitChar = tmp$ret$6;
          var tmp2 = index;
          index = tmp2 + 1 | 0;
          var unit = durationUnitByIsoChar(unitChar, isTimeComponent);
          if (!(prevUnit == null) ? prevUnit.n4(unit) <= 0 : false)
            throw IllegalArgumentException_init_$Create$_0('Unexpected order of duration components');
          prevUnit = unit;
          var tmp_5 = _Char___init__impl__6a9atx(46);
          var dotIndex = indexOf$default(component, tmp_5, 0, false, 6, null);
          if (unit.equals(DurationUnit_SECONDS_getInstance()) ? dotIndex > 0 : false) {
            var tmp$ret$8;
            {
              var tmp$ret$7;
              {
                tmp$ret$7 = component;
              }
              tmp$ret$8 = tmp$ret$7.substring(0, dotIndex);
            }
            var whole = tmp$ret$8;
            result = Duration__plus_impl_yu9v8f(result, toDuration(parseOverLongIsoComponent(whole), unit));
            var tmp_6 = result;
            var tmp$ret$10;
            {
              var tmp$ret$9;
              {
                tmp$ret$9 = component;
              }
              tmp$ret$10 = tmp$ret$9.substring(dotIndex);
            }
            result = Duration__plus_impl_yu9v8f(tmp_6, toDuration_0(toDouble(tmp$ret$10), unit));
          } else {
            result = Duration__plus_impl_yu9v8f(result, toDuration(parseOverLongIsoComponent(component), unit));
          }
        }
      } else {
        if (strictIso)
          throw IllegalArgumentException_init_$Create$();
        else {
          var tmp_7 = index;
          var tmp$ret$11;
          {
            var tmp4_maxOf = length - index | 0;
            var tmp5_maxOf = infinityString.length;
            tmp$ret$11 = Math.max(tmp4_maxOf, tmp5_maxOf);
          }
          if (regionMatches(value, tmp_7, infinityString, 0, tmp$ret$11, true)) {
            result = Companion_getInstance_3().u5_1;
          } else {
            var prevUnit_0 = null;
            var afterFirst = false;
            var allowSpaces = !hasSign;
            if ((hasSign ? equals_1(new Char_0(charSequenceGet(value, index)), new Char_0(_Char___init__impl__6a9atx(40))) : false) ? equals_1(new Char_0(last_0(value)), new Char_0(_Char___init__impl__6a9atx(41))) : false) {
              allowSpaces = true;
              index = index + 1 | 0;
              var tmp_8 = index;
              length = length - 1 | 0;
              if (tmp_8 === length)
                throw IllegalArgumentException_init_$Create$_0('No components');
            }
            while (index < length) {
              if (afterFirst ? allowSpaces : false) {
                var tmp$ret$13;
                {
                  var tmp6_skipWhile = index;
                  var i_0 = tmp6_skipWhile;
                  $l$loop_1: while (true) {
                    var tmp_9;
                    if (i_0 < value.length) {
                      var tmp$ret$12;
                      {
                        var tmp7__anonymous__b0knam = charSequenceGet(value, i_0);
                        tmp$ret$12 = equals_1(new Char_0(tmp7__anonymous__b0knam), new Char_0(_Char___init__impl__6a9atx(32)));
                      }
                      tmp_9 = tmp$ret$12;
                    } else {
                      tmp_9 = false;
                    }
                    if (!tmp_9) {
                      break $l$loop_1;
                    }
                    var tmp0_0 = i_0;
                    i_0 = tmp0_0 + 1 | 0;
                  }
                  tmp$ret$13 = i_0;
                }
                index = tmp$ret$13;
              }
              afterFirst = true;
              var tmp$ret$18;
              {
                var tmp9_substringWhile = index;
                var tmp$ret$17;
                {
                  var tmp$ret$15;
                  {
                    var i_1 = tmp9_substringWhile;
                    $l$loop_2: while (true) {
                      var tmp_10;
                      if (i_1 < value.length) {
                        var tmp$ret$14;
                        {
                          var tmp10__anonymous__yfiz50 = charSequenceGet(value, i_1);
                          tmp$ret$14 = (_Char___init__impl__6a9atx(48) <= tmp10__anonymous__yfiz50 ? tmp10__anonymous__yfiz50 <= _Char___init__impl__6a9atx(57) : false) ? true : equals_1(new Char_0(tmp10__anonymous__yfiz50), new Char_0(_Char___init__impl__6a9atx(46)));
                        }
                        tmp_10 = tmp$ret$14;
                      } else {
                        tmp_10 = false;
                      }
                      if (!tmp_10) {
                        break $l$loop_2;
                      }
                      var tmp0_1 = i_1;
                      i_1 = tmp0_1 + 1 | 0;
                    }
                    tmp$ret$15 = i_1;
                  }
                  var tmp8_substring = tmp$ret$15;
                  var tmp$ret$16;
                  {
                    tmp$ret$16 = value;
                  }
                  tmp$ret$17 = tmp$ret$16.substring(tmp9_substringWhile, tmp8_substring);
                }
                tmp$ret$18 = tmp$ret$17;
              }
              var component_0 = tmp$ret$18;
              var tmp$ret$19;
              {
                tmp$ret$19 = charSequenceLength(component_0) === 0;
              }
              if (tmp$ret$19)
                throw IllegalArgumentException_init_$Create$();
              index = index + component_0.length | 0;
              var tmp$ret$24;
              {
                var tmp12_substringWhile = index;
                var tmp$ret$23;
                {
                  var tmp$ret$21;
                  {
                    var i_2 = tmp12_substringWhile;
                    $l$loop_3: while (true) {
                      var tmp_11;
                      if (i_2 < value.length) {
                        var tmp$ret$20;
                        {
                          var tmp13__anonymous__jvh1if = charSequenceGet(value, i_2);
                          tmp$ret$20 = _Char___init__impl__6a9atx(97) <= tmp13__anonymous__jvh1if ? tmp13__anonymous__jvh1if <= _Char___init__impl__6a9atx(122) : false;
                        }
                        tmp_11 = tmp$ret$20;
                      } else {
                        tmp_11 = false;
                      }
                      if (!tmp_11) {
                        break $l$loop_3;
                      }
                      var tmp0_2 = i_2;
                      i_2 = tmp0_2 + 1 | 0;
                    }
                    tmp$ret$21 = i_2;
                  }
                  var tmp11_substring = tmp$ret$21;
                  var tmp$ret$22;
                  {
                    tmp$ret$22 = value;
                  }
                  tmp$ret$23 = tmp$ret$22.substring(tmp12_substringWhile, tmp11_substring);
                }
                tmp$ret$24 = tmp$ret$23;
              }
              var unitName = tmp$ret$24;
              index = index + unitName.length | 0;
              var unit_0 = durationUnitByShortName(unitName);
              if (!(prevUnit_0 == null) ? prevUnit_0.n4(unit_0) <= 0 : false)
                throw IllegalArgumentException_init_$Create$_0('Unexpected order of duration components');
              prevUnit_0 = unit_0;
              var tmp_12 = _Char___init__impl__6a9atx(46);
              var dotIndex_0 = indexOf$default(component_0, tmp_12, 0, false, 6, null);
              if (dotIndex_0 > 0) {
                var tmp$ret$26;
                {
                  var tmp$ret$25;
                  {
                    tmp$ret$25 = component_0;
                  }
                  tmp$ret$26 = tmp$ret$25.substring(0, dotIndex_0);
                }
                var whole_0 = tmp$ret$26;
                result = Duration__plus_impl_yu9v8f(result, toDuration(toLong(whole_0), unit_0));
                var tmp_13 = result;
                var tmp$ret$28;
                {
                  var tmp$ret$27;
                  {
                    tmp$ret$27 = component_0;
                  }
                  tmp$ret$28 = tmp$ret$27.substring(dotIndex_0);
                }
                result = Duration__plus_impl_yu9v8f(tmp_13, toDuration_0(toDouble(tmp$ret$28), unit_0));
                if (index < length)
                  throw IllegalArgumentException_init_$Create$_0('Fractional component must be last');
              } else {
                result = Duration__plus_impl_yu9v8f(result, toDuration(toLong(component_0), unit_0));
              }
            }
          }
        }
      }
    }
    return isNegative ? Duration__unaryMinus_impl_x2k1y0(result) : result;
  }
  function durationOf(normalValue, unitDiscriminator) {
    var tmp$ret$0;
    {
      var tmp0_plus = normalValue.g6(1);
      tmp$ret$0 = tmp0_plus.z4(toLong_0(unitDiscriminator));
    }
    return _Duration___init__impl__kdtzql(tmp$ret$0);
  }
  function durationOfNanosNormalized(nanos) {
    var tmp;
    var containsLower = new Long(387905, -1073741824);
    if (nanos.r(new Long(-387905, 1073741823)) <= 0 ? containsLower.r(nanos) <= 0 : false) {
      tmp = durationOfNanos(nanos);
    } else {
      tmp = durationOfMillis(nanosToMillis(nanos));
    }
    return tmp;
  }
  function durationOfMillisNormalized(millis) {
    var tmp;
    var containsLower = new Long(1108857478, -1074);
    if (millis.r(new Long(-1108857478, 1073)) <= 0 ? containsLower.r(millis) <= 0 : false) {
      tmp = durationOfNanos(millisToNanos(millis));
    } else {
      tmp = durationOfMillis(coerceIn(millis, new Long(1, -1073741824), new Long(-1, 1073741823)));
    }
    return tmp;
  }
  function nanosToMillis(nanos) {
    var tmp$ret$0;
    {
      var tmp0_div = 1000000;
      tmp$ret$0 = nanos.x4(toLong_0(tmp0_div));
    }
    return tmp$ret$0;
  }
  function millisToNanos(millis) {
    var tmp$ret$0;
    {
      var tmp0_times = 1000000;
      tmp$ret$0 = millis.y4(toLong_0(tmp0_times));
    }
    return tmp$ret$0;
  }
  function durationOfNanos(normalNanos) {
    return _Duration___init__impl__kdtzql(normalNanos.g6(1));
  }
  function substringWhile(_this__u8e3s4, startIndex, predicate) {
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        var i = startIndex;
        while (i < _this__u8e3s4.length ? predicate(new Char_0(charSequenceGet(_this__u8e3s4, i))) : false) {
          var tmp0 = i;
          i = tmp0 + 1 | 0;
        }
        tmp$ret$0 = i;
      }
      var tmp0_substring = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4;
      }
      tmp$ret$2 = tmp$ret$1.substring(startIndex, tmp0_substring);
    }
    return tmp$ret$2;
  }
  function parseOverLongIsoComponent(value) {
    var length = value.length;
    var startIndex = 0;
    var tmp;
    if (length > 0) {
      var tmp_0 = charSequenceGet(value, 0);
      tmp = contains$default('+-', tmp_0, false, 2, null);
    } else {
      tmp = false;
    }
    if (tmp) {
      var tmp0 = startIndex;
      startIndex = tmp0 + 1 | 0;
    }
    var tmp_1;
    if ((length - startIndex | 0) > 16) {
      var tmp$ret$0;
      $l$block_0: {
        var tmp0_all = numberRangeToNumber(startIndex, get_lastIndex_3(value));
        var tmp_2;
        if (isInterface(tmp0_all, Collection)) {
          tmp_2 = tmp0_all.i();
        } else {
          tmp_2 = false;
        }
        if (tmp_2) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var inductionVariable = tmp0_all.h6();
        var last = tmp0_all.i6();
        if (inductionVariable <= last)
          do {
            var element = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$1;
            {
              var containsArg = charSequenceGet(value, element);
              tmp$ret$1 = _Char___init__impl__6a9atx(48) <= containsArg ? containsArg <= _Char___init__impl__6a9atx(57) : false;
            }
            if (!tmp$ret$1) {
              tmp$ret$0 = false;
              break $l$block_0;
            }
          }
           while (!(element === last));
        tmp$ret$0 = true;
      }
      tmp_1 = tmp$ret$0;
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      var tmp_3;
      if (equals_1(new Char_0(charSequenceGet(value, 0)), new Char_0(_Char___init__impl__6a9atx(45)))) {
        Companion_getInstance_15();
        tmp_3 = new Long(0, -2147483648);
      } else {
        Companion_getInstance_15();
        tmp_3 = new Long(-1, 2147483647);
      }
      return tmp_3;
    }
    var tmp_4;
    if (startsWith$default_0(value, '+', false, 2, null)) {
      tmp_4 = toLong(drop(value, 1));
    } else {
      tmp_4 = toLong(value);
    }
    return tmp_4;
  }
  function skipWhile(_this__u8e3s4, startIndex, predicate) {
    var i = startIndex;
    while (i < _this__u8e3s4.length ? predicate(new Char_0(charSequenceGet(_this__u8e3s4, i))) : false) {
      var tmp0 = i;
      i = tmp0 + 1 | 0;
    }
    return i;
  }
  function durationUnitByIsoChar(isoChar, isTimeComponent) {
    var tmp;
    if (!isTimeComponent) {
      var tmp0_subject = isoChar;
      var tmp_0;
      if (equals_1(new Char_0(tmp0_subject), new Char_0(_Char___init__impl__6a9atx(68)))) {
        tmp_0 = DurationUnit_DAYS_getInstance();
      } else {
        throw IllegalArgumentException_init_$Create$_0('Invalid or unsupported duration ISO non-time unit: ' + new Char_0(isoChar));
      }
      tmp = tmp_0;
    } else {
      var tmp1_subject = isoChar;
      var tmp_1;
      if (equals_1(new Char_0(tmp1_subject), new Char_0(_Char___init__impl__6a9atx(72)))) {
        tmp_1 = DurationUnit_HOURS_getInstance();
      } else if (equals_1(new Char_0(tmp1_subject), new Char_0(_Char___init__impl__6a9atx(77)))) {
        tmp_1 = DurationUnit_MINUTES_getInstance();
      } else if (equals_1(new Char_0(tmp1_subject), new Char_0(_Char___init__impl__6a9atx(83)))) {
        tmp_1 = DurationUnit_SECONDS_getInstance();
      } else {
        throw IllegalArgumentException_init_$Create$_0('Invalid duration ISO time unit: ' + new Char_0(isoChar));
      }
      tmp = tmp_1;
    }
    return tmp;
  }
  function durationUnitByShortName(shortName) {
    var tmp0_subject = shortName;
    var tmp;
    switch (tmp0_subject) {
      case 'ns':
        tmp = DurationUnit_NANOSECONDS_getInstance();
        break;
      case 'us':
        tmp = DurationUnit_MICROSECONDS_getInstance();
        break;
      case 'ms':
        tmp = DurationUnit_MILLISECONDS_getInstance();
        break;
      case 's':
        tmp = DurationUnit_SECONDS_getInstance();
        break;
      case 'm':
        tmp = DurationUnit_MINUTES_getInstance();
        break;
      case 'h':
        tmp = DurationUnit_HOURS_getInstance();
        break;
      case 'd':
        tmp = DurationUnit_DAYS_getInstance();
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Unknown duration unit short name: ' + shortName);
    }
    return tmp;
  }
  function get_UNDEFINED_RESULT() {
    init_properties_DeepRecursive_kt_b2anle();
    return UNDEFINED_RESULT;
  }
  var UNDEFINED_RESULT;
  function DeepRecursiveScope() {
  }
  DeepRecursiveScope.$metadata$ = classMeta('DeepRecursiveScope');
  function invoke(_this__u8e3s4, value) {
    init_properties_DeepRecursive_kt_b2anle();
    return (new DeepRecursiveScopeImpl(_this__u8e3s4.k6_1, value)).p6();
  }
  function DeepRecursiveFunction(block) {
    this.k6_1 = block;
  }
  DeepRecursiveFunction.$metadata$ = classMeta('DeepRecursiveFunction');
  function DeepRecursiveScopeImpl(block, value) {
    DeepRecursiveScope.call(this);
    var tmp = this;
    tmp.l6_1 = isSuspendFunction(block, 2) ? block : THROW_CCE();
    this.m6_1 = value;
    var tmp_0 = this;
    tmp_0.n6_1 = isInterface(this, Continuation) ? this : THROW_CCE();
    this.o6_1 = get_UNDEFINED_RESULT();
  }
  DeepRecursiveScopeImpl.prototype.o3 = function () {
    return EmptyCoroutineContext_getInstance();
  };
  DeepRecursiveScopeImpl.prototype.q6 = function (result) {
    this.n6_1 = null;
    this.o6_1 = result;
  };
  DeepRecursiveScopeImpl.prototype.m3 = function (result) {
    return this.q6(result);
  };
  DeepRecursiveScopeImpl.prototype.j6 = function (value, $cont) {
    var tmp$ret$0;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var tmp = this;
      tmp.n6_1 = isInterface(tmp0__anonymous__q1qw7t, Continuation) ? tmp0__anonymous__q1qw7t : THROW_CCE();
      this.m6_1 = value;
      tmp$ret$0 = get_COROUTINE_SUSPENDED();
    }
    return tmp$ret$0;
  };
  DeepRecursiveScopeImpl.prototype.p6 = function () {
    $l$loop: while (true) {
      var result = this.o6_1;
      var tmp0_elvis_lhs = this.n6_1;
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$0;
        {
          var tmp0_getOrThrow = new Result(result) instanceof Result ? result : THROW_CCE();
          throwOnFailure(tmp0_getOrThrow);
          var tmp_0 = _Result___get_value__impl__bjfvqg(tmp0_getOrThrow);
          tmp$ret$0 = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
        }
        return tmp$ret$0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var cont = tmp;
      if (equals_1(get_UNDEFINED_RESULT(), result)) {
        var tmp_1;
        try {
          var tmp$ret$2;
          {
            var tmp1_startCoroutineUninterceptedOrReturn = this.l6_1;
            var tmp2_startCoroutineUninterceptedOrReturn = this.m6_1;
            var tmp$ret$1;
            {
              tmp$ret$1 = tmp1_startCoroutineUninterceptedOrReturn;
            }
            var a = tmp$ret$1;
            tmp$ret$2 = typeof a === 'function' ? a(this, tmp2_startCoroutineUninterceptedOrReturn, cont) : tmp1_startCoroutineUninterceptedOrReturn.r6(this, tmp2_startCoroutineUninterceptedOrReturn, cont);
          }
          tmp_1 = tmp$ret$2;
        } catch ($p) {
          var tmp_2;
          if ($p instanceof Error) {
            var tmp$ret$4;
            {
              var tmp$ret$3;
              {
                var tmp0_failure = Companion_getInstance_4();
                tmp$ret$3 = _Result___init__impl__xyqfz8(createFailure($p));
              }
              tmp$ret$4 = cont.m3(tmp$ret$3);
            }
            continue $l$loop;
          } else {
            throw $p;
          }
          tmp_1 = tmp_2;
        }
        var r = tmp_1;
        if (!(r === get_COROUTINE_SUSPENDED())) {
          var tmp$ret$6;
          {
            var tmp3_resume = (r == null ? true : isObject(r)) ? r : THROW_CCE();
            var tmp$ret$5;
            {
              var tmp0_success = Companion_getInstance_4();
              tmp$ret$5 = _Result___init__impl__xyqfz8(tmp3_resume);
            }
            tmp$ret$6 = cont.m3(tmp$ret$5);
          }
        }
      } else {
        this.o6_1 = get_UNDEFINED_RESULT();
        cont.m3(result);
      }
    }
  };
  DeepRecursiveScopeImpl.$metadata$ = classMeta('DeepRecursiveScopeImpl', [Continuation], undefined, undefined, undefined, DeepRecursiveScope.prototype);
  var properties_initialized_DeepRecursive_kt_5z0al2;
  function init_properties_DeepRecursive_kt_b2anle() {
    if (properties_initialized_DeepRecursive_kt_5z0al2) {
    } else {
      properties_initialized_DeepRecursive_kt_5z0al2 = true;
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_4();
        var tmp1_success = get_COROUTINE_SUSPENDED();
        tmp$ret$0 = _Result___init__impl__xyqfz8(tmp1_success);
      }
      UNDEFINED_RESULT = tmp$ret$0;
    }
  }
  function hashCode(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  }
  function getValue_0(_this__u8e3s4, thisRef, property) {
    return _this__u8e3s4.l1();
  }
  function Lazy() {
  }
  Lazy.$metadata$ = interfaceMeta('Lazy');
  var LazyThreadSafetyMode_SYNCHRONIZED_instance;
  var LazyThreadSafetyMode_PUBLICATION_instance;
  var LazyThreadSafetyMode_NONE_instance;
  var LazyThreadSafetyMode_entriesInitialized;
  function LazyThreadSafetyMode_initEntries() {
    if (LazyThreadSafetyMode_entriesInitialized)
      return Unit_getInstance();
    LazyThreadSafetyMode_entriesInitialized = true;
    LazyThreadSafetyMode_SYNCHRONIZED_instance = new LazyThreadSafetyMode('SYNCHRONIZED', 0);
    LazyThreadSafetyMode_PUBLICATION_instance = new LazyThreadSafetyMode('PUBLICATION', 1);
    LazyThreadSafetyMode_NONE_instance = new LazyThreadSafetyMode('NONE', 2);
  }
  function LazyThreadSafetyMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  LazyThreadSafetyMode.$metadata$ = classMeta('LazyThreadSafetyMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function UnsafeLazyImpl(initializer) {
    this.s6_1 = initializer;
    this.t6_1 = UNINITIALIZED_VALUE_getInstance();
  }
  UnsafeLazyImpl.prototype.l1 = function () {
    if (this.t6_1 === UNINITIALIZED_VALUE_getInstance()) {
      this.t6_1 = ensureNotNull(this.s6_1)();
      this.s6_1 = null;
    }
    var tmp = this.t6_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  UnsafeLazyImpl.prototype.u6 = function () {
    return !(this.t6_1 === UNINITIALIZED_VALUE_getInstance());
  };
  UnsafeLazyImpl.prototype.toString = function () {
    return this.u6() ? toString_1(this.l1()) : 'Lazy value not initialized yet.';
  };
  UnsafeLazyImpl.$metadata$ = classMeta('UnsafeLazyImpl', [Lazy, Serializable]);
  function UNINITIALIZED_VALUE() {
    UNINITIALIZED_VALUE_instance = this;
  }
  UNINITIALIZED_VALUE.$metadata$ = objectMeta('UNINITIALIZED_VALUE');
  var UNINITIALIZED_VALUE_instance;
  function UNINITIALIZED_VALUE_getInstance() {
    if (UNINITIALIZED_VALUE_instance == null)
      new UNINITIALIZED_VALUE();
    return UNINITIALIZED_VALUE_instance;
  }
  function LazyThreadSafetyMode_PUBLICATION_getInstance() {
    LazyThreadSafetyMode_initEntries();
    return LazyThreadSafetyMode_PUBLICATION_instance;
  }
  function check(value) {
    {
    }
    {
      {
      }
      if (!value) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Check failed.';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString_2(message));
      }
    }
  }
  function check_0(value, lazyMessage) {
    {
    }
    if (!value) {
      var message = lazyMessage();
      throw IllegalStateException_init_$Create$(toString_2(message));
    }
  }
  function error(message) {
    throw IllegalStateException_init_$Create$(toString_2(message));
  }
  function require_0(value) {
    {
    }
    {
      {
      }
      if (!value) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Failed requirement.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
  }
  function require_1(value, lazyMessage) {
    {
    }
    if (!value) {
      var message = lazyMessage();
      throw IllegalArgumentException_init_$Create$_0(toString_2(message));
    }
  }
  function checkNotNull(value) {
    {
    }
    var tmp$ret$1;
    $l$block: {
      {
      }
      if (value == null) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Required value was null.';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString_2(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    return tmp$ret$1;
  }
  function checkNotNull_0(value, lazyMessage) {
    {
    }
    if (value == null) {
      var message = lazyMessage();
      throw IllegalStateException_init_$Create$(toString_2(message));
    } else {
      return value;
    }
  }
  function requireNotNull(value, lazyMessage) {
    {
    }
    if (value == null) {
      var message = lazyMessage();
      throw IllegalArgumentException_init_$Create$_0(toString_2(message));
    } else {
      return value;
    }
  }
  function _Result___init__impl__xyqfz8(value) {
    return value;
  }
  function _Result___get_value__impl__bjfvqg($this) {
    return $this;
  }
  function _Result___get_isFailure__impl__jpiriv($this) {
    var tmp = _Result___get_value__impl__bjfvqg($this);
    return tmp instanceof Failure;
  }
  function Result__getOrNull_impl_x6tyqe($this) {
    var tmp;
    if (_Result___get_isFailure__impl__jpiriv($this)) {
      tmp = null;
    } else {
      var tmp_0 = _Result___get_value__impl__bjfvqg($this);
      tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
    }
    return tmp;
  }
  function Result__exceptionOrNull_impl_p6xea9($this) {
    var tmp0_subject = _Result___get_value__impl__bjfvqg($this);
    var tmp;
    if (tmp0_subject instanceof Failure) {
      tmp = _Result___get_value__impl__bjfvqg($this).v6_1;
    } else {
      tmp = null;
    }
    return tmp;
  }
  function Result__toString_impl_yu5r8k($this) {
    var tmp0_subject = _Result___get_value__impl__bjfvqg($this);
    var tmp;
    if (tmp0_subject instanceof Failure) {
      tmp = toString_2(_Result___get_value__impl__bjfvqg($this));
    } else {
      tmp = 'Success(' + toString_1(_Result___get_value__impl__bjfvqg($this)) + ')';
    }
    return tmp;
  }
  function Companion_4() {
    Companion_instance_4 = this;
  }
  Companion_4.prototype.w6 = function (value) {
    return _Result___init__impl__xyqfz8(value);
  };
  Companion_4.prototype.x6 = function (exception) {
    return _Result___init__impl__xyqfz8(createFailure(exception));
  };
  Companion_4.$metadata$ = objectMeta('Companion');
  var Companion_instance_4;
  function Companion_getInstance_4() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function Failure(exception) {
    this.v6_1 = exception;
  }
  Failure.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Failure) {
      tmp = equals_1(this.v6_1, other.v6_1);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Failure.prototype.hashCode = function () {
    return hashCode_0(this.v6_1);
  };
  Failure.prototype.toString = function () {
    return 'Failure(' + this.v6_1 + ')';
  };
  Failure.$metadata$ = classMeta('Failure', [Serializable]);
  function Result__hashCode_impl_d2zufp($this) {
    return $this == null ? 0 : hashCode_0($this);
  }
  function Result__equals_impl_bxgmep($this, other) {
    if (!(other instanceof Result))
      return false;
    var tmp0_other_with_cast = other instanceof Result ? other.y6_1 : THROW_CCE();
    if (!equals_1($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function Result(value) {
    Companion_getInstance_4();
    this.y6_1 = value;
  }
  Result.prototype.toString = function () {
    return Result__toString_impl_yu5r8k(this.y6_1);
  };
  Result.prototype.hashCode = function () {
    return Result__hashCode_impl_d2zufp(this.y6_1);
  };
  Result.prototype.equals = function (other) {
    return Result__equals_impl_bxgmep(this.y6_1, other);
  };
  Result.$metadata$ = classMeta('Result', [Serializable]);
  function createFailure(exception) {
    return new Failure(exception);
  }
  function getOrThrow(_this__u8e3s4) {
    throwOnFailure(_this__u8e3s4);
    var tmp = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  }
  function throwOnFailure(_this__u8e3s4) {
    var tmp = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
    if (tmp instanceof Failure)
      throw _Result___get_value__impl__bjfvqg(_this__u8e3s4).v6_1;
  }
  function runCatching(_this__u8e3s4, block) {
    var tmp;
    try {
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_4();
        var tmp1_success = block(_this__u8e3s4);
        tmp$ret$0 = _Result___init__impl__xyqfz8(tmp1_success);
      }
      tmp = tmp$ret$0;
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        var tmp$ret$1;
        {
          var tmp2_failure = Companion_getInstance_4();
          tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure($p));
        }
        tmp_0 = tmp$ret$1;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function fold_1(_this__u8e3s4, onSuccess, onFailure) {
    {
    }
    var exception = Result__exceptionOrNull_impl_p6xea9(_this__u8e3s4);
    var tmp;
    if (exception == null) {
      var tmp_0 = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
      tmp = onSuccess((tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE());
    } else {
      tmp = onFailure(exception);
    }
    return tmp;
  }
  function run(block) {
    {
    }
    return block();
  }
  function NotImplementedError(message) {
    Error_init_$Init$(message, this);
    captureStack(this, NotImplementedError);
  }
  NotImplementedError.$metadata$ = classMeta('NotImplementedError', undefined, undefined, undefined, undefined, Error_0.prototype);
  function let_0(_this__u8e3s4, block) {
    {
    }
    return block(_this__u8e3s4);
  }
  function apply(_this__u8e3s4, block) {
    {
    }
    block(_this__u8e3s4);
    return _this__u8e3s4;
  }
  function run_0(_this__u8e3s4, block) {
    {
    }
    return block(_this__u8e3s4);
  }
  function also(_this__u8e3s4, block) {
    {
    }
    block(_this__u8e3s4);
    return _this__u8e3s4;
  }
  function takeIf(_this__u8e3s4, predicate) {
    {
    }
    return predicate(_this__u8e3s4) ? _this__u8e3s4 : null;
  }
  function with_0(receiver, block) {
    {
    }
    return block(receiver);
  }
  function repeat(times, action) {
    {
    }
    var inductionVariable = 0;
    if (inductionVariable < times)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        action(index);
      }
       while (inductionVariable < times);
  }
  function takeUnless(_this__u8e3s4, predicate) {
    {
    }
    return !predicate(_this__u8e3s4) ? _this__u8e3s4 : null;
  }
  function Pair(first, second) {
    this.b3_1 = first;
    this.c3_1 = second;
  }
  Pair.prototype.h6 = function () {
    return this.b3_1;
  };
  Pair.prototype.z6 = function () {
    return this.c3_1;
  };
  Pair.prototype.toString = function () {
    return '(' + this.b3_1 + ', ' + this.c3_1 + ')';
  };
  Pair.prototype.d3 = function () {
    return this.b3_1;
  };
  Pair.prototype.e3 = function () {
    return this.c3_1;
  };
  Pair.prototype.hashCode = function () {
    var result = this.b3_1 == null ? 0 : hashCode_0(this.b3_1);
    result = imul(result, 31) + (this.c3_1 == null ? 0 : hashCode_0(this.c3_1)) | 0;
    return result;
  };
  Pair.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Pair))
      return false;
    var tmp0_other_with_cast = other instanceof Pair ? other : THROW_CCE();
    if (!equals_1(this.b3_1, tmp0_other_with_cast.b3_1))
      return false;
    if (!equals_1(this.c3_1, tmp0_other_with_cast.c3_1))
      return false;
    return true;
  };
  Pair.$metadata$ = classMeta('Pair', [Serializable]);
  function to(_this__u8e3s4, that) {
    return new Pair(_this__u8e3s4, that);
  }
  function Triple(first, second, third) {
    this.a7_1 = first;
    this.b7_1 = second;
    this.c7_1 = third;
  }
  Triple.prototype.toString = function () {
    return '(' + this.a7_1 + ', ' + this.b7_1 + ', ' + this.c7_1 + ')';
  };
  Triple.prototype.hashCode = function () {
    var result = this.a7_1 == null ? 0 : hashCode_0(this.a7_1);
    result = imul(result, 31) + (this.b7_1 == null ? 0 : hashCode_0(this.b7_1)) | 0;
    result = imul(result, 31) + (this.c7_1 == null ? 0 : hashCode_0(this.c7_1)) | 0;
    return result;
  };
  Triple.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Triple))
      return false;
    var tmp0_other_with_cast = other instanceof Triple ? other : THROW_CCE();
    if (!equals_1(this.a7_1, tmp0_other_with_cast.a7_1))
      return false;
    if (!equals_1(this.b7_1, tmp0_other_with_cast.b7_1))
      return false;
    if (!equals_1(this.c7_1, tmp0_other_with_cast.c7_1))
      return false;
    return true;
  };
  Triple.$metadata$ = classMeta('Triple', [Serializable]);
  function _UByte___init__impl__g9hnc4(data) {
    return data;
  }
  function _UByte___get_data__impl__jof9qr($this) {
    return $this;
  }
  function Companion_5() {
    Companion_instance_5 = this;
    this.d7_1 = _UByte___init__impl__g9hnc4(0);
    this.e7_1 = _UByte___init__impl__g9hnc4(-1);
    this.f7_1 = 1;
    this.g7_1 = 8;
  }
  Companion_5.$metadata$ = objectMeta('Companion');
  var Companion_instance_5;
  function Companion_getInstance_5() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function UByte__compareTo_impl_5w5192($this, other) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UByte___get_data__impl__jof9qr($this) & 255;
    }
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _UByte___get_data__impl__jof9qr(other) & 255;
    }
    return compareTo_0(tmp, tmp$ret$1);
  }
  function UByte__compareTo_impl_5w5192_0($this, other) {
    var tmp = $this.h7_1;
    return UByte__compareTo_impl_5w5192(tmp, other instanceof UByte ? other.h7_1 : THROW_CCE());
  }
  function UByte__toByte_impl_h2o6a5($this) {
    return _UByte___get_data__impl__jof9qr($this);
  }
  function UByte__toInt_impl_5nso52($this) {
    return _UByte___get_data__impl__jof9qr($this) & 255;
  }
  function UByte__toUInt_impl_qgytr9($this) {
    return _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr($this) & 255);
  }
  function UByte__toString_impl_v72jg($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UByte___get_data__impl__jof9qr($this) & 255;
    }
    return tmp$ret$0.toString();
  }
  function UByte__hashCode_impl_mmczcb($this) {
    return $this;
  }
  function UByte__equals_impl_nvqtsf($this, other) {
    if (!(other instanceof UByte))
      return false;
    var tmp0_other_with_cast = other instanceof UByte ? other.h7_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UByte(data) {
    Companion_getInstance_5();
    this.h7_1 = data;
  }
  UByte.prototype.i7 = function (other) {
    return UByte__compareTo_impl_5w5192(this.h7_1, other);
  };
  UByte.prototype.f6 = function (other) {
    return UByte__compareTo_impl_5w5192_0(this, other);
  };
  UByte.prototype.toString = function () {
    return UByte__toString_impl_v72jg(this.h7_1);
  };
  UByte.prototype.hashCode = function () {
    return UByte__hashCode_impl_mmczcb(this.h7_1);
  };
  UByte.prototype.equals = function (other) {
    return UByte__equals_impl_nvqtsf(this.h7_1, other);
  };
  UByte.$metadata$ = classMeta('UByte', [Comparable]);
  function toUByte(_this__u8e3s4) {
    return _UByte___init__impl__g9hnc4(toByte(_this__u8e3s4));
  }
  function toUByte_0(_this__u8e3s4) {
    return _UByte___init__impl__g9hnc4(_this__u8e3s4);
  }
  function _UInt___init__impl__l7qpdl(data) {
    return data;
  }
  function _UInt___get_data__impl__f0vqqw($this) {
    return $this;
  }
  function Companion_6() {
    Companion_instance_6 = this;
    this.j7_1 = _UInt___init__impl__l7qpdl(0);
    this.k7_1 = _UInt___init__impl__l7qpdl(-1);
    this.l7_1 = 4;
    this.m7_1 = 32;
  }
  Companion_6.$metadata$ = objectMeta('Companion');
  var Companion_instance_6;
  function Companion_getInstance_6() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function UInt__compareTo_impl_yacclj($this, other) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr(other) & 255);
      }
      var tmp0_compareTo = tmp$ret$0;
      tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(tmp0_compareTo));
    }
    return tmp$ret$1;
  }
  function UInt__compareTo_impl_yacclj_0($this, other) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245(other) & 65535);
      }
      var tmp0_compareTo = tmp$ret$0;
      tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(tmp0_compareTo));
    }
    return tmp$ret$1;
  }
  function UInt__compareTo_impl_yacclj_1($this, other) {
    return uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other));
  }
  function UInt__compareTo_impl_yacclj_2($this, other) {
    var tmp = $this.n7_1;
    return UInt__compareTo_impl_yacclj_1(tmp, other instanceof UInt ? other.n7_1 : THROW_CCE());
  }
  function UInt__plus_impl_gmhu6f($this, other) {
    return _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw($this) + _UInt___get_data__impl__f0vqqw(other) | 0);
  }
  function UInt__times_impl_9tvds1($this, other) {
    return _UInt___init__impl__l7qpdl(imul(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other)));
  }
  function UInt__div_impl_xkbbl6($this, other) {
    return uintDivide($this, other);
  }
  function UInt__toInt_impl_93yt4d($this) {
    return _UInt___get_data__impl__f0vqqw($this);
  }
  function UInt__toLong_impl_le5rq4($this) {
    return toLong_0(_UInt___get_data__impl__f0vqqw($this)).o7(new Long(-1, 0));
  }
  function UInt__toUByte_impl_qgjpt1($this) {
    var tmp$ret$0;
    {
      var tmp0_toUByte = _UInt___get_data__impl__f0vqqw($this);
      tmp$ret$0 = _UByte___init__impl__g9hnc4(toByte(tmp0_toUByte));
    }
    return tmp$ret$0;
  }
  function UInt__toUShort_impl_2yxcfl($this) {
    var tmp$ret$0;
    {
      var tmp0_toUShort = _UInt___get_data__impl__f0vqqw($this);
      tmp$ret$0 = _UShort___init__impl__jigrne(toShort(tmp0_toUShort));
    }
    return tmp$ret$0;
  }
  function UInt__toULong_impl_8j37gv($this) {
    return _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw($this)).o7(new Long(-1, 0)));
  }
  function UInt__toString_impl_dbgl21($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = toLong_0(_UInt___get_data__impl__f0vqqw($this)).o7(new Long(-1, 0));
    }
    return tmp$ret$0.toString();
  }
  function UInt__hashCode_impl_z2mhuw($this) {
    return $this;
  }
  function UInt__equals_impl_ffdoxg($this, other) {
    if (!(other instanceof UInt))
      return false;
    var tmp0_other_with_cast = other instanceof UInt ? other.n7_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UInt(data) {
    Companion_getInstance_6();
    this.n7_1 = data;
  }
  UInt.prototype.p7 = function (other) {
    return UInt__compareTo_impl_yacclj_1(this.n7_1, other);
  };
  UInt.prototype.f6 = function (other) {
    return UInt__compareTo_impl_yacclj_2(this, other);
  };
  UInt.prototype.toString = function () {
    return UInt__toString_impl_dbgl21(this.n7_1);
  };
  UInt.prototype.hashCode = function () {
    return UInt__hashCode_impl_z2mhuw(this.n7_1);
  };
  UInt.prototype.equals = function (other) {
    return UInt__equals_impl_ffdoxg(this.n7_1, other);
  };
  UInt.$metadata$ = classMeta('UInt', [Comparable]);
  function toUInt(_this__u8e3s4) {
    return _UInt___init__impl__l7qpdl(_this__u8e3s4.s5());
  }
  function toUInt_0(_this__u8e3s4) {
    return _UInt___init__impl__l7qpdl(_this__u8e3s4);
  }
  function _ULong___init__impl__c78o9k(data) {
    return data;
  }
  function _ULong___get_data__impl__fggpzb($this) {
    return $this;
  }
  function Companion_7() {
    Companion_instance_7 = this;
    this.q7_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
    this.r7_1 = _ULong___init__impl__c78o9k(new Long(-1, -1));
    this.s7_1 = 8;
    this.t7_1 = 64;
  }
  Companion_7.$metadata$ = objectMeta('Companion');
  var Companion_instance_7;
  function Companion_getInstance_7() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function ULong__compareTo_impl_38i7tu($this, other) {
    return ulongCompare(_ULong___get_data__impl__fggpzb($this), _ULong___get_data__impl__fggpzb(other));
  }
  function ULong__compareTo_impl_38i7tu_0($this, other) {
    var tmp = $this.u7_1;
    return ULong__compareTo_impl_38i7tu(tmp, other instanceof ULong ? other.u7_1 : THROW_CCE());
  }
  function ULong__plus_impl_plxuny($this, other) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(other)).o7(new Long(-1, 0)));
      }
      var tmp0_plus = tmp$ret$0;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).z4(_ULong___get_data__impl__fggpzb(tmp0_plus)));
    }
    return tmp$ret$1;
  }
  function ULong__plus_impl_plxuny_0($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).z4(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__times_impl_ffj6l4($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).y4(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__div_impl_iugpv1($this, other) {
    return ulongDivide($this, other);
  }
  function ULong__toLong_impl_i1ol5n($this) {
    return _ULong___get_data__impl__fggpzb($this);
  }
  function ULong__toString_impl_f9au7k($this) {
    return ulongToString(_ULong___get_data__impl__fggpzb($this));
  }
  function ULong__hashCode_impl_6hv2lb($this) {
    return $this.hashCode();
  }
  function ULong__equals_impl_o0gnyb($this, other) {
    if (!(other instanceof ULong))
      return false;
    var tmp0_other_with_cast = other instanceof ULong ? other.u7_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function ULong(data) {
    Companion_getInstance_7();
    this.u7_1 = data;
  }
  ULong.prototype.v7 = function (other) {
    return ULong__compareTo_impl_38i7tu(this.u7_1, other);
  };
  ULong.prototype.f6 = function (other) {
    return ULong__compareTo_impl_38i7tu_0(this, other);
  };
  ULong.prototype.toString = function () {
    return ULong__toString_impl_f9au7k(this.u7_1);
  };
  ULong.prototype.hashCode = function () {
    return ULong__hashCode_impl_6hv2lb(this.u7_1);
  };
  ULong.prototype.equals = function (other) {
    return ULong__equals_impl_o0gnyb(this.u7_1, other);
  };
  ULong.$metadata$ = classMeta('ULong', [Comparable]);
  function toULong(_this__u8e3s4) {
    return _ULong___init__impl__c78o9k(_this__u8e3s4);
  }
  function toULong_0(_this__u8e3s4) {
    return _ULong___init__impl__c78o9k(toLong_0(_this__u8e3s4));
  }
  function _UShort___init__impl__jigrne(data) {
    return data;
  }
  function _UShort___get_data__impl__g0245($this) {
    return $this;
  }
  function Companion_8() {
    Companion_instance_8 = this;
    this.w7_1 = _UShort___init__impl__jigrne(0);
    this.x7_1 = _UShort___init__impl__jigrne(-1);
    this.y7_1 = 2;
    this.z7_1 = 16;
  }
  Companion_8.$metadata$ = objectMeta('Companion');
  var Companion_instance_8;
  function Companion_getInstance_8() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function UShort__compareTo_impl_1pfgyc($this, other) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UShort___get_data__impl__g0245($this) & 65535;
    }
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _UShort___get_data__impl__g0245(other) & 65535;
    }
    return compareTo_0(tmp, tmp$ret$1);
  }
  function UShort__compareTo_impl_1pfgyc_0($this, other) {
    var tmp = $this.a8_1;
    return UShort__compareTo_impl_1pfgyc(tmp, other instanceof UShort ? other.a8_1 : THROW_CCE());
  }
  function UShort__toShort_impl_fqwi31($this) {
    return _UShort___get_data__impl__g0245($this);
  }
  function UShort__toInt_impl_72bkww($this) {
    return _UShort___get_data__impl__g0245($this) & 65535;
  }
  function UShort__toUInt_impl_581pf5($this) {
    return _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245($this) & 65535);
  }
  function UShort__toString_impl_edaoee($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UShort___get_data__impl__g0245($this) & 65535;
    }
    return tmp$ret$0.toString();
  }
  function UShort__hashCode_impl_ywngrv($this) {
    return $this;
  }
  function UShort__equals_impl_7t9pdz($this, other) {
    if (!(other instanceof UShort))
      return false;
    var tmp0_other_with_cast = other instanceof UShort ? other.a8_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UShort(data) {
    Companion_getInstance_8();
    this.a8_1 = data;
  }
  UShort.prototype.b8 = function (other) {
    return UShort__compareTo_impl_1pfgyc(this.a8_1, other);
  };
  UShort.prototype.f6 = function (other) {
    return UShort__compareTo_impl_1pfgyc_0(this, other);
  };
  UShort.prototype.toString = function () {
    return UShort__toString_impl_edaoee(this.a8_1);
  };
  UShort.prototype.hashCode = function () {
    return UShort__hashCode_impl_ywngrv(this.a8_1);
  };
  UShort.prototype.equals = function (other) {
    return UShort__equals_impl_7t9pdz(this.a8_1, other);
  };
  UShort.$metadata$ = classMeta('UShort', [Comparable]);
  function toUShort(_this__u8e3s4) {
    return _UShort___init__impl__jigrne(toShort(_this__u8e3s4));
  }
  function toUShort_0(_this__u8e3s4) {
    return _UShort___init__impl__jigrne(_this__u8e3s4);
  }
  function toUInt_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUIntOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toULong_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toULongOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new ULong(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toUByte_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUByteOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UByte(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toUShort_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUShortOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UShort(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toULongOrNull(_this__u8e3s4) {
    return toULongOrNull_0(_this__u8e3s4, 10);
  }
  function toUIntOrNull(_this__u8e3s4) {
    return toUIntOrNull_0(_this__u8e3s4, 10);
  }
  function toUByteOrNull(_this__u8e3s4) {
    return toUByteOrNull_0(_this__u8e3s4, 10);
  }
  function toUShortOrNull(_this__u8e3s4) {
    return toUShortOrNull_0(_this__u8e3s4, 10);
  }
  function toULongOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    Companion_getInstance_7();
    var limit = _ULong___init__impl__c78o9k(new Long(-1, -1));
    var start;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1 ? true : !equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43))))
        return null;
      start = 1;
    } else {
      start = 0;
    }
    var limitForMaxRadix = _ULong___init__impl__c78o9k(new Long(477218588, 119304647));
    var limitBeforeMul = limitForMaxRadix;
    var tmp$ret$0;
    {
      tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_0(radix));
    }
    var uradix = tmp$ret$0;
    var result = _ULong___init__impl__c78o9k(new Long(0, 0));
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        var tmp$ret$1;
        {
          var tmp0_compareTo = result;
          var tmp1_compareTo = limitBeforeMul;
          tmp$ret$1 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
        }
        if (tmp$ret$1 > 0) {
          if (equals_1(limitBeforeMul, limitForMaxRadix)) {
            var tmp$ret$2;
            {
              tmp$ret$2 = ulongDivide(limit, uradix);
            }
            limitBeforeMul = tmp$ret$2;
            var tmp$ret$3;
            {
              var tmp2_compareTo = result;
              var tmp3_compareTo = limitBeforeMul;
              tmp$ret$3 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp2_compareTo), _ULong___get_data__impl__fggpzb(tmp3_compareTo));
            }
            if (tmp$ret$3 > 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$4;
        {
          var tmp4_times = result;
          tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_times).y4(_ULong___get_data__impl__fggpzb(uradix)));
        }
        result = tmp$ret$4;
        var beforeAdding = result;
        var tmp$ret$8;
        {
          var tmp5_plus = result;
          var tmp$ret$5;
          {
            tmp$ret$5 = _UInt___init__impl__l7qpdl(digit);
          }
          var tmp6_plus = tmp$ret$5;
          var tmp$ret$7;
          {
            var tmp$ret$6;
            {
              tmp$ret$6 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp6_plus)).o7(new Long(-1, 0)));
            }
            var tmp0_plus = tmp$ret$6;
            tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_plus).z4(_ULong___get_data__impl__fggpzb(tmp0_plus)));
          }
          tmp$ret$8 = tmp$ret$7;
        }
        result = tmp$ret$8;
        var tmp$ret$9;
        {
          var tmp7_compareTo = result;
          tmp$ret$9 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp7_compareTo), _ULong___get_data__impl__fggpzb(beforeAdding));
        }
        if (tmp$ret$9 < 0)
          return null;
      }
       while (inductionVariable < length);
    return result;
  }
  function toUIntOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    Companion_getInstance_6();
    var limit = _UInt___init__impl__l7qpdl(-1);
    var start;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1 ? true : !equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43))))
        return null;
      start = 1;
    } else {
      start = 0;
    }
    var limitForMaxRadix = _UInt___init__impl__l7qpdl(119304647);
    var limitBeforeMul = limitForMaxRadix;
    var tmp$ret$0;
    {
      tmp$ret$0 = _UInt___init__impl__l7qpdl(radix);
    }
    var uradix = tmp$ret$0;
    var result = _UInt___init__impl__l7qpdl(0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        var tmp$ret$1;
        {
          var tmp0_compareTo = result;
          var tmp1_compareTo = limitBeforeMul;
          tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp0_compareTo), _UInt___get_data__impl__f0vqqw(tmp1_compareTo));
        }
        if (tmp$ret$1 > 0) {
          if (limitBeforeMul === limitForMaxRadix) {
            var tmp$ret$2;
            {
              tmp$ret$2 = uintDivide(limit, uradix);
            }
            limitBeforeMul = tmp$ret$2;
            var tmp$ret$3;
            {
              var tmp2_compareTo = result;
              var tmp3_compareTo = limitBeforeMul;
              tmp$ret$3 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp2_compareTo), _UInt___get_data__impl__f0vqqw(tmp3_compareTo));
            }
            if (tmp$ret$3 > 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$4;
        {
          var tmp4_times = result;
          tmp$ret$4 = _UInt___init__impl__l7qpdl(imul(_UInt___get_data__impl__f0vqqw(tmp4_times), _UInt___get_data__impl__f0vqqw(uradix)));
        }
        result = tmp$ret$4;
        var beforeAdding = result;
        var tmp$ret$6;
        {
          var tmp5_plus = result;
          var tmp$ret$5;
          {
            tmp$ret$5 = _UInt___init__impl__l7qpdl(digit);
          }
          var tmp6_plus = tmp$ret$5;
          tmp$ret$6 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp5_plus) + _UInt___get_data__impl__f0vqqw(tmp6_plus) | 0);
        }
        result = tmp$ret$6;
        var tmp$ret$7;
        {
          var tmp7_compareTo = result;
          tmp$ret$7 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp7_compareTo), _UInt___get_data__impl__f0vqqw(beforeAdding));
        }
        if (tmp$ret$7 < 0)
          return null;
      }
       while (inductionVariable < length);
    return result;
  }
  function toUByteOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    var tmp$ret$2;
    {
      Companion_getInstance_5();
      var tmp0_compareTo = _UByte___init__impl__g9hnc4(-1);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr(tmp0_compareTo) & 255);
        }
        var tmp0_compareTo_0 = tmp$ret$0;
        tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(tmp0_compareTo_0));
      }
      tmp$ret$2 = tmp$ret$1;
    }
    if (tmp$ret$2 > 0)
      return null;
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp0_toUByte = _UInt___get_data__impl__f0vqqw(int);
        tmp$ret$3 = _UByte___init__impl__g9hnc4(toByte(tmp0_toUByte));
      }
      tmp$ret$4 = tmp$ret$3;
    }
    return tmp$ret$4;
  }
  function toUShortOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    var tmp$ret$2;
    {
      Companion_getInstance_8();
      var tmp0_compareTo = _UShort___init__impl__jigrne(-1);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245(tmp0_compareTo) & 65535);
        }
        var tmp0_compareTo_0 = tmp$ret$0;
        tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(tmp0_compareTo_0));
      }
      tmp$ret$2 = tmp$ret$1;
    }
    if (tmp$ret$2 > 0)
      return null;
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp0_toUShort = _UInt___get_data__impl__f0vqqw(int);
        tmp$ret$3 = _UShort___init__impl__jigrne(toShort(tmp0_toUShort));
      }
      tmp$ret$4 = tmp$ret$3;
    }
    return tmp$ret$4;
  }
  function uintCompare(v1, v2) {
    return compareTo_0(v1 ^ IntCompanionObject_getInstance().l_1, v2 ^ IntCompanionObject_getInstance().l_1);
  }
  function uintDivide(v1, v2) {
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = toLong_0(_UInt___get_data__impl__f0vqqw(v1)).o7(new Long(-1, 0));
      }
      var tmp = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = toLong_0(_UInt___get_data__impl__f0vqqw(v2)).o7(new Long(-1, 0));
      }
      var tmp0_toUInt = tmp.x4(tmp$ret$1);
      tmp$ret$2 = _UInt___init__impl__l7qpdl(tmp0_toUInt.s5());
    }
    return tmp$ret$2;
  }
  function ulongCompare(v1, v2) {
    Companion_getInstance_15();
    var tmp = v1.x5(new Long(0, -2147483648));
    Companion_getInstance_15();
    return tmp.r(v2.x5(new Long(0, -2147483648)));
  }
  function ulongDivide(v1, v2) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _ULong___get_data__impl__fggpzb(v1);
    }
    var dividend = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _ULong___get_data__impl__fggpzb(v2);
    }
    var divisor = tmp$ret$1;
    if (divisor.r(new Long(0, 0)) < 0) {
      var tmp;
      var tmp$ret$2;
      {
        tmp$ret$2 = ulongCompare(_ULong___get_data__impl__fggpzb(v1), _ULong___get_data__impl__fggpzb(v2));
      }
      if (tmp$ret$2 < 0) {
        tmp = _ULong___init__impl__c78o9k(new Long(0, 0));
      } else {
        tmp = _ULong___init__impl__c78o9k(new Long(1, 0));
      }
      return tmp;
    }
    if (dividend.r(new Long(0, 0)) >= 0) {
      return _ULong___init__impl__c78o9k(dividend.x4(divisor));
    }
    var quotient = dividend.c8(1).x4(divisor).g6(1);
    var rem = dividend.a5(quotient.y4(divisor));
    var tmp$ret$4;
    {
      var tmp_0;
      var tmp$ret$3;
      {
        var tmp0_compareTo = _ULong___init__impl__c78o9k(rem);
        var tmp1_compareTo = _ULong___init__impl__c78o9k(divisor);
        tmp$ret$3 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
      }
      if (tmp$ret$3 >= 0) {
        tmp_0 = 1;
      } else {
        tmp_0 = 0;
      }
      var tmp2_plus = tmp_0;
      tmp$ret$4 = quotient.z4(toLong_0(tmp2_plus));
    }
    return _ULong___init__impl__c78o9k(tmp$ret$4);
  }
  function ulongToString(v) {
    return ulongToString_0(v, 10);
  }
  function ulongToString_0(v, base) {
    if (v.r(new Long(0, 0)) >= 0)
      return toString_3(v, base);
    var tmp$ret$0;
    {
      var tmp0_div = v.c8(1);
      tmp$ret$0 = tmp0_div.x4(toLong_0(base));
    }
    var quotient = tmp$ret$0.g6(1);
    var tmp$ret$1;
    {
      var tmp1_times = quotient;
      tmp$ret$1 = tmp1_times.y4(toLong_0(base));
    }
    var rem = v.a5(tmp$ret$1);
    if (rem.r(toLong_0(base)) >= 0) {
      var tmp$ret$2;
      {
        var tmp2_minus = rem;
        tmp$ret$2 = tmp2_minus.a5(toLong_0(base));
      }
      rem = tmp$ret$2;
      var tmp$ret$3;
      {
        var tmp3_plus = quotient;
        tmp$ret$3 = tmp3_plus.z4(new Long(1, 0));
      }
      quotient = tmp$ret$3;
    }
    return toString_3(quotient, base) + toString_3(rem, base);
  }
  function Annotation() {
  }
  Annotation.$metadata$ = interfaceMeta('Annotation');
  function CharSequence() {
  }
  CharSequence.$metadata$ = interfaceMeta('CharSequence');
  function Comparable() {
  }
  Comparable.$metadata$ = interfaceMeta('Comparable');
  function Iterator() {
  }
  Iterator.$metadata$ = interfaceMeta('Iterator');
  function ListIterator() {
  }
  ListIterator.$metadata$ = interfaceMeta('ListIterator', [Iterator]);
  function MutableIterator() {
  }
  MutableIterator.$metadata$ = interfaceMeta('MutableIterator', [Iterator]);
  function Number_0() {
  }
  Number_0.$metadata$ = classMeta('Number');
  function IntIterator() {
  }
  IntIterator.prototype.f = function () {
    return this.g8();
  };
  IntIterator.$metadata$ = classMeta('IntIterator', [Iterator]);
  function CharIterator() {
  }
  CharIterator.prototype.h8 = function () {
    return this.i8();
  };
  CharIterator.prototype.f = function () {
    return new Char_0(this.h8());
  };
  CharIterator.$metadata$ = classMeta('CharIterator', [Iterator]);
  function IntProgressionIterator(first, last, step) {
    IntIterator.call(this);
    this.j8_1 = step;
    this.k8_1 = last;
    this.l8_1 = this.j8_1 > 0 ? first <= last : first >= last;
    this.m8_1 = this.l8_1 ? first : this.k8_1;
  }
  IntProgressionIterator.prototype.e = function () {
    return this.l8_1;
  };
  IntProgressionIterator.prototype.g8 = function () {
    var value = this.m8_1;
    if (value === this.k8_1) {
      if (!this.l8_1)
        throw NoSuchElementException_init_$Create$();
      this.l8_1 = false;
    } else {
      var tmp0_this = this;
      tmp0_this.m8_1 = tmp0_this.m8_1 + this.j8_1 | 0;
    }
    return value;
  };
  IntProgressionIterator.$metadata$ = classMeta('IntProgressionIterator', undefined, undefined, undefined, undefined, IntIterator.prototype);
  function CharProgressionIterator(first, last, step) {
    CharIterator.call(this);
    this.n8_1 = step;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(last);
    }
    tmp.o8_1 = tmp$ret$0;
    this.p8_1 = this.n8_1 > 0 ? Char__compareTo_impl_ypi4mb(first, last) <= 0 : Char__compareTo_impl_ypi4mb(first, last) >= 0;
    var tmp_0 = this;
    var tmp_1;
    if (this.p8_1) {
      var tmp$ret$1;
      {
        tmp$ret$1 = Char__toInt_impl_vasixd(first);
      }
      tmp_1 = tmp$ret$1;
    } else {
      tmp_1 = this.o8_1;
    }
    tmp_0.q8_1 = tmp_1;
  }
  CharProgressionIterator.prototype.e = function () {
    return this.p8_1;
  };
  CharProgressionIterator.prototype.i8 = function () {
    var value = this.q8_1;
    if (value === this.o8_1) {
      if (!this.p8_1)
        throw NoSuchElementException_init_$Create$();
      this.p8_1 = false;
    } else {
      var tmp0_this = this;
      tmp0_this.q8_1 = tmp0_this.q8_1 + this.n8_1 | 0;
    }
    return numberToChar(value);
  };
  CharProgressionIterator.$metadata$ = classMeta('CharProgressionIterator', undefined, undefined, undefined, undefined, CharIterator.prototype);
  function Companion_9() {
    Companion_instance_9 = this;
  }
  Companion_9.prototype.v = function (rangeStart, rangeEnd, step) {
    return new IntProgression(rangeStart, rangeEnd, step);
  };
  Companion_9.$metadata$ = objectMeta('Companion');
  var Companion_instance_9;
  function Companion_getInstance_9() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function IntProgression(start, endInclusive, step) {
    Companion_getInstance_9();
    if (step === 0)
      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
    if (step === IntCompanionObject_getInstance().l_1)
      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.s_1 = start;
    this.t_1 = getProgressionLastElement(start, endInclusive, step);
    this.u_1 = step;
  }
  IntProgression.prototype.h6 = function () {
    return this.s_1;
  };
  IntProgression.prototype.i6 = function () {
    return this.t_1;
  };
  IntProgression.prototype.d = function () {
    return new IntProgressionIterator(this.s_1, this.t_1, this.u_1);
  };
  IntProgression.prototype.i = function () {
    return this.u_1 > 0 ? this.s_1 > this.t_1 : this.s_1 < this.t_1;
  };
  IntProgression.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntProgression) {
      tmp = (this.i() ? other.i() : false) ? true : (this.s_1 === other.s_1 ? this.t_1 === other.t_1 : false) ? this.u_1 === other.u_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  IntProgression.prototype.hashCode = function () {
    return this.i() ? -1 : imul(31, imul(31, this.s_1) + this.t_1 | 0) + this.u_1 | 0;
  };
  IntProgression.prototype.toString = function () {
    return this.u_1 > 0 ? '' + this.s_1 + '..' + this.t_1 + ' step ' + this.u_1 : '' + this.s_1 + ' downTo ' + this.t_1 + ' step ' + (-this.u_1 | 0);
  };
  IntProgression.$metadata$ = classMeta('IntProgression', [Iterable_0]);
  function Companion_10() {
    Companion_instance_10 = this;
  }
  Companion_10.$metadata$ = objectMeta('Companion');
  var Companion_instance_10;
  function Companion_getInstance_10() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function CharProgression(start, endInclusive, step) {
    Companion_getInstance_10();
    if (step === 0)
      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
    if (step === IntCompanionObject_getInstance().l_1)
      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.r8_1 = start;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(start);
    }
    var tmp_0 = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = Char__toInt_impl_vasixd(endInclusive);
    }
    tmp.s8_1 = numberToChar(getProgressionLastElement(tmp_0, tmp$ret$1, step));
    this.t8_1 = step;
  }
  CharProgression.prototype.u8 = function () {
    return this.r8_1;
  };
  CharProgression.prototype.v8 = function () {
    return this.s8_1;
  };
  CharProgression.prototype.d = function () {
    return new CharProgressionIterator(this.r8_1, this.s8_1, this.t8_1);
  };
  CharProgression.prototype.i = function () {
    return this.t8_1 > 0 ? Char__compareTo_impl_ypi4mb(this.r8_1, this.s8_1) > 0 : Char__compareTo_impl_ypi4mb(this.r8_1, this.s8_1) < 0;
  };
  CharProgression.prototype.equals = function (other) {
    var tmp;
    if (other instanceof CharProgression) {
      tmp = (this.i() ? other.i() : false) ? true : (equals_1(new Char_0(this.r8_1), new Char_0(other.r8_1)) ? equals_1(new Char_0(this.s8_1), new Char_0(other.s8_1)) : false) ? this.t8_1 === other.t8_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  CharProgression.prototype.hashCode = function () {
    var tmp;
    if (this.i()) {
      tmp = -1;
    } else {
      var tmp$ret$0;
      {
        var tmp0__get_code__88qj9g = this.r8_1;
        tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
      }
      var tmp_0 = imul(31, tmp$ret$0);
      var tmp$ret$1;
      {
        var tmp1__get_code__adl84j = this.s8_1;
        tmp$ret$1 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
      }
      tmp = imul(31, tmp_0 + tmp$ret$1 | 0) + this.t8_1 | 0;
    }
    return tmp;
  };
  CharProgression.prototype.toString = function () {
    return this.t8_1 > 0 ? '' + new Char_0(this.r8_1) + '..' + new Char_0(this.s8_1) + ' step ' + this.t8_1 : '' + new Char_0(this.r8_1) + ' downTo ' + new Char_0(this.s8_1) + ' step ' + (-this.t8_1 | 0);
  };
  CharProgression.$metadata$ = classMeta('CharProgression', [Iterable_0]);
  function ClosedRange() {
  }
  ClosedRange.$metadata$ = interfaceMeta('ClosedRange');
  function Companion_11() {
    Companion_instance_11 = this;
    this.k_1 = new IntRange(1, 0);
  }
  Companion_11.$metadata$ = objectMeta('Companion');
  var Companion_instance_11;
  function Companion_getInstance_11() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function IntRange(start, endInclusive) {
    Companion_getInstance_11();
    IntProgression.call(this, start, endInclusive, 1);
  }
  IntRange.prototype.f5 = function () {
    return this.h6();
  };
  IntRange.prototype.g5 = function () {
    return this.i6();
  };
  IntRange.prototype.w8 = function (value) {
    return this.h6() <= value ? value <= this.i6() : false;
  };
  IntRange.prototype.i = function () {
    return this.h6() > this.i6();
  };
  IntRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntRange) {
      tmp = (this.i() ? other.i() : false) ? true : this.h6() === other.h6() ? this.i6() === other.i6() : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  IntRange.prototype.hashCode = function () {
    return this.i() ? -1 : imul(31, this.h6()) + this.i6() | 0;
  };
  IntRange.prototype.toString = function () {
    return '' + this.h6() + '..' + this.i6();
  };
  IntRange.$metadata$ = classMeta('IntRange', [ClosedRange], undefined, undefined, undefined, IntProgression.prototype);
  function Companion_12() {
    Companion_instance_12 = this;
    this.x8_1 = new CharRange(_Char___init__impl__6a9atx(1), _Char___init__impl__6a9atx(0));
  }
  Companion_12.$metadata$ = objectMeta('Companion');
  var Companion_instance_12;
  function Companion_getInstance_12() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function CharRange(start, endInclusive) {
    Companion_getInstance_12();
    CharProgression.call(this, start, endInclusive, 1);
  }
  CharRange.prototype.b9 = function (value) {
    return Char__compareTo_impl_ypi4mb(this.u8(), value) <= 0 ? Char__compareTo_impl_ypi4mb(value, this.v8()) <= 0 : false;
  };
  CharRange.prototype.i = function () {
    return Char__compareTo_impl_ypi4mb(this.u8(), this.v8()) > 0;
  };
  CharRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof CharRange) {
      tmp = (this.i() ? other.i() : false) ? true : equals_1(new Char_0(this.u8()), new Char_0(other.u8())) ? equals_1(new Char_0(this.v8()), new Char_0(other.v8())) : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  CharRange.prototype.hashCode = function () {
    var tmp;
    if (this.i()) {
      tmp = -1;
    } else {
      var tmp$ret$0;
      {
        var tmp0__get_code__88qj9g = this.u8();
        tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
      }
      var tmp_0 = imul(31, tmp$ret$0);
      var tmp$ret$1;
      {
        var tmp1__get_code__adl84j = this.v8();
        tmp$ret$1 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
      }
      tmp = tmp_0 + tmp$ret$1 | 0;
    }
    return tmp;
  };
  CharRange.prototype.toString = function () {
    return '' + new Char_0(this.u8()) + '..' + new Char_0(this.v8());
  };
  CharRange.$metadata$ = classMeta('CharRange', [ClosedRange], undefined, undefined, undefined, CharProgression.prototype);
  function Unit() {
    Unit_instance = this;
  }
  Unit.prototype.toString = function () {
    return 'kotlin.Unit';
  };
  Unit.$metadata$ = objectMeta('Unit');
  var Unit_instance;
  function Unit_getInstance() {
    if (Unit_instance == null)
      new Unit();
    return Unit_instance;
  }
  function getProgressionLastElement(start, end, step) {
    var tmp;
    if (step > 0) {
      tmp = start >= end ? end : end - differenceModulo(end, start, step) | 0;
    } else if (step < 0) {
      tmp = start <= end ? end : end + differenceModulo(start, end, -step | 0) | 0;
    } else {
      throw IllegalArgumentException_init_$Create$_0('Step is zero.');
    }
    return tmp;
  }
  function differenceModulo(a, b, c) {
    return mod(mod(a, c) - mod(b, c) | 0, c);
  }
  function mod(a, b) {
    var mod = a % b | 0;
    return mod >= 0 ? mod : mod + b | 0;
  }
  function ByteCompanionObject() {
    ByteCompanionObject_instance = this;
    this.c9_1 = -128;
    this.d9_1 = 127;
    this.e9_1 = 1;
    this.f9_1 = 8;
  }
  ByteCompanionObject.prototype.g9 = function () {
    return this.c9_1;
  };
  ByteCompanionObject.prototype.h9 = function () {
    return this.d9_1;
  };
  ByteCompanionObject.prototype.i9 = function () {
    return this.e9_1;
  };
  ByteCompanionObject.prototype.j9 = function () {
    return this.f9_1;
  };
  ByteCompanionObject.$metadata$ = objectMeta('ByteCompanionObject');
  Object.defineProperty(ByteCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: ByteCompanionObject.prototype.g9
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: ByteCompanionObject.prototype.h9
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: ByteCompanionObject.prototype.i9
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: ByteCompanionObject.prototype.j9
  });
  var ByteCompanionObject_instance;
  function ByteCompanionObject_getInstance() {
    if (ByteCompanionObject_instance == null)
      new ByteCompanionObject();
    return ByteCompanionObject_instance;
  }
  function ShortCompanionObject() {
    ShortCompanionObject_instance = this;
    this.k9_1 = -32768;
    this.l9_1 = 32767;
    this.m9_1 = 2;
    this.n9_1 = 16;
  }
  ShortCompanionObject.prototype.g9 = function () {
    return this.k9_1;
  };
  ShortCompanionObject.prototype.h9 = function () {
    return this.l9_1;
  };
  ShortCompanionObject.prototype.i9 = function () {
    return this.m9_1;
  };
  ShortCompanionObject.prototype.j9 = function () {
    return this.n9_1;
  };
  ShortCompanionObject.$metadata$ = objectMeta('ShortCompanionObject');
  Object.defineProperty(ShortCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: ShortCompanionObject.prototype.g9
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: ShortCompanionObject.prototype.h9
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: ShortCompanionObject.prototype.i9
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: ShortCompanionObject.prototype.j9
  });
  var ShortCompanionObject_instance;
  function ShortCompanionObject_getInstance() {
    if (ShortCompanionObject_instance == null)
      new ShortCompanionObject();
    return ShortCompanionObject_instance;
  }
  function IntCompanionObject() {
    IntCompanionObject_instance = this;
    this.l_1 = -2147483648;
    this.m_1 = 2147483647;
    this.n_1 = 4;
    this.o_1 = 32;
  }
  IntCompanionObject.prototype.g9 = function () {
    return this.l_1;
  };
  IntCompanionObject.prototype.h9 = function () {
    return this.m_1;
  };
  IntCompanionObject.prototype.i9 = function () {
    return this.n_1;
  };
  IntCompanionObject.prototype.j9 = function () {
    return this.o_1;
  };
  IntCompanionObject.$metadata$ = objectMeta('IntCompanionObject');
  Object.defineProperty(IntCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: IntCompanionObject.prototype.g9
  });
  Object.defineProperty(IntCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: IntCompanionObject.prototype.h9
  });
  Object.defineProperty(IntCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: IntCompanionObject.prototype.i9
  });
  Object.defineProperty(IntCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: IntCompanionObject.prototype.j9
  });
  var IntCompanionObject_instance;
  function IntCompanionObject_getInstance() {
    if (IntCompanionObject_instance == null)
      new IntCompanionObject();
    return IntCompanionObject_instance;
  }
  function FloatCompanionObject() {
    FloatCompanionObject_instance = this;
    this.o9_1 = 1.4E-45;
    this.p9_1 = 3.4028235E38;
    this.q9_1 = Infinity;
    this.r9_1 = -Infinity;
    this.s9_1 = NaN;
    this.t9_1 = 4;
    this.u9_1 = 32;
  }
  FloatCompanionObject.prototype.g9 = function () {
    return this.o9_1;
  };
  FloatCompanionObject.prototype.h9 = function () {
    return this.p9_1;
  };
  FloatCompanionObject.prototype.v9 = function () {
    return this.q9_1;
  };
  FloatCompanionObject.prototype.w9 = function () {
    return this.r9_1;
  };
  FloatCompanionObject.prototype.x9 = function () {
    return this.s9_1;
  };
  FloatCompanionObject.prototype.i9 = function () {
    return this.t9_1;
  };
  FloatCompanionObject.prototype.j9 = function () {
    return this.u9_1;
  };
  FloatCompanionObject.$metadata$ = objectMeta('FloatCompanionObject');
  Object.defineProperty(FloatCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: FloatCompanionObject.prototype.g9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: FloatCompanionObject.prototype.h9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'POSITIVE_INFINITY', {
    configurable: true,
    get: FloatCompanionObject.prototype.v9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'NEGATIVE_INFINITY', {
    configurable: true,
    get: FloatCompanionObject.prototype.w9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'NaN', {
    configurable: true,
    get: FloatCompanionObject.prototype.x9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: FloatCompanionObject.prototype.i9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: FloatCompanionObject.prototype.j9
  });
  var FloatCompanionObject_instance;
  function FloatCompanionObject_getInstance() {
    if (FloatCompanionObject_instance == null)
      new FloatCompanionObject();
    return FloatCompanionObject_instance;
  }
  function DoubleCompanionObject() {
    DoubleCompanionObject_instance = this;
    this.y9_1 = 4.9E-324;
    this.z9_1 = 1.7976931348623157E308;
    this.aa_1 = Infinity;
    this.ba_1 = -Infinity;
    this.ca_1 = NaN;
    this.da_1 = 8;
    this.ea_1 = 64;
  }
  DoubleCompanionObject.prototype.g9 = function () {
    return this.y9_1;
  };
  DoubleCompanionObject.prototype.h9 = function () {
    return this.z9_1;
  };
  DoubleCompanionObject.prototype.v9 = function () {
    return this.aa_1;
  };
  DoubleCompanionObject.prototype.w9 = function () {
    return this.ba_1;
  };
  DoubleCompanionObject.prototype.x9 = function () {
    return this.ca_1;
  };
  DoubleCompanionObject.prototype.i9 = function () {
    return this.da_1;
  };
  DoubleCompanionObject.prototype.j9 = function () {
    return this.ea_1;
  };
  DoubleCompanionObject.$metadata$ = objectMeta('DoubleCompanionObject');
  Object.defineProperty(DoubleCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: DoubleCompanionObject.prototype.g9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: DoubleCompanionObject.prototype.h9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'POSITIVE_INFINITY', {
    configurable: true,
    get: DoubleCompanionObject.prototype.v9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'NEGATIVE_INFINITY', {
    configurable: true,
    get: DoubleCompanionObject.prototype.w9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'NaN', {
    configurable: true,
    get: DoubleCompanionObject.prototype.x9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: DoubleCompanionObject.prototype.i9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: DoubleCompanionObject.prototype.j9
  });
  var DoubleCompanionObject_instance;
  function DoubleCompanionObject_getInstance() {
    if (DoubleCompanionObject_instance == null)
      new DoubleCompanionObject();
    return DoubleCompanionObject_instance;
  }
  function StringCompanionObject() {
    StringCompanionObject_instance = this;
  }
  StringCompanionObject.$metadata$ = objectMeta('StringCompanionObject');
  var StringCompanionObject_instance;
  function StringCompanionObject_getInstance() {
    if (StringCompanionObject_instance == null)
      new StringCompanionObject();
    return StringCompanionObject_instance;
  }
  function BooleanCompanionObject() {
    BooleanCompanionObject_instance = this;
  }
  BooleanCompanionObject.$metadata$ = objectMeta('BooleanCompanionObject');
  var BooleanCompanionObject_instance;
  function BooleanCompanionObject_getInstance() {
    if (BooleanCompanionObject_instance == null)
      new BooleanCompanionObject();
    return BooleanCompanionObject_instance;
  }
  function Comparator() {
  }
  Comparator.$metadata$ = interfaceMeta('Comparator');
  function toTypedArray(_this__u8e3s4) {
    return copyToArray(_this__u8e3s4);
  }
  function mapCapacity(expectedSize) {
    return expectedSize;
  }
  function sortWith(_this__u8e3s4, comparator) {
    collectionsSort(_this__u8e3s4, comparator);
  }
  function listOf_0(element) {
    return arrayListOf_0([element]);
  }
  function arrayCopy(source, destination, destinationOffset, startIndex, endIndex) {
    Companion_getInstance().e1(startIndex, endIndex, source.length);
    var rangeSize = endIndex - startIndex | 0;
    Companion_getInstance().e1(destinationOffset, destinationOffset + rangeSize | 0, destination.length);
    if (isView(destination) ? isView(source) : false) {
      var tmp$ret$0;
      {
        tmp$ret$0 = source;
      }
      var subrange = tmp$ret$0.subarray(startIndex, endIndex);
      var tmp$ret$1;
      {
        tmp$ret$1 = destination;
      }
      tmp$ret$1.set(subrange, destinationOffset);
    } else {
      if (!(source === destination) ? true : destinationOffset <= startIndex) {
        var inductionVariable = 0;
        if (inductionVariable < rangeSize)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            destination[destinationOffset + index | 0] = source[startIndex + index | 0];
          }
           while (inductionVariable < rangeSize);
      } else {
        var inductionVariable_0 = rangeSize - 1 | 0;
        if (0 <= inductionVariable_0)
          do {
            var index_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + -1 | 0;
            destination[destinationOffset + index_0 | 0] = source[startIndex + index_0 | 0];
          }
           while (0 <= inductionVariable_0);
      }
    }
  }
  function mapOf_0(pair) {
    return hashMapOf([pair]);
  }
  function buildMapInternal(builderAction) {
    var tmp$ret$0;
    {
      var tmp0_apply = LinkedHashMap_init_$Create$();
      {
      }
      builderAction(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0.x2();
  }
  function toSingletonMapOrSelf(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function copyToArray(collection) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = collection;
    }
    if (tmp$ret$0.toArray !== undefined) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = collection;
        }
        var tmp0_unsafeCast = tmp$ret$1.toArray();
        tmp$ret$2 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$2;
    } else {
      var tmp$ret$4;
      {
        var tmp1_unsafeCast = copyToArrayImpl(collection);
        var tmp$ret$3;
        {
          tmp$ret$3 = tmp1_unsafeCast;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp = tmp$ret$4;
    }
    return tmp;
  }
  function collectionsSort(list, comparator) {
    if (list.g() <= 1)
      return Unit_getInstance();
    var array = copyToArray(list);
    sortArrayWith(array, comparator);
    var inductionVariable = 0;
    var last = array.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        list.fa(i, array[i]);
      }
       while (inductionVariable < last);
  }
  function copyToArrayImpl(collection) {
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    var array = tmp$ret$0;
    var iterator = collection.d();
    while (iterator.e()) {
      var tmp$ret$1;
      {
        tmp$ret$1 = array;
      }
      tmp$ret$1.push(iterator.f());
    }
    return array;
  }
  function checkIndexOverflow(index) {
    if (index < 0) {
      throwIndexOverflow();
    }
    return index;
  }
  function setOf_0(element) {
    return hashSetOf([element]);
  }
  function AbstractMutableCollection() {
    AbstractCollection.call(this);
  }
  AbstractMutableCollection.prototype.w = function (elements) {
    this.ga();
    var modified = false;
    var tmp0_iterator = elements.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (this.c(element))
        modified = true;
    }
    return modified;
  };
  AbstractMutableCollection.prototype.toJSON = function () {
    return this.toArray();
  };
  AbstractMutableCollection.prototype.ga = function () {
  };
  AbstractMutableCollection.$metadata$ = classMeta('AbstractMutableCollection', [MutableCollection], undefined, undefined, undefined, AbstractCollection.prototype);
  function IteratorImpl($outer) {
    this.ja_1 = $outer;
    this.ha_1 = 0;
    this.ia_1 = -1;
  }
  IteratorImpl.prototype.e = function () {
    return this.ha_1 < this.ja_1.g();
  };
  IteratorImpl.prototype.f = function () {
    if (!this.e())
      throw NoSuchElementException_init_$Create$();
    var tmp = this;
    var tmp0_this = this;
    var tmp1 = tmp0_this.ha_1;
    tmp0_this.ha_1 = tmp1 + 1 | 0;
    tmp.ia_1 = tmp1;
    return this.ja_1.h(this.ia_1);
  };
  IteratorImpl.$metadata$ = classMeta('IteratorImpl', [MutableIterator]);
  function AbstractMutableList() {
    AbstractMutableCollection.call(this);
    this.ka_1 = 0;
  }
  AbstractMutableList.prototype.la = function (_set____db54di) {
    this.ka_1 = _set____db54di;
  };
  AbstractMutableList.prototype.ma = function () {
    return this.ka_1;
  };
  AbstractMutableList.prototype.c = function (element) {
    this.ga();
    this.na(this.g(), element);
    return true;
  };
  AbstractMutableList.prototype.d = function () {
    return new IteratorImpl(this);
  };
  AbstractMutableList.prototype.a1 = function (element) {
    return this.oa(element) >= 0;
  };
  AbstractMutableList.prototype.oa = function (element) {
    var inductionVariable = 0;
    var last = get_lastIndex_2(this);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals_1(this.h(index), element)) {
          return index;
        }
      }
       while (!(index === last));
    return -1;
  };
  AbstractMutableList.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List) : false))
      return false;
    return Companion_getInstance().h1(this, other);
  };
  AbstractMutableList.prototype.hashCode = function () {
    return Companion_getInstance().g1(this);
  };
  AbstractMutableList.$metadata$ = classMeta('AbstractMutableList', [MutableList], undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function AbstractMutableMap$keys$1$iterator$1($entryIterator) {
    this.pa_1 = $entryIterator;
  }
  AbstractMutableMap$keys$1$iterator$1.prototype.e = function () {
    return this.pa_1.e();
  };
  AbstractMutableMap$keys$1$iterator$1.prototype.f = function () {
    return this.pa_1.f().j1();
  };
  AbstractMutableMap$keys$1$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function SimpleEntry(key, value) {
    this.qa_1 = key;
    this.ra_1 = value;
  }
  SimpleEntry.prototype.j1 = function () {
    return this.qa_1;
  };
  SimpleEntry.prototype.l1 = function () {
    return this.ra_1;
  };
  SimpleEntry.prototype.sa = function (newValue) {
    var oldValue = this.ra_1;
    this.ra_1 = newValue;
    return oldValue;
  };
  SimpleEntry.prototype.hashCode = function () {
    return Companion_getInstance_0().k1(this);
  };
  SimpleEntry.prototype.toString = function () {
    return Companion_getInstance_0().m1(this);
  };
  SimpleEntry.prototype.equals = function (other) {
    return Companion_getInstance_0().n1(this, other);
  };
  SimpleEntry.$metadata$ = classMeta('SimpleEntry', [MutableEntry]);
  function AbstractEntrySet() {
    AbstractMutableSet.call(this);
  }
  AbstractEntrySet.prototype.a1 = function (element) {
    return this.ta(element);
  };
  AbstractEntrySet.$metadata$ = classMeta('AbstractEntrySet', undefined, undefined, undefined, undefined, AbstractMutableSet.prototype);
  function AbstractMutableMap$keys$1(this$0) {
    this.ua_1 = this$0;
    AbstractMutableSet.call(this);
  }
  AbstractMutableMap$keys$1.prototype.va = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on keys');
  };
  AbstractMutableMap$keys$1.prototype.c = function (element) {
    return this.va((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.p1 = function (element) {
    return this.ua_1.s1(element);
  };
  AbstractMutableMap$keys$1.prototype.a1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.p1((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.d = function () {
    var entryIterator = this.ua_1.j().d();
    return new AbstractMutableMap$keys$1$iterator$1(entryIterator);
  };
  AbstractMutableMap$keys$1.prototype.g = function () {
    return this.ua_1.g();
  };
  AbstractMutableMap$keys$1.prototype.ga = function () {
    return this.ua_1.ga();
  };
  AbstractMutableMap$keys$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractMutableSet.prototype);
  function AbstractMutableMap() {
    AbstractMap.call(this);
    this.ya_1 = null;
    this.za_1 = null;
  }
  AbstractMutableMap.prototype.w1 = function () {
    if (this.ya_1 == null) {
      var tmp = this;
      tmp.ya_1 = new AbstractMutableMap$keys$1(this);
    }
    return ensureNotNull(this.ya_1);
  };
  AbstractMutableMap.prototype.ab = function (from) {
    this.ga();
    var tmp$ret$0;
    {
      tmp$ret$0 = from.j().d();
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.e()) {
      var tmp1_loop_parameter = tmp0_iterator.f();
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp1_loop_parameter.j1();
      }
      var key = tmp$ret$1;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_loop_parameter.l1();
      }
      var value = tmp$ret$2;
      this.a(key, value);
    }
  };
  AbstractMutableMap.prototype.ga = function () {
  };
  AbstractMutableMap.$metadata$ = classMeta('AbstractMutableMap', [MutableMap], undefined, undefined, undefined, AbstractMap.prototype);
  function AbstractMutableSet() {
    AbstractMutableCollection.call(this);
  }
  AbstractMutableSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().y1(this, other);
  };
  AbstractMutableSet.prototype.hashCode = function () {
    return Companion_getInstance_1().x1(this);
  };
  AbstractMutableSet.$metadata$ = classMeta('AbstractMutableSet', [MutableSet], undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function ArrayList_init_$Init$($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$() {
    return ArrayList_init_$Init$(Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_0(initialCapacity, $this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_0(initialCapacity) {
    return ArrayList_init_$Init$_0(initialCapacity, Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_1(elements, $this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = copyToArray(elements);
    }
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_1(elements) {
    return ArrayList_init_$Init$_1(elements, Object.create(ArrayList.prototype));
  }
  function rangeCheck($this, index) {
    var tmp$ret$0;
    {
      {
      }
      {
        Companion_getInstance().c1(index, $this.g());
      }
      tmp$ret$0 = index;
    }
    return tmp$ret$0;
  }
  function insertionRangeCheck($this, index) {
    var tmp$ret$0;
    {
      {
      }
      {
        Companion_getInstance().d1(index, $this.g());
      }
      tmp$ret$0 = index;
    }
    return tmp$ret$0;
  }
  function ArrayList(array) {
    AbstractMutableList.call(this);
    this.cb_1 = array;
    this.db_1 = false;
  }
  ArrayList.prototype.eb = function (minCapacity) {
  };
  ArrayList.prototype.g = function () {
    return this.cb_1.length;
  };
  ArrayList.prototype.h = function (index) {
    var tmp = this.cb_1[rangeCheck(this, index)];
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.fa = function (index, element) {
    this.ga();
    rangeCheck(this, index);
    var tmp$ret$0;
    {
      var tmp0_apply = this.cb_1[index];
      {
      }
      {
        this.cb_1[index] = element;
      }
      tmp$ret$0 = tmp0_apply;
    }
    var tmp = tmp$ret$0;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.c = function (element) {
    this.ga();
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.cb_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    tmp$ret$0.push(element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.ma();
    tmp0_this.la(tmp1 + 1 | 0);
    return true;
  };
  ArrayList.prototype.na = function (index, element) {
    this.ga();
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.cb_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    tmp$ret$0.splice(insertionRangeCheck(this, index), 0, element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.ma();
    tmp0_this.la(tmp1 + 1 | 0);
  };
  ArrayList.prototype.w = function (elements) {
    this.ga();
    if (elements.i())
      return false;
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp$ret$2;
    {
      var tmp0_plus = tmp0_this.cb_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = copyToArray(elements);
      }
      var tmp1_plus = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp0_plus;
      }
      tmp$ret$2 = tmp$ret$1.concat(tmp1_plus);
    }
    tmp.cb_1 = tmp$ret$2;
    var tmp1_this = this;
    var tmp2 = tmp1_this.ma();
    tmp1_this.la(tmp2 + 1 | 0);
    return true;
  };
  ArrayList.prototype.f3 = function (index) {
    this.ga();
    rangeCheck(this, index);
    var tmp0_this = this;
    var tmp1 = tmp0_this.ma();
    tmp0_this.la(tmp1 + 1 | 0);
    var tmp;
    if (index === get_lastIndex_2(this)) {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = this.cb_1;
        tmp$ret$0 = tmp0_asDynamic;
      }
      tmp = tmp$ret$0.pop();
    } else {
      var tmp$ret$1;
      {
        var tmp1_asDynamic = this.cb_1;
        tmp$ret$1 = tmp1_asDynamic;
      }
      tmp = tmp$ret$1.splice(index, 1)[0];
    }
    return tmp;
  };
  ArrayList.prototype.oa = function (element) {
    return indexOf(this.cb_1, element);
  };
  ArrayList.prototype.toString = function () {
    return arrayToString(this.cb_1);
  };
  ArrayList.prototype.fb = function () {
    return [].slice.call(this.cb_1);
  };
  ArrayList.prototype.toArray = function () {
    return this.fb();
  };
  ArrayList.prototype.ga = function () {
    if (this.db_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  ArrayList.$metadata$ = classMeta('ArrayList', [MutableList, RandomAccess], undefined, undefined, undefined, AbstractMutableList.prototype);
  var _stableSortingIsSupported;
  function sortArrayWith(array, comparator) {
    if (getStableSortingIsSupported()) {
      var comparison = sortArrayWith$lambda(comparator);
      var tmp$ret$0;
      {
        tmp$ret$0 = array;
      }
      tmp$ret$0.sort(comparison);
    } else {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = array;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      mergeSort(tmp$ret$2, 0, get_lastIndex(array), comparator);
    }
  }
  function getStableSortingIsSupported() {
    var tmp0_safe_receiver = _stableSortingIsSupported;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return tmp0_safe_receiver;
      }
    }
    _stableSortingIsSupported = false;
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = [];
      tmp$ret$1 = tmp0_unsafeCast;
    }
    var array = tmp$ret$1;
    var inductionVariable = 0;
    if (inductionVariable < 600)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$2;
        {
          tmp$ret$2 = array;
        }
        tmp$ret$2.push(index);
      }
       while (inductionVariable < 600);
    var comparison = getStableSortingIsSupported$lambda();
    var tmp$ret$3;
    {
      tmp$ret$3 = array;
    }
    tmp$ret$3.sort(comparison);
    var inductionVariable_0 = 1;
    var last = array.length;
    if (inductionVariable_0 < last)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var a = array[index_0 - 1 | 0];
        var b = array[index_0];
        if ((a & 3) === (b & 3) ? a >= b : false)
          return false;
      }
       while (inductionVariable_0 < last);
    _stableSortingIsSupported = true;
    return true;
  }
  function mergeSort(array, start, endInclusive, comparator) {
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        var tmp0_arrayOfNulls = array.length;
        tmp$ret$0 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
      }
      var tmp1_unsafeCast = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var buffer = tmp$ret$2;
    var result = mergeSort_0(array, buffer, start, endInclusive, comparator);
    if (!(result === array)) {
      var inductionVariable = start;
      if (inductionVariable <= endInclusive)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          array[i] = result[i];
        }
         while (!(i === endInclusive));
    }
  }
  function mergeSort_0(array, buffer, start, end, comparator) {
    if (start === end) {
      return array;
    }
    var median = (start + end | 0) / 2 | 0;
    var left = mergeSort_0(array, buffer, start, median, comparator);
    var right = mergeSort_0(array, buffer, median + 1 | 0, end, comparator);
    var target = left === buffer ? array : buffer;
    var leftIndex = start;
    var rightIndex = median + 1 | 0;
    var inductionVariable = start;
    if (inductionVariable <= end)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (leftIndex <= median ? rightIndex <= end : false) {
          var leftValue = left[leftIndex];
          var rightValue = right[rightIndex];
          if (comparator.compare(leftValue, rightValue) <= 0) {
            target[i] = leftValue;
            var tmp1 = leftIndex;
            leftIndex = tmp1 + 1 | 0;
          } else {
            target[i] = rightValue;
            var tmp2 = rightIndex;
            rightIndex = tmp2 + 1 | 0;
          }
        } else if (leftIndex <= median) {
          target[i] = left[leftIndex];
          var tmp3 = leftIndex;
          leftIndex = tmp3 + 1 | 0;
        } else {
          target[i] = right[rightIndex];
          var tmp4 = rightIndex;
          rightIndex = tmp4 + 1 | 0;
        }
      }
       while (!(i === end));
    return target;
  }
  function sortArrayWith$lambda($comparator) {
    return function (a, b) {
      return $comparator.compare(a, b);
    };
  }
  function getStableSortingIsSupported$lambda() {
    return function (a, b) {
      return (a & 3) - (b & 3) | 0;
    };
  }
  function HashCode() {
    HashCode_instance = this;
  }
  HashCode.prototype.gb = function (value1, value2) {
    return equals_1(value1, value2);
  };
  HashCode.prototype.hb = function (value) {
    var tmp0_safe_receiver = value;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  HashCode.$metadata$ = objectMeta('HashCode', [EqualityComparator]);
  var HashCode_instance;
  function HashCode_getInstance() {
    if (HashCode_instance == null)
      new HashCode();
    return HashCode_instance;
  }
  function EqualityComparator() {
  }
  EqualityComparator.$metadata$ = interfaceMeta('EqualityComparator');
  function EntrySet($outer) {
    this.ib_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet.prototype.jb = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet.prototype.c = function (element) {
    return this.jb((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet.prototype.ta = function (element) {
    return this.ib_1.u1(element);
  };
  EntrySet.prototype.d = function () {
    return this.ib_1.ob_1.d();
  };
  EntrySet.prototype.g = function () {
    return this.ib_1.g();
  };
  EntrySet.$metadata$ = classMeta('EntrySet', undefined, undefined, undefined, undefined, AbstractEntrySet.prototype);
  function HashMap_init_$Init$(internalMap, $this) {
    AbstractMutableMap.call($this);
    HashMap.call($this);
    $this.ob_1 = internalMap;
    $this.pb_1 = internalMap.rb();
    return $this;
  }
  function HashMap_init_$Init$_0($this) {
    HashMap_init_$Init$(new InternalHashCodeMap(HashCode_getInstance()), $this);
    return $this;
  }
  function HashMap_init_$Create$() {
    return HashMap_init_$Init$_0(Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_0($this);
    {
      var tmp0_require = initialCapacity >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Negative initial capacity: ' + initialCapacity;
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    {
      var tmp1_require = loadFactor >= 0;
      {
      }
      if (!tmp1_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Non-positive load factor: ' + loadFactor;
        }
        var message_0 = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message_0));
      }
    }
    return $this;
  }
  function HashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return HashMap_init_$Init$_1(initialCapacity, loadFactor, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_2(initialCapacity, $this) {
    HashMap_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashMap_init_$Create$_1(initialCapacity) {
    return HashMap_init_$Init$_2(initialCapacity, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_3(original, $this) {
    HashMap_init_$Init$_0($this);
    $this.ab(original);
    return $this;
  }
  function HashMap_init_$Create$_2(original) {
    return HashMap_init_$Init$_3(original, Object.create(HashMap.prototype));
  }
  HashMap.prototype.s1 = function (key) {
    return this.ob_1.p1(key);
  };
  HashMap.prototype.j = function () {
    if (this.qb_1 == null) {
      this.qb_1 = this.sb();
    }
    return ensureNotNull(this.qb_1);
  };
  HashMap.prototype.sb = function () {
    return new EntrySet(this);
  };
  HashMap.prototype.v1 = function (key) {
    return this.ob_1.v1(key);
  };
  HashMap.prototype.a = function (key, value) {
    return this.ob_1.a(key, value);
  };
  HashMap.prototype.g = function () {
    return this.ob_1.g();
  };
  function HashMap() {
    this.qb_1 = null;
  }
  HashMap.$metadata$ = classMeta('HashMap', [MutableMap], undefined, undefined, undefined, AbstractMutableMap.prototype);
  function HashSet_init_$Init$($this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.tb_1 = HashMap_init_$Create$();
    return $this;
  }
  function HashSet_init_$Create$() {
    return HashSet_init_$Init$(Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_0(elements, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.tb_1 = HashMap_init_$Create$_1(elements.g());
    $this.w(elements);
    return $this;
  }
  function HashSet_init_$Create$_0(elements) {
    return HashSet_init_$Init$_0(elements, Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.tb_1 = HashMap_init_$Create$_0(initialCapacity, loadFactor);
    return $this;
  }
  function HashSet_init_$Init$_2(initialCapacity, $this) {
    HashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashSet_init_$Create$_1(initialCapacity) {
    return HashSet_init_$Init$_2(initialCapacity, Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_3(map, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.tb_1 = map;
    return $this;
  }
  HashSet.prototype.ub = function () {
    return this.tb_1;
  };
  HashSet.prototype.c = function (element) {
    var old = this.tb_1.a(element, this);
    return old == null;
  };
  HashSet.prototype.a1 = function (element) {
    return this.tb_1.s1(element);
  };
  HashSet.prototype.i = function () {
    return this.tb_1.i();
  };
  HashSet.prototype.d = function () {
    return this.tb_1.w1().d();
  };
  HashSet.prototype.g = function () {
    return this.tb_1.g();
  };
  function HashSet() {
  }
  HashSet.$metadata$ = classMeta('HashSet', [MutableSet], undefined, undefined, undefined, AbstractMutableSet.prototype);
  function computeNext($this) {
    if ($this.yb_1 != null ? $this.zb_1 : false) {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = $this.yb_1;
        tmp$ret$0 = tmp0_unsafeCast;
      }
      var chainSize = tmp$ret$0.length;
      var tmp0_this = $this;
      tmp0_this.ac_1 = tmp0_this.ac_1 + 1 | 0;
      if (tmp0_this.ac_1 < chainSize)
        return 0;
    }
    var tmp1_this = $this;
    tmp1_this.xb_1 = tmp1_this.xb_1 + 1 | 0;
    if (tmp1_this.xb_1 < $this.wb_1.length) {
      $this.yb_1 = $this.cc_1.ec_1[$this.wb_1[$this.xb_1]];
      var tmp = $this;
      var tmp_0 = $this.yb_1;
      tmp.zb_1 = !(tmp_0 == null) ? isArray(tmp_0) : false;
      $this.ac_1 = 0;
      return 0;
    } else {
      $this.yb_1 = null;
      return 1;
    }
  }
  function getEntry($this, key) {
    var tmp0_elvis_lhs = getChainOrEntryOrNull($this, $this.dc_1.hb(key));
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if ($this.dc_1.gb(entry.j1(), key)) {
        return entry;
      } else {
        return null;
      }
    } else {
      var chain = chainOrEntry;
      return findEntryInChain(chain, $this, key);
    }
  }
  function findEntryInChain(_this__u8e3s4, $this, key) {
    var tmp$ret$1;
    $l$block: {
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          tmp$ret$0 = $this.dc_1.gb(element.j1(), key);
        }
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function getChainOrEntryOrNull($this, hashCode) {
    var chainOrEntry = $this.ec_1[hashCode];
    return chainOrEntry === undefined ? null : chainOrEntry;
  }
  function InternalHashCodeMap$iterator$1(this$0) {
    this.cc_1 = this$0;
    this.vb_1 = -1;
    this.wb_1 = Object.keys(this$0.ec_1);
    this.xb_1 = -1;
    this.yb_1 = null;
    this.zb_1 = false;
    this.ac_1 = -1;
    this.bc_1 = null;
  }
  InternalHashCodeMap$iterator$1.prototype.e = function () {
    if (this.vb_1 === -1)
      this.vb_1 = computeNext(this);
    return this.vb_1 === 0;
  };
  InternalHashCodeMap$iterator$1.prototype.f = function () {
    if (!this.e())
      throw NoSuchElementException_init_$Create$();
    var tmp;
    if (this.zb_1) {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = this.yb_1;
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$0[this.ac_1];
    } else {
      var tmp$ret$1;
      {
        var tmp1_unsafeCast = this.yb_1;
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp = tmp$ret$1;
    }
    var lastEntry = tmp;
    this.bc_1 = lastEntry;
    this.vb_1 = -1;
    return lastEntry;
  };
  InternalHashCodeMap$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function InternalHashCodeMap(equality) {
    this.dc_1 = equality;
    this.ec_1 = this.gc();
    this.fc_1 = 0;
  }
  InternalHashCodeMap.prototype.rb = function () {
    return this.dc_1;
  };
  InternalHashCodeMap.prototype.g = function () {
    return this.fc_1;
  };
  InternalHashCodeMap.prototype.a = function (key, value) {
    var hashCode = this.dc_1.hb(key);
    var chainOrEntry = getChainOrEntryOrNull(this, hashCode);
    if (chainOrEntry == null) {
      this.ec_1[hashCode] = new SimpleEntry(key, value);
    } else {
      if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
        var entry = chainOrEntry;
        if (this.dc_1.gb(entry.j1(), key)) {
          return entry.sa(value);
        } else {
          var tmp$ret$2;
          {
            var tmp0_arrayOf = [entry, new SimpleEntry(key, value)];
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0_arrayOf;
              }
              tmp$ret$1 = tmp$ret$0;
            }
            tmp$ret$2 = tmp$ret$1;
          }
          this.ec_1[hashCode] = tmp$ret$2;
          var tmp0_this = this;
          var tmp1 = tmp0_this.fc_1;
          tmp0_this.fc_1 = tmp1 + 1 | 0;
          return null;
        }
      } else {
        var chain = chainOrEntry;
        var entry_0 = findEntryInChain(chain, this, key);
        if (!(entry_0 == null)) {
          return entry_0.sa(value);
        }
        var tmp$ret$3;
        {
          tmp$ret$3 = chain;
        }
        tmp$ret$3.push(new SimpleEntry(key, value));
      }
    }
    var tmp2_this = this;
    var tmp3 = tmp2_this.fc_1;
    tmp2_this.fc_1 = tmp3 + 1 | 0;
    return null;
  };
  InternalHashCodeMap.prototype.p1 = function (key) {
    return !(getEntry(this, key) == null);
  };
  InternalHashCodeMap.prototype.v1 = function (key) {
    var tmp0_safe_receiver = getEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.l1();
  };
  InternalHashCodeMap.prototype.d = function () {
    return new InternalHashCodeMap$iterator$1(this);
  };
  InternalHashCodeMap.$metadata$ = classMeta('InternalHashCodeMap', [InternalMap]);
  function InternalMap() {
  }
  InternalMap.$metadata$ = interfaceMeta('InternalMap', [MutableIterable]);
  function EntryIterator($outer) {
    this.jc_1 = $outer;
    this.hc_1 = null;
    this.ic_1 = null;
    this.ic_1 = this.jc_1.kc_1.u2_1;
  }
  EntryIterator.prototype.e = function () {
    return !(this.ic_1 === null);
  };
  EntryIterator.prototype.f = function () {
    if (!this.e())
      throw NoSuchElementException_init_$Create$();
    var current = ensureNotNull(this.ic_1);
    this.hc_1 = current;
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp0_takeIf = current.nc_1;
      {
      }
      var tmp_0;
      var tmp$ret$0;
      {
        tmp$ret$0 = !(tmp0_takeIf === this.jc_1.kc_1.u2_1);
      }
      if (tmp$ret$0) {
        tmp_0 = tmp0_takeIf;
      } else {
        tmp_0 = null;
      }
      tmp$ret$1 = tmp_0;
    }
    tmp.ic_1 = tmp$ret$1;
    return current;
  };
  EntryIterator.$metadata$ = classMeta('EntryIterator', [MutableIterator]);
  function ChainEntry($outer, key, value) {
    this.pc_1 = $outer;
    SimpleEntry.call(this, key, value);
    this.nc_1 = null;
    this.oc_1 = null;
  }
  ChainEntry.prototype.sa = function (newValue) {
    this.pc_1.ga();
    return SimpleEntry.prototype.sa.call(this, newValue);
  };
  ChainEntry.$metadata$ = classMeta('ChainEntry', undefined, undefined, undefined, undefined, SimpleEntry.prototype);
  function EntrySet_0($outer) {
    this.kc_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet_0.prototype.jb = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet_0.prototype.c = function (element) {
    return this.jb((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet_0.prototype.ta = function (element) {
    return this.kc_1.u1(element);
  };
  EntrySet_0.prototype.d = function () {
    return new EntryIterator(this);
  };
  EntrySet_0.prototype.g = function () {
    return this.kc_1.g();
  };
  EntrySet_0.prototype.ga = function () {
    return this.kc_1.ga();
  };
  EntrySet_0.$metadata$ = classMeta('EntrySet', undefined, undefined, undefined, undefined, AbstractEntrySet.prototype);
  function addToEnd(_this__u8e3s4, $this) {
    {
      var tmp0_check = _this__u8e3s4.nc_1 == null ? _this__u8e3s4.oc_1 == null : false;
      {
      }
      {
        {
        }
        if (!tmp0_check) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Check failed.';
          }
          var message = tmp$ret$0;
          throw IllegalStateException_init_$Create$(toString_2(message));
        }
      }
    }
    var _head = $this.u2_1;
    if (_head == null) {
      $this.u2_1 = _this__u8e3s4;
      _this__u8e3s4.nc_1 = _this__u8e3s4;
      _this__u8e3s4.oc_1 = _this__u8e3s4;
    } else {
      var tmp$ret$3;
      {
        var tmp1_checkNotNull = _head.oc_1;
        {
        }
        var tmp$ret$2;
        $l$block: {
          {
          }
          if (tmp1_checkNotNull == null) {
            var tmp$ret$1;
            {
              tmp$ret$1 = 'Required value was null.';
            }
            var message_0 = tmp$ret$1;
            throw IllegalStateException_init_$Create$(toString_2(message_0));
          } else {
            tmp$ret$2 = tmp1_checkNotNull;
            break $l$block;
          }
        }
        tmp$ret$3 = tmp$ret$2;
      }
      var _tail = tmp$ret$3;
      _this__u8e3s4.oc_1 = _tail;
      _this__u8e3s4.nc_1 = _head;
      _head.oc_1 = _this__u8e3s4;
      _tail.nc_1 = _this__u8e3s4;
    }
  }
  function LinkedHashMap_init_$Init$($this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.v2_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$() {
    return LinkedHashMap_init_$Init$(Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_1(initialCapacity, loadFactor, $this);
    LinkedHashMap.call($this);
    $this.v2_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_1(initialCapacity, $this) {
    LinkedHashMap_init_$Init$_0(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashMap_init_$Create$_1(initialCapacity) {
    return LinkedHashMap_init_$Init$_1(initialCapacity, Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_2(original, $this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.v2_1 = HashMap_init_$Create$();
    $this.ab(original);
    return $this;
  }
  function LinkedHashMap_init_$Create$_2(original) {
    return LinkedHashMap_init_$Init$_2(original, Object.create(LinkedHashMap.prototype));
  }
  LinkedHashMap.prototype.x2 = function () {
    this.ga();
    this.w2_1 = true;
    return this;
  };
  LinkedHashMap.prototype.s1 = function (key) {
    return this.v2_1.s1(key);
  };
  LinkedHashMap.prototype.sb = function () {
    return new EntrySet_0(this);
  };
  LinkedHashMap.prototype.v1 = function (key) {
    var tmp0_safe_receiver = this.v2_1.v1(key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.l1();
  };
  LinkedHashMap.prototype.a = function (key, value) {
    this.ga();
    var old = this.v2_1.v1(key);
    if (old == null) {
      var newEntry = new ChainEntry(this, key, value);
      this.v2_1.a(key, newEntry);
      addToEnd(newEntry, this);
      return null;
    } else {
      return old.sa(value);
    }
  };
  LinkedHashMap.prototype.g = function () {
    return this.v2_1.g();
  };
  LinkedHashMap.prototype.ga = function () {
    if (this.w2_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  function LinkedHashMap() {
    this.u2_1 = null;
    this.w2_1 = false;
  }
  LinkedHashMap.$metadata$ = classMeta('LinkedHashMap', [MutableMap], undefined, undefined, undefined, HashMap.prototype);
  function LinkedHashSet_init_$Init$($this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Create$() {
    return LinkedHashSet_init_$Init$(Object.create(LinkedHashSet.prototype));
  }
  function LinkedHashSet_init_$Init$_0(elements, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    $this.w(elements);
    return $this;
  }
  function LinkedHashSet_init_$Create$_0(elements) {
    return LinkedHashSet_init_$Init$_0(elements, Object.create(LinkedHashSet.prototype));
  }
  function LinkedHashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Init$_2(initialCapacity, $this) {
    LinkedHashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashSet_init_$Create$_1(initialCapacity) {
    return LinkedHashSet_init_$Init$_2(initialCapacity, Object.create(LinkedHashSet.prototype));
  }
  LinkedHashSet.prototype.ga = function () {
    return this.ub().ga();
  };
  function LinkedHashSet() {
  }
  LinkedHashSet.$metadata$ = classMeta('LinkedHashSet', [MutableSet], undefined, undefined, undefined, HashSet.prototype);
  function RandomAccess() {
  }
  RandomAccess.$metadata$ = interfaceMeta('RandomAccess');
  function SafeContinuation_init_$Init$(delegate, $this) {
    SafeContinuation.call($this, delegate, CoroutineSingletons_UNDECIDED_getInstance());
    return $this;
  }
  function SafeContinuation_init_$Create$(delegate) {
    return SafeContinuation_init_$Init$(delegate, Object.create(SafeContinuation.prototype));
  }
  function SafeContinuation(delegate, initialResult) {
    this.rc_1 = delegate;
    this.sc_1 = initialResult;
  }
  SafeContinuation.prototype.o3 = function () {
    return this.rc_1.o3();
  };
  SafeContinuation.prototype.m3 = function (result) {
    var cur = this.sc_1;
    if (cur === CoroutineSingletons_UNDECIDED_getInstance()) {
      this.sc_1 = _Result___get_value__impl__bjfvqg(result);
    } else if (cur === get_COROUTINE_SUSPENDED()) {
      this.sc_1 = CoroutineSingletons_RESUMED_getInstance();
      this.rc_1.m3(result);
    } else
      throw IllegalStateException_init_$Create$('Already resumed');
  };
  SafeContinuation.prototype.tc = function () {
    if (this.sc_1 === CoroutineSingletons_UNDECIDED_getInstance()) {
      this.sc_1 = get_COROUTINE_SUSPENDED();
      return get_COROUTINE_SUSPENDED();
    }
    var result = this.sc_1;
    var tmp;
    if (result === CoroutineSingletons_RESUMED_getInstance()) {
      tmp = get_COROUTINE_SUSPENDED();
    } else {
      if (result instanceof Failure) {
        throw result.v6_1;
      } else {
        tmp = result;
      }
    }
    return tmp;
  };
  SafeContinuation.$metadata$ = classMeta('SafeContinuation', [Continuation]);
  function CancellationException_init_$Init$(message, $this) {
    IllegalStateException_init_$Init$(message, $this);
    CancellationException.call($this);
    return $this;
  }
  function CancellationException_init_$Create$(message) {
    var tmp = CancellationException_init_$Init$(message, Object.create(CancellationException.prototype));
    captureStack(tmp, CancellationException_init_$Create$);
    return tmp;
  }
  function CancellationException_init_$Init$_0(message, cause, $this) {
    IllegalStateException_init_$Init$_0(message, cause, $this);
    CancellationException.call($this);
    return $this;
  }
  function CancellationException_init_$Create$_0(message, cause) {
    var tmp = CancellationException_init_$Init$_0(message, cause, Object.create(CancellationException.prototype));
    captureStack(tmp, CancellationException_init_$Create$_0);
    return tmp;
  }
  function CancellationException() {
    captureStack(this, CancellationException);
  }
  CancellationException.$metadata$ = classMeta('CancellationException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function asDynamic(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function unsafeCastDynamic(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function unsafeCast(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0;
  }
  function Serializable() {
  }
  Serializable.$metadata$ = interfaceMeta('Serializable');
  function nativeFill(_this__u8e3s4, element, fromIndex, toIndex) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    tmp$ret$0.fill(element, fromIndex, toIndex);
  }
  function roundToLong(_this__u8e3s4) {
    var tmp;
    if (isNaN_0(_this__u8e3s4)) {
      throw IllegalArgumentException_init_$Create$_0('Cannot round NaN value.');
    } else {
      Companion_getInstance_15();
      if (_this__u8e3s4 > (new Long(-1, 2147483647)).uc()) {
        Companion_getInstance_15();
        tmp = new Long(-1, 2147483647);
      } else {
        Companion_getInstance_15();
        if (_this__u8e3s4 < (new Long(0, -2147483648)).uc()) {
          Companion_getInstance_15();
          tmp = new Long(0, -2147483648);
        } else {
          tmp = numberToLong(Math.round(_this__u8e3s4));
        }
      }
    }
    return tmp;
  }
  function min(a, b) {
    return Math.min(a, b);
  }
  function isNaN_0(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function isInfinite(_this__u8e3s4) {
    var tmp;
    DoubleCompanionObject_getInstance();
    if (_this__u8e3s4 === Infinity) {
      tmp = true;
    } else {
      DoubleCompanionObject_getInstance();
      tmp = _this__u8e3s4 === -Infinity;
    }
    return tmp;
  }
  function isFinite(_this__u8e3s4) {
    return !isInfinite_0(_this__u8e3s4) ? !isNaN_1(_this__u8e3s4) : false;
  }
  function isFinite_0(_this__u8e3s4) {
    return !isInfinite(_this__u8e3s4) ? !isNaN_0(_this__u8e3s4) : false;
  }
  function isInfinite_0(_this__u8e3s4) {
    var tmp;
    FloatCompanionObject_getInstance();
    if (_this__u8e3s4 === Infinity) {
      tmp = true;
    } else {
      FloatCompanionObject_getInstance();
      tmp = _this__u8e3s4 === -Infinity;
    }
    return tmp;
  }
  function isNaN_1(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function countTrailingZeroBits(_this__u8e3s4) {
    var low = _this__u8e3s4.p_1;
    var tmp;
    if (low === 0) {
      IntCompanionObject_getInstance();
      tmp = 32 + countTrailingZeroBits_0(_this__u8e3s4.q_1) | 0;
    } else {
      tmp = countTrailingZeroBits_0(low);
    }
    return tmp;
  }
  function countTrailingZeroBits_0(_this__u8e3s4) {
    IntCompanionObject_getInstance();
    var tmp$ret$0;
    {
      var tmp0_countLeadingZeroBits = ~(_this__u8e3s4 | (-_this__u8e3s4 | 0));
      tmp$ret$0 = clz32(tmp0_countLeadingZeroBits);
    }
    return 32 - tmp$ret$0 | 0;
  }
  function countLeadingZeroBits(_this__u8e3s4) {
    return clz32(_this__u8e3s4);
  }
  function get_js(_this__u8e3s4) {
    return (_this__u8e3s4 instanceof KClassImpl ? _this__u8e3s4 : THROW_CCE()).wc();
  }
  function KCallable() {
  }
  KCallable.$metadata$ = interfaceMeta('KCallable');
  function KClass() {
  }
  KClass.$metadata$ = interfaceMeta('KClass', [KClassifier]);
  function KClassImpl(jClass) {
    this.vc_1 = jClass;
  }
  KClassImpl.prototype.wc = function () {
    return this.vc_1;
  };
  KClassImpl.prototype.equals = function (other) {
    var tmp;
    if (other instanceof KClassImpl) {
      tmp = equals_1(this.wc(), other.wc());
    } else {
      tmp = false;
    }
    return tmp;
  };
  KClassImpl.prototype.hashCode = function () {
    var tmp0_safe_receiver = this.xc();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getStringHashCode(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  KClassImpl.prototype.toString = function () {
    return 'class ' + this.xc();
  };
  KClassImpl.$metadata$ = classMeta('KClassImpl', [KClass]);
  function PrimitiveKClassImpl(jClass, givenSimpleName, isInstanceFunction) {
    KClassImpl.call(this, jClass);
    this.ad_1 = givenSimpleName;
    this.bd_1 = isInstanceFunction;
  }
  PrimitiveKClassImpl.prototype.equals = function (other) {
    if (!(other instanceof PrimitiveKClassImpl))
      return false;
    return KClassImpl.prototype.equals.call(this, other) ? this.ad_1 === other.ad_1 : false;
  };
  PrimitiveKClassImpl.prototype.xc = function () {
    return this.ad_1;
  };
  PrimitiveKClassImpl.prototype.yc = function (value) {
    return this.bd_1(value);
  };
  PrimitiveKClassImpl.$metadata$ = classMeta('PrimitiveKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  function NothingKClassImpl() {
    NothingKClassImpl_instance = this;
    KClassImpl.call(this, Object);
    this.dd_1 = 'Nothing';
  }
  NothingKClassImpl.prototype.xc = function () {
    return this.dd_1;
  };
  NothingKClassImpl.prototype.yc = function (value) {
    return false;
  };
  NothingKClassImpl.prototype.wc = function () {
    throw UnsupportedOperationException_init_$Create$_0("There's no native JS class for Nothing type");
  };
  NothingKClassImpl.prototype.equals = function (other) {
    return other === this;
  };
  NothingKClassImpl.prototype.hashCode = function () {
    return 0;
  };
  NothingKClassImpl.$metadata$ = objectMeta('NothingKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  var NothingKClassImpl_instance;
  function NothingKClassImpl_getInstance() {
    if (NothingKClassImpl_instance == null)
      new NothingKClassImpl();
    return NothingKClassImpl_instance;
  }
  function ErrorKClass() {
  }
  ErrorKClass.prototype.xc = function () {
    throw IllegalStateException_init_$Create$('Unknown simpleName for ErrorKClass');
  };
  ErrorKClass.prototype.yc = function (value) {
    throw IllegalStateException_init_$Create$("Can's check isInstance on ErrorKClass");
  };
  ErrorKClass.prototype.equals = function (other) {
    return other === this;
  };
  ErrorKClass.prototype.hashCode = function () {
    return 0;
  };
  ErrorKClass.$metadata$ = classMeta('ErrorKClass', [KClass]);
  function SimpleKClassImpl(jClass) {
    KClassImpl.call(this, jClass);
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = jClass;
      }
      var tmp0_safe_receiver = tmp$ret$0.$metadata$;
      var tmp0_unsafeCast = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.simpleName;
      tmp$ret$1 = tmp0_unsafeCast;
    }
    tmp.fd_1 = tmp$ret$1;
  }
  SimpleKClassImpl.prototype.xc = function () {
    return this.fd_1;
  };
  SimpleKClassImpl.prototype.yc = function (value) {
    return jsIsType(value, this.wc());
  };
  SimpleKClassImpl.$metadata$ = classMeta('SimpleKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  function KProperty1() {
  }
  KProperty1.$metadata$ = interfaceMeta('KProperty1', [KProperty]);
  function KProperty() {
  }
  KProperty.$metadata$ = interfaceMeta('KProperty', [KCallable]);
  function KType() {
  }
  KType.$metadata$ = interfaceMeta('KType');
  function createKType(classifier, arguments_0, isMarkedNullable) {
    return new KTypeImpl(classifier, asList(arguments_0), isMarkedNullable);
  }
  function createInvariantKTypeProjection(type) {
    return Companion_getInstance_2().p4(type);
  }
  function KTypeImpl(classifier, arguments_0, isMarkedNullable) {
    this.jd_1 = classifier;
    this.kd_1 = arguments_0;
    this.ld_1 = isMarkedNullable;
  }
  KTypeImpl.prototype.gd = function () {
    return this.jd_1;
  };
  KTypeImpl.prototype.hd = function () {
    return this.kd_1;
  };
  KTypeImpl.prototype.id = function () {
    return this.ld_1;
  };
  KTypeImpl.prototype.equals = function (other) {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (other instanceof KTypeImpl) {
      tmp_1 = equals_1(this.jd_1, other.jd_1);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = equals_1(this.kd_1, other.kd_1);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = this.ld_1 === other.ld_1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  KTypeImpl.prototype.hashCode = function () {
    return imul(imul(hashCode_0(this.jd_1), 31) + hashCode_0(this.kd_1) | 0, 31) + (this.ld_1 | 0) | 0;
  };
  KTypeImpl.prototype.toString = function () {
    var tmp = this.jd_1;
    var kClass = isInterface(tmp, KClass) ? tmp : null;
    var classifierName = kClass == null ? toString_2(this.jd_1) : !(kClass.xc() == null) ? kClass.xc() : '(non-denotable type)';
    var tmp_0;
    if (this.kd_1.i()) {
      tmp_0 = '';
    } else {
      tmp_0 = joinToString$default_0(this.kd_1, ', ', '<', '>', 0, null, null, 56, null);
    }
    var args = tmp_0;
    var nullable = this.ld_1 ? '?' : '';
    return plus_2(classifierName, args) + nullable;
  };
  KTypeImpl.$metadata$ = classMeta('KTypeImpl', [KType]);
  function get_functionClasses() {
    init_properties_primitives_kt_rm1w5q();
    return functionClasses;
  }
  var functionClasses;
  function PrimitiveClasses$anyClass$lambda() {
    return function (it) {
      return isObject(it);
    };
  }
  function PrimitiveClasses$numberClass$lambda() {
    return function (it) {
      return isNumber(it);
    };
  }
  function PrimitiveClasses$booleanClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'boolean' : false;
    };
  }
  function PrimitiveClasses$byteClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$shortClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$intClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$floatClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$doubleClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$arrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isArray(it) : false;
    };
  }
  function PrimitiveClasses$stringClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'string' : false;
    };
  }
  function PrimitiveClasses$throwableClass$lambda() {
    return function (it) {
      return it instanceof Error;
    };
  }
  function PrimitiveClasses$booleanArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isBooleanArray(it) : false;
    };
  }
  function PrimitiveClasses$charArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isCharArray(it) : false;
    };
  }
  function PrimitiveClasses$byteArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isByteArray(it) : false;
    };
  }
  function PrimitiveClasses$shortArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isShortArray(it) : false;
    };
  }
  function PrimitiveClasses$intArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isIntArray(it) : false;
    };
  }
  function PrimitiveClasses$longArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isLongArray(it) : false;
    };
  }
  function PrimitiveClasses$floatArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isFloatArray(it) : false;
    };
  }
  function PrimitiveClasses$doubleArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isDoubleArray(it) : false;
    };
  }
  function PrimitiveClasses$functionClass$lambda($arity) {
    return function (it) {
      var tmp;
      if (typeof it === 'function') {
        var tmp$ret$0;
        {
          tmp$ret$0 = it;
        }
        tmp = tmp$ret$0.length === $arity;
      } else {
        tmp = false;
      }
      return tmp;
    };
  }
  function PrimitiveClasses() {
    PrimitiveClasses_instance = this;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = Object;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    var tmp_0 = tmp$ret$0;
    tmp.md_1 = new PrimitiveKClassImpl(tmp_0, 'Any', PrimitiveClasses$anyClass$lambda());
    var tmp_1 = this;
    var tmp$ret$1;
    {
      var tmp0_unsafeCast_0 = Number;
      tmp$ret$1 = tmp0_unsafeCast_0;
    }
    var tmp_2 = tmp$ret$1;
    tmp_1.nd_1 = new PrimitiveKClassImpl(tmp_2, 'Number', PrimitiveClasses$numberClass$lambda());
    this.od_1 = NothingKClassImpl_getInstance();
    var tmp_3 = this;
    var tmp$ret$2;
    {
      var tmp0_unsafeCast_1 = Boolean;
      tmp$ret$2 = tmp0_unsafeCast_1;
    }
    var tmp_4 = tmp$ret$2;
    tmp_3.pd_1 = new PrimitiveKClassImpl(tmp_4, 'Boolean', PrimitiveClasses$booleanClass$lambda());
    var tmp_5 = this;
    var tmp$ret$3;
    {
      var tmp0_unsafeCast_2 = Number;
      tmp$ret$3 = tmp0_unsafeCast_2;
    }
    var tmp_6 = tmp$ret$3;
    tmp_5.qd_1 = new PrimitiveKClassImpl(tmp_6, 'Byte', PrimitiveClasses$byteClass$lambda());
    var tmp_7 = this;
    var tmp$ret$4;
    {
      var tmp0_unsafeCast_3 = Number;
      tmp$ret$4 = tmp0_unsafeCast_3;
    }
    var tmp_8 = tmp$ret$4;
    tmp_7.rd_1 = new PrimitiveKClassImpl(tmp_8, 'Short', PrimitiveClasses$shortClass$lambda());
    var tmp_9 = this;
    var tmp$ret$5;
    {
      var tmp0_unsafeCast_4 = Number;
      tmp$ret$5 = tmp0_unsafeCast_4;
    }
    var tmp_10 = tmp$ret$5;
    tmp_9.sd_1 = new PrimitiveKClassImpl(tmp_10, 'Int', PrimitiveClasses$intClass$lambda());
    var tmp_11 = this;
    var tmp$ret$6;
    {
      var tmp0_unsafeCast_5 = Number;
      tmp$ret$6 = tmp0_unsafeCast_5;
    }
    var tmp_12 = tmp$ret$6;
    tmp_11.td_1 = new PrimitiveKClassImpl(tmp_12, 'Float', PrimitiveClasses$floatClass$lambda());
    var tmp_13 = this;
    var tmp$ret$7;
    {
      var tmp0_unsafeCast_6 = Number;
      tmp$ret$7 = tmp0_unsafeCast_6;
    }
    var tmp_14 = tmp$ret$7;
    tmp_13.ud_1 = new PrimitiveKClassImpl(tmp_14, 'Double', PrimitiveClasses$doubleClass$lambda());
    var tmp_15 = this;
    var tmp$ret$8;
    {
      var tmp0_unsafeCast_7 = Array;
      tmp$ret$8 = tmp0_unsafeCast_7;
    }
    var tmp_16 = tmp$ret$8;
    tmp_15.vd_1 = new PrimitiveKClassImpl(tmp_16, 'Array', PrimitiveClasses$arrayClass$lambda());
    var tmp_17 = this;
    var tmp$ret$9;
    {
      var tmp0_unsafeCast_8 = String;
      tmp$ret$9 = tmp0_unsafeCast_8;
    }
    var tmp_18 = tmp$ret$9;
    tmp_17.wd_1 = new PrimitiveKClassImpl(tmp_18, 'String', PrimitiveClasses$stringClass$lambda());
    var tmp_19 = this;
    var tmp$ret$10;
    {
      var tmp0_unsafeCast_9 = Error;
      tmp$ret$10 = tmp0_unsafeCast_9;
    }
    var tmp_20 = tmp$ret$10;
    tmp_19.xd_1 = new PrimitiveKClassImpl(tmp_20, 'Throwable', PrimitiveClasses$throwableClass$lambda());
    var tmp_21 = this;
    var tmp$ret$11;
    {
      var tmp0_unsafeCast_10 = Array;
      tmp$ret$11 = tmp0_unsafeCast_10;
    }
    var tmp_22 = tmp$ret$11;
    tmp_21.yd_1 = new PrimitiveKClassImpl(tmp_22, 'BooleanArray', PrimitiveClasses$booleanArrayClass$lambda());
    var tmp_23 = this;
    var tmp$ret$12;
    {
      var tmp0_unsafeCast_11 = Uint16Array;
      tmp$ret$12 = tmp0_unsafeCast_11;
    }
    var tmp_24 = tmp$ret$12;
    tmp_23.zd_1 = new PrimitiveKClassImpl(tmp_24, 'CharArray', PrimitiveClasses$charArrayClass$lambda());
    var tmp_25 = this;
    var tmp$ret$13;
    {
      var tmp0_unsafeCast_12 = Int8Array;
      tmp$ret$13 = tmp0_unsafeCast_12;
    }
    var tmp_26 = tmp$ret$13;
    tmp_25.ae_1 = new PrimitiveKClassImpl(tmp_26, 'ByteArray', PrimitiveClasses$byteArrayClass$lambda());
    var tmp_27 = this;
    var tmp$ret$14;
    {
      var tmp0_unsafeCast_13 = Int16Array;
      tmp$ret$14 = tmp0_unsafeCast_13;
    }
    var tmp_28 = tmp$ret$14;
    tmp_27.be_1 = new PrimitiveKClassImpl(tmp_28, 'ShortArray', PrimitiveClasses$shortArrayClass$lambda());
    var tmp_29 = this;
    var tmp$ret$15;
    {
      var tmp0_unsafeCast_14 = Int32Array;
      tmp$ret$15 = tmp0_unsafeCast_14;
    }
    var tmp_30 = tmp$ret$15;
    tmp_29.ce_1 = new PrimitiveKClassImpl(tmp_30, 'IntArray', PrimitiveClasses$intArrayClass$lambda());
    var tmp_31 = this;
    var tmp$ret$16;
    {
      var tmp0_unsafeCast_15 = Array;
      tmp$ret$16 = tmp0_unsafeCast_15;
    }
    var tmp_32 = tmp$ret$16;
    tmp_31.de_1 = new PrimitiveKClassImpl(tmp_32, 'LongArray', PrimitiveClasses$longArrayClass$lambda());
    var tmp_33 = this;
    var tmp$ret$17;
    {
      var tmp0_unsafeCast_16 = Float32Array;
      tmp$ret$17 = tmp0_unsafeCast_16;
    }
    var tmp_34 = tmp$ret$17;
    tmp_33.ee_1 = new PrimitiveKClassImpl(tmp_34, 'FloatArray', PrimitiveClasses$floatArrayClass$lambda());
    var tmp_35 = this;
    var tmp$ret$18;
    {
      var tmp0_unsafeCast_17 = Float64Array;
      tmp$ret$18 = tmp0_unsafeCast_17;
    }
    var tmp_36 = tmp$ret$18;
    tmp_35.fe_1 = new PrimitiveKClassImpl(tmp_36, 'DoubleArray', PrimitiveClasses$doubleArrayClass$lambda());
  }
  PrimitiveClasses.prototype.ge = function () {
    return this.md_1;
  };
  PrimitiveClasses.prototype.he = function () {
    return this.nd_1;
  };
  PrimitiveClasses.prototype.ie = function () {
    return this.od_1;
  };
  PrimitiveClasses.prototype.je = function () {
    return this.pd_1;
  };
  PrimitiveClasses.prototype.ke = function () {
    return this.qd_1;
  };
  PrimitiveClasses.prototype.le = function () {
    return this.rd_1;
  };
  PrimitiveClasses.prototype.me = function () {
    return this.sd_1;
  };
  PrimitiveClasses.prototype.ne = function () {
    return this.td_1;
  };
  PrimitiveClasses.prototype.oe = function () {
    return this.ud_1;
  };
  PrimitiveClasses.prototype.pe = function () {
    return this.vd_1;
  };
  PrimitiveClasses.prototype.qe = function () {
    return this.wd_1;
  };
  PrimitiveClasses.prototype.re = function () {
    return this.xd_1;
  };
  PrimitiveClasses.prototype.se = function () {
    return this.yd_1;
  };
  PrimitiveClasses.prototype.te = function () {
    return this.zd_1;
  };
  PrimitiveClasses.prototype.ue = function () {
    return this.ae_1;
  };
  PrimitiveClasses.prototype.ve = function () {
    return this.be_1;
  };
  PrimitiveClasses.prototype.we = function () {
    return this.ce_1;
  };
  PrimitiveClasses.prototype.xe = function () {
    return this.de_1;
  };
  PrimitiveClasses.prototype.ye = function () {
    return this.ee_1;
  };
  PrimitiveClasses.prototype.ze = function () {
    return this.fe_1;
  };
  PrimitiveClasses.prototype.functionClass = function (arity) {
    var tmp0_elvis_lhs = get_functionClasses()[arity];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp$ret$0;
          {
            var tmp0_unsafeCast = Function;
            tmp$ret$0 = tmp0_unsafeCast;
          }
          var tmp_0 = tmp$ret$0;
          var tmp_1 = 'Function' + arity;
          var result = new PrimitiveKClassImpl(tmp_0, tmp_1, PrimitiveClasses$functionClass$lambda(arity));
          var tmp$ret$1;
          {
            var tmp1_asDynamic = get_functionClasses();
            tmp$ret$1 = tmp1_asDynamic;
          }
          tmp$ret$1[arity] = result;
          tmp$ret$2 = result;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp = tmp$ret$3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  PrimitiveClasses.$metadata$ = objectMeta('PrimitiveClasses');
  Object.defineProperty(PrimitiveClasses.prototype, 'anyClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ge
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'numberClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.he
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'nothingClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ie
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'booleanClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.je
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'byteClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ke
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'shortClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.le
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'intClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.me
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'floatClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ne
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'doubleClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.oe
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'arrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.pe
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'stringClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.qe
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'throwableClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.re
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'booleanArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.se
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'charArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.te
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'byteArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ue
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'shortArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ve
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'intArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.we
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'longArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.xe
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'floatArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ye
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'doubleArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ze
  });
  var PrimitiveClasses_instance;
  function PrimitiveClasses_getInstance() {
    if (PrimitiveClasses_instance == null)
      new PrimitiveClasses();
    return PrimitiveClasses_instance;
  }
  var properties_initialized_primitives_kt_jle18u;
  function init_properties_primitives_kt_rm1w5q() {
    if (properties_initialized_primitives_kt_jle18u) {
    } else {
      properties_initialized_primitives_kt_jle18u = true;
      var tmp$ret$0;
      {
        tmp$ret$0 = fillArrayVal(Array(0), null);
      }
      functionClasses = tmp$ret$0;
    }
  }
  function getKClass(jClass) {
    var tmp;
    if (Array.isArray(jClass)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = jClass;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = getKClassM(tmp$ret$1);
    } else {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          tmp$ret$2 = jClass;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp = getKClass1(tmp$ret$3);
    }
    return tmp;
  }
  function getKClassM(jClasses) {
    var tmp0_subject = jClasses.length;
    var tmp;
    switch (tmp0_subject) {
      case 1:
        tmp = getKClass1(jClasses[0]);
        break;
      case 0:
        var tmp$ret$1;
        {
          var tmp0_unsafeCast = NothingKClassImpl_getInstance();
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_unsafeCast;
          }
          tmp$ret$1 = tmp$ret$0;
        }

        tmp = tmp$ret$1;
        break;
      default:
        var tmp$ret$3;
        {
          var tmp1_unsafeCast = new ErrorKClass();
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp1_unsafeCast;
          }
          tmp$ret$3 = tmp$ret$2;
        }

        tmp = tmp$ret$3;
        break;
    }
    return tmp;
  }
  function getKClass1(jClass) {
    if (jClass === String) {
      var tmp$ret$1;
      {
        var tmp0_unsafeCast = PrimitiveClasses_getInstance().wd_1;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_unsafeCast;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      return tmp$ret$1;
    }
    var tmp$ret$2;
    {
      tmp$ret$2 = jClass;
    }
    var metadata = tmp$ret$2.$metadata$;
    var tmp;
    if (metadata != null) {
      var tmp_0;
      if (metadata.$kClass$ == null) {
        var kClass = new SimpleKClassImpl(jClass);
        metadata.$kClass$ = kClass;
        tmp_0 = kClass;
      } else {
        tmp_0 = metadata.$kClass$;
      }
      tmp = tmp_0;
    } else {
      tmp = new SimpleKClassImpl(jClass);
    }
    return tmp;
  }
  function getKClassFromExpression(e) {
    var tmp$ret$3;
    {
      var tmp0_subject = typeof e;
      var tmp;
      switch (tmp0_subject) {
        case 'string':
          tmp = PrimitiveClasses_getInstance().wd_1;
          break;
        case 'number':
          var tmp_0;
          var tmp$ret$0;
          {
            var tmp0_asDynamic = jsBitwiseOr(e, 0);
            tmp$ret$0 = tmp0_asDynamic;
          }

          if (tmp$ret$0 === e) {
            tmp_0 = PrimitiveClasses_getInstance().sd_1;
          } else {
            tmp_0 = PrimitiveClasses_getInstance().ud_1;
          }

          tmp = tmp_0;
          break;
        case 'boolean':
          tmp = PrimitiveClasses_getInstance().pd_1;
          break;
        case 'function':
          var tmp_1 = PrimitiveClasses_getInstance();
          var tmp$ret$1;
          {
            tmp$ret$1 = e;
          }

          tmp = tmp_1.functionClass(tmp$ret$1.length);
          break;
        default:
          var tmp_2;
          if (isBooleanArray(e)) {
            tmp_2 = PrimitiveClasses_getInstance().yd_1;
          } else {
            if (isCharArray(e)) {
              tmp_2 = PrimitiveClasses_getInstance().zd_1;
            } else {
              if (isByteArray(e)) {
                tmp_2 = PrimitiveClasses_getInstance().ae_1;
              } else {
                if (isShortArray(e)) {
                  tmp_2 = PrimitiveClasses_getInstance().be_1;
                } else {
                  if (isIntArray(e)) {
                    tmp_2 = PrimitiveClasses_getInstance().ce_1;
                  } else {
                    if (isLongArray(e)) {
                      tmp_2 = PrimitiveClasses_getInstance().de_1;
                    } else {
                      if (isFloatArray(e)) {
                        tmp_2 = PrimitiveClasses_getInstance().ee_1;
                      } else {
                        if (isDoubleArray(e)) {
                          tmp_2 = PrimitiveClasses_getInstance().fe_1;
                        } else {
                          if (isInterface(e, KClass)) {
                            tmp_2 = getKClass(KClass);
                          } else {
                            if (isArray(e)) {
                              tmp_2 = PrimitiveClasses_getInstance().vd_1;
                            } else {
                              var constructor = Object.getPrototypeOf(e).constructor;
                              var tmp_3;
                              if (constructor === Object) {
                                tmp_3 = PrimitiveClasses_getInstance().md_1;
                              } else if (constructor === Error) {
                                tmp_3 = PrimitiveClasses_getInstance().xd_1;
                              } else {
                                var jsClass = constructor;
                                tmp_3 = getKClass1(jsClass);
                              }
                              tmp_2 = tmp_3;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }

          tmp = tmp_2;
          break;
      }
      var tmp1_unsafeCast = tmp;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_unsafeCast;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    return tmp$ret$3;
  }
  function Appendable() {
  }
  Appendable.$metadata$ = interfaceMeta('Appendable');
  function StringBuilder_init_$Init$(capacity, $this) {
    StringBuilder_init_$Init$_0($this);
    return $this;
  }
  function StringBuilder_init_$Create$(capacity) {
    return StringBuilder_init_$Init$(capacity, Object.create(StringBuilder.prototype));
  }
  function StringBuilder_init_$Init$_0($this) {
    StringBuilder.call($this, '');
    return $this;
  }
  function StringBuilder_init_$Create$_0() {
    return StringBuilder_init_$Init$_0(Object.create(StringBuilder.prototype));
  }
  function StringBuilder(content) {
    this.b5_1 = !(content === undefined) ? content : '';
  }
  StringBuilder.prototype.d8 = function () {
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.b5_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    return tmp$ret$0.length;
  };
  StringBuilder.prototype.e8 = function (index) {
    var tmp$ret$0;
    {
      var tmp0_getOrElse = this.b5_1;
      var tmp;
      if (index >= 0 ? index <= get_lastIndex_3(tmp0_getOrElse) : false) {
        tmp = charSequenceGet(tmp0_getOrElse, index);
      } else {
        throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', length: ' + this.d8() + '}');
      }
      tmp$ret$0 = tmp;
    }
    return tmp$ret$0;
  };
  StringBuilder.prototype.f8 = function (startIndex, endIndex) {
    var tmp$ret$1;
    {
      var tmp0_substring = this.b5_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_substring;
      }
      tmp$ret$1 = tmp$ret$0.substring(startIndex, endIndex);
    }
    return tmp$ret$1;
  };
  StringBuilder.prototype.v4 = function (value) {
    var tmp0_this = this;
    tmp0_this.b5_1 = tmp0_this.b5_1 + new Char_0(value);
    return this;
  };
  StringBuilder.prototype.b = function (value) {
    var tmp0_this = this;
    tmp0_this.b5_1 = tmp0_this.b5_1 + toString_1(value);
    return this;
  };
  StringBuilder.prototype.af = function (value, startIndex, endIndex) {
    var tmp0_elvis_lhs = value;
    return this.d6(tmp0_elvis_lhs == null ? 'null' : tmp0_elvis_lhs, startIndex, endIndex);
  };
  StringBuilder.prototype.a6 = function (value) {
    var tmp0_this = this;
    tmp0_this.b5_1 = tmp0_this.b5_1 + toString_1(value);
    return this;
  };
  StringBuilder.prototype.b6 = function (value) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.b5_1;
    var tmp1_elvis_lhs = value;
    tmp.b5_1 = tmp_0 + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
    return this;
  };
  StringBuilder.prototype.c6 = function (index, value) {
    Companion_getInstance().d1(index, this.d8());
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp0_substring = this.b5_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_substring;
      }
      tmp$ret$1 = tmp$ret$0.substring(0, index);
    }
    var tmp_0 = tmp$ret$1 + new Char_0(value);
    var tmp$ret$3;
    {
      var tmp1_substring = this.b5_1;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_substring;
      }
      tmp$ret$3 = tmp$ret$2.substring(index);
    }
    tmp.b5_1 = tmp_0 + tmp$ret$3;
    return this;
  };
  StringBuilder.prototype.bf = function (newLength) {
    if (newLength < 0) {
      throw IllegalArgumentException_init_$Create$_0('Negative new length: ' + newLength + '.');
    }
    if (newLength <= this.d8()) {
      var tmp = this;
      var tmp$ret$1;
      {
        var tmp0_substring = this.b5_1;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_substring;
        }
        tmp$ret$1 = tmp$ret$0.substring(0, newLength);
      }
      tmp.b5_1 = tmp$ret$1;
    } else {
      var inductionVariable = this.d8();
      if (inductionVariable < newLength)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp1_this = this;
          tmp1_this.b5_1 = tmp1_this.b5_1 + new Char_0(_Char___init__impl__6a9atx(0));
        }
         while (inductionVariable < newLength);
    }
  };
  StringBuilder.prototype.toString = function () {
    return this.b5_1;
  };
  StringBuilder.prototype.cf = function () {
    this.b5_1 = '';
    return this;
  };
  StringBuilder.prototype.d6 = function (value, startIndex, endIndex) {
    var stringCsq = toString_2(value);
    Companion_getInstance().f1(startIndex, endIndex, stringCsq.length);
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.b5_1;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = stringCsq;
      }
      tmp$ret$1 = tmp$ret$0.substring(startIndex, endIndex);
    }
    tmp.b5_1 = tmp_0 + tmp$ret$1;
    return this;
  };
  StringBuilder.$metadata$ = classMeta('StringBuilder', [Appendable, CharSequence]);
  function uppercaseChar(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = toString_0(_this__u8e3s4);
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var uppercase = tmp$ret$2;
    return uppercase.length > 1 ? _this__u8e3s4 : charSequenceGet(uppercase, 0);
  }
  function lowercaseChar(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = toString_0(_this__u8e3s4);
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return charSequenceGet(tmp$ret$2, 0);
  }
  function uppercase(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = toString_0(_this__u8e3s4);
        tmp$ret$0 = tmp0_asDynamic;
      }
      var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function lowercase(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = toString_0(_this__u8e3s4);
        tmp$ret$0 = tmp0_asDynamic;
      }
      var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function isWhitespace(_this__u8e3s4) {
    return isWhitespaceImpl(_this__u8e3s4);
  }
  function isLowerCase(_this__u8e3s4) {
    if (_Char___init__impl__6a9atx(97) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(122) : false) {
      return true;
    }
    if (Char__compareTo_impl_ypi4mb(_this__u8e3s4, _Char___init__impl__6a9atx(128)) < 0) {
      return false;
    }
    return isLowerCaseImpl(_this__u8e3s4);
  }
  function titlecaseChar(_this__u8e3s4) {
    return titlecaseCharImpl(_this__u8e3s4);
  }
  function checkRadix(radix) {
    if (!(2 <= radix ? radix <= 36 : false)) {
      throw IllegalArgumentException_init_$Create$_0('radix ' + radix + ' was not in valid range 2..36');
    }
    return radix;
  }
  function digitOf(char, radix) {
    var tmp$ret$1;
    {
      var tmp0_let = (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(48)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(57)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(48)) : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(90)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(97)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(122)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(97)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(128)) < 0 ? -1 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65313)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65338)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65313)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65345)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65370)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65345)) + 10 | 0 : digitToIntImpl(char);
      {
      }
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_let >= radix ? -1 : tmp0_let;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function toDouble(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        var tmp0_unsafeCast = +tmp$ret$0;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      var tmp1_also = tmp$ret$1;
      {
      }
      {
        if ((isNaN_0(tmp1_also) ? !isNaN_2(_this__u8e3s4) : false) ? true : tmp1_also === 0.0 ? isBlank(_this__u8e3s4) : false) {
          numberFormatError(_this__u8e3s4);
        }
      }
      tmp$ret$2 = tmp1_also;
    }
    return tmp$ret$2;
  }
  function toLong(_this__u8e3s4) {
    var tmp0_elvis_lhs = toLongOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function isNaN_2(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    var tmp0_subject = tmp$ret$1;
    switch (tmp0_subject) {
      case 'nan':
      case '+nan':
      case '-nan':
        return true;
      default:
        return false;
    }
  }
  function toFloat(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = toDouble(_this__u8e3s4);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function toInt(_this__u8e3s4) {
    var tmp0_elvis_lhs = toIntOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toDoubleOrNull(_this__u8e3s4) {
    var tmp$ret$3;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        var tmp0_unsafeCast = +tmp$ret$0;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      var tmp1_takeIf = tmp$ret$1;
      {
      }
      var tmp;
      var tmp$ret$2;
      {
        tmp$ret$2 = !((isNaN_0(tmp1_takeIf) ? !isNaN_2(_this__u8e3s4) : false) ? true : tmp1_takeIf === 0.0 ? isBlank(_this__u8e3s4) : false);
      }
      if (tmp$ret$2) {
        tmp = tmp1_takeIf;
      } else {
        tmp = null;
      }
      tmp$ret$3 = tmp;
    }
    return tmp$ret$3;
  }
  var STRING_CASE_INSENSITIVE_ORDER;
  function nativeLastIndexOf(_this__u8e3s4, str, fromIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.lastIndexOf(str, fromIndex);
  }
  function substring_1(_this__u8e3s4, startIndex, endIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.substring(startIndex, endIndex);
  }
  function substring_2(_this__u8e3s4, startIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.substring(startIndex);
  }
  function compareTo(_this__u8e3s4, other, ignoreCase) {
    init_properties_string_kt_z8k4s7();
    if (ignoreCase) {
      var n1 = _this__u8e3s4.length;
      var n2 = other.length;
      var tmp$ret$0;
      {
        tmp$ret$0 = Math.min(n1, n2);
      }
      var min = tmp$ret$0;
      if (min === 0)
        return n1 - n2 | 0;
      var inductionVariable = 0;
      if (inductionVariable < min)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var thisChar = charSequenceGet(_this__u8e3s4, index);
          var otherChar = charSequenceGet(other, index);
          if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
            thisChar = uppercaseChar(thisChar);
            otherChar = uppercaseChar(otherChar);
            if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
              var tmp$ret$4;
              {
                var tmp0_lowercaseChar = thisChar;
                var tmp$ret$3;
                {
                  var tmp$ret$2;
                  {
                    var tmp$ret$1;
                    {
                      var tmp0_asDynamic = toString_0(tmp0_lowercaseChar);
                      tmp$ret$1 = tmp0_asDynamic;
                    }
                    var tmp1_unsafeCast = tmp$ret$1.toLowerCase();
                    tmp$ret$2 = tmp1_unsafeCast;
                  }
                  tmp$ret$3 = tmp$ret$2;
                }
                tmp$ret$4 = charSequenceGet(tmp$ret$3, 0);
              }
              thisChar = tmp$ret$4;
              var tmp$ret$8;
              {
                var tmp1_lowercaseChar = otherChar;
                var tmp$ret$7;
                {
                  var tmp$ret$6;
                  {
                    var tmp$ret$5;
                    {
                      var tmp0_asDynamic_0 = toString_0(tmp1_lowercaseChar);
                      tmp$ret$5 = tmp0_asDynamic_0;
                    }
                    var tmp1_unsafeCast_0 = tmp$ret$5.toLowerCase();
                    tmp$ret$6 = tmp1_unsafeCast_0;
                  }
                  tmp$ret$7 = tmp$ret$6;
                }
                tmp$ret$8 = charSequenceGet(tmp$ret$7, 0);
              }
              otherChar = tmp$ret$8;
              if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
                return Char__compareTo_impl_ypi4mb(thisChar, otherChar);
              }
            }
          }
        }
         while (inductionVariable < min);
      return n1 - n2 | 0;
    } else {
      return compareTo_0(_this__u8e3s4, other);
    }
  }
  function lowercase_0(_this__u8e3s4) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.toLowerCase();
  }
  function nativeStartsWith(_this__u8e3s4, s, position) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.startsWith(s, position);
  }
  function nativeIndexOf(_this__u8e3s4, str, fromIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.indexOf(str, fromIndex);
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.df_1 = function_0;
  }
  sam$kotlin_Comparator$0.prototype.ef = function (a, b) {
    return this.df_1(a, b);
  };
  sam$kotlin_Comparator$0.prototype.compare = function (a, b) {
    return this.ef(a, b);
  };
  sam$kotlin_Comparator$0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function STRING_CASE_INSENSITIVE_ORDER$lambda() {
    return function (a, b) {
      return compareTo(a, b, true);
    };
  }
  var properties_initialized_string_kt_4g1sj;
  function init_properties_string_kt_z8k4s7() {
    if (properties_initialized_string_kt_4g1sj) {
    } else {
      properties_initialized_string_kt_4g1sj = true;
      var tmp = STRING_CASE_INSENSITIVE_ORDER$lambda();
      STRING_CASE_INSENSITIVE_ORDER = new sam$kotlin_Comparator$0(tmp);
    }
  }
  function regionMatches(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    return regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase);
  }
  function startsWith_0(_this__u8e3s4, prefix, ignoreCase) {
    if (!ignoreCase) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        tmp$ret$1 = tmp$ret$0.startsWith(prefix, 0);
      }
      return tmp$ret$1;
    } else
      return regionMatches(_this__u8e3s4, 0, prefix, 0, prefix.length, ignoreCase);
  }
  function startsWith$default_0(_this__u8e3s4, prefix, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return startsWith_0(_this__u8e3s4, prefix, ignoreCase);
  }
  function isBlank(_this__u8e3s4) {
    var tmp;
    if (charSequenceLength(_this__u8e3s4) === 0) {
      tmp = true;
    } else {
      var tmp$ret$0;
      $l$block_0: {
        var tmp0_all = get_indices_1(_this__u8e3s4);
        var tmp_0;
        if (isInterface(tmp0_all, Collection)) {
          tmp_0 = tmp0_all.i();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var inductionVariable = tmp0_all.h6();
        var last = tmp0_all.i6();
        if (inductionVariable <= last)
          do {
            var element = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$1;
            {
              tmp$ret$1 = isWhitespace(charSequenceGet(_this__u8e3s4, element));
            }
            if (!tmp$ret$1) {
              tmp$ret$0 = false;
              break $l$block_0;
            }
          }
           while (!(element === last));
        tmp$ret$0 = true;
      }
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function nativeIndexOf_0(_this__u8e3s4, ch, fromIndex) {
    var tmp$ret$1;
    {
      var tmp0_nativeIndexOf = toString_0(ch);
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0.indexOf(tmp0_nativeIndexOf, fromIndex);
    }
    return tmp$ret$1;
  }
  function equals_0(_this__u8e3s4, other, ignoreCase) {
    if (_this__u8e3s4 == null)
      return other == null;
    if (other == null)
      return false;
    if (!ignoreCase)
      return _this__u8e3s4 == other;
    if (!(_this__u8e3s4.length === other.length))
      return false;
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var thisChar = charSequenceGet(_this__u8e3s4, index);
        var otherChar = charSequenceGet(other, index);
        if (!equals(thisChar, otherChar, ignoreCase)) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  function addSuppressed(_this__u8e3s4, exception) {
    if (!(_this__u8e3s4 === exception)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        var tmp0_unsafeCast = tmp$ret$0._suppressed;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      var suppressed = tmp$ret$1;
      if (suppressed == null) {
        var tmp$ret$2;
        {
          tmp$ret$2 = _this__u8e3s4;
        }
        tmp$ret$2._suppressed = mutableListOf_0([exception]);
      } else {
        suppressed.c(exception);
      }
    }
  }
  function get_durationAssertionsEnabled() {
    return true;
  }
  var DurationUnit_NANOSECONDS_instance;
  var DurationUnit_MICROSECONDS_instance;
  var DurationUnit_MILLISECONDS_instance;
  var DurationUnit_SECONDS_instance;
  var DurationUnit_MINUTES_instance;
  var DurationUnit_HOURS_instance;
  var DurationUnit_DAYS_instance;
  var DurationUnit_entriesInitialized;
  function DurationUnit_initEntries() {
    if (DurationUnit_entriesInitialized)
      return Unit_getInstance();
    DurationUnit_entriesInitialized = true;
    DurationUnit_NANOSECONDS_instance = new DurationUnit('NANOSECONDS', 0, 1.0);
    DurationUnit_MICROSECONDS_instance = new DurationUnit('MICROSECONDS', 1, 1000.0);
    DurationUnit_MILLISECONDS_instance = new DurationUnit('MILLISECONDS', 2, 1000000.0);
    DurationUnit_SECONDS_instance = new DurationUnit('SECONDS', 3, 1.0E9);
    DurationUnit_MINUTES_instance = new DurationUnit('MINUTES', 4, 6.0E10);
    DurationUnit_HOURS_instance = new DurationUnit('HOURS', 5, 3.6E12);
    DurationUnit_DAYS_instance = new DurationUnit('DAYS', 6, 8.64E13);
  }
  function DurationUnit(name, ordinal, scale) {
    Enum.call(this, name, ordinal);
    this.hf_1 = scale;
  }
  DurationUnit.$metadata$ = classMeta('DurationUnit', undefined, undefined, undefined, undefined, Enum.prototype);
  function convertDurationUnit(value, sourceUnit, targetUnit) {
    var sourceCompareTarget = compareTo_0(sourceUnit.hf_1, targetUnit.hf_1);
    return sourceCompareTarget > 0 ? value * (sourceUnit.hf_1 / targetUnit.hf_1) : sourceCompareTarget < 0 ? value / (targetUnit.hf_1 / sourceUnit.hf_1) : value;
  }
  function convertDurationUnit_0(value, sourceUnit, targetUnit) {
    var sourceCompareTarget = compareTo_0(sourceUnit.hf_1, targetUnit.hf_1);
    var tmp;
    if (sourceCompareTarget > 0) {
      var scale = numberToLong(sourceUnit.hf_1 / targetUnit.hf_1);
      var result = value.y4(scale);
      var tmp_0;
      if (result.x4(scale).equals(value)) {
        tmp_0 = result;
      } else if (value.r(new Long(0, 0)) > 0) {
        Companion_getInstance_15();
        tmp_0 = new Long(-1, 2147483647);
      } else {
        Companion_getInstance_15();
        tmp_0 = new Long(0, -2147483648);
      }
      tmp = tmp_0;
    } else if (sourceCompareTarget < 0) {
      tmp = value.x4(numberToLong(targetUnit.hf_1 / sourceUnit.hf_1));
    } else {
      tmp = value;
    }
    return tmp;
  }
  function convertDurationUnitOverflow(value, sourceUnit, targetUnit) {
    var sourceCompareTarget = compareTo_0(sourceUnit.hf_1, targetUnit.hf_1);
    return sourceCompareTarget > 0 ? value.y4(numberToLong(sourceUnit.hf_1 / targetUnit.hf_1)) : sourceCompareTarget < 0 ? value.x4(numberToLong(targetUnit.hf_1 / sourceUnit.hf_1)) : value;
  }
  function DurationUnit_NANOSECONDS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_NANOSECONDS_instance;
  }
  function DurationUnit_MICROSECONDS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_MICROSECONDS_instance;
  }
  function DurationUnit_MILLISECONDS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_MILLISECONDS_instance;
  }
  function DurationUnit_SECONDS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_SECONDS_instance;
  }
  function DurationUnit_MINUTES_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_MINUTES_instance;
  }
  function DurationUnit_HOURS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_HOURS_instance;
  }
  function DurationUnit_DAYS_getInstance() {
    DurationUnit_initEntries();
    return DurationUnit_DAYS_instance;
  }
  function _Char___init__impl__6a9atx(value) {
    return value;
  }
  function _get_value__a43j40_0($this) {
    return $this;
  }
  function _Char___init__impl__6a9atx_0(code) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UShort___get_data__impl__g0245(code) & 65535;
    }
    var tmp = _Char___init__impl__6a9atx(tmp$ret$0);
    return tmp;
  }
  function Char__compareTo_impl_ypi4mb($this, other) {
    return _get_value__a43j40_0($this) - _get_value__a43j40_0(other) | 0;
  }
  function Char__compareTo_impl_ypi4mb_0($this, other) {
    var tmp = $this.x_1;
    return Char__compareTo_impl_ypi4mb(tmp, other instanceof Char_0 ? other.x_1 : THROW_CCE());
  }
  function Char__minus_impl_a2frrh($this, other) {
    return _get_value__a43j40_0($this) - _get_value__a43j40_0(other) | 0;
  }
  function Char__rangeTo_impl_tkncvp($this, other) {
    return new CharRange($this, other);
  }
  function Char__toInt_impl_vasixd($this) {
    return _get_value__a43j40_0($this);
  }
  function Char__equals_impl_x6719k($this, other) {
    if (!(other instanceof Char_0))
      return false;
    return _get_value__a43j40_0($this) === _get_value__a43j40_0(other.x_1);
  }
  function Char__hashCode_impl_otmys($this) {
    return _get_value__a43j40_0($this);
  }
  function toString_0($this) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = String.fromCharCode(_get_value__a43j40_0($this));
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function Companion_13() {
    Companion_instance_13 = this;
    this.if_1 = _Char___init__impl__6a9atx(0);
    this.jf_1 = _Char___init__impl__6a9atx(65535);
    this.kf_1 = _Char___init__impl__6a9atx(55296);
    this.lf_1 = _Char___init__impl__6a9atx(56319);
    this.mf_1 = _Char___init__impl__6a9atx(56320);
    this.nf_1 = _Char___init__impl__6a9atx(57343);
    this.of_1 = _Char___init__impl__6a9atx(55296);
    this.pf_1 = _Char___init__impl__6a9atx(57343);
    this.qf_1 = 2;
    this.rf_1 = 16;
  }
  Companion_13.$metadata$ = objectMeta('Companion');
  var Companion_instance_13;
  function Companion_getInstance_13() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function Char_0(value) {
    Companion_getInstance_13();
    this.x_1 = value;
  }
  Char_0.prototype.sf = function (other) {
    return Char__compareTo_impl_ypi4mb(this.x_1, other);
  };
  Char_0.prototype.f6 = function (other) {
    return Char__compareTo_impl_ypi4mb_0(this, other);
  };
  Char_0.prototype.equals = function (other) {
    return Char__equals_impl_x6719k(this.x_1, other);
  };
  Char_0.prototype.hashCode = function () {
    return Char__hashCode_impl_otmys(this.x_1);
  };
  Char_0.prototype.toString = function () {
    return toString_0(this.x_1);
  };
  Char_0.$metadata$ = classMeta('Char', [Comparable]);
  function Iterable_0() {
  }
  Iterable_0.$metadata$ = interfaceMeta('Iterable');
  function List() {
  }
  List.$metadata$ = interfaceMeta('List', [Collection]);
  function MutableSet() {
  }
  MutableSet.$metadata$ = interfaceMeta('MutableSet', [Set, MutableCollection]);
  function Entry() {
  }
  Entry.$metadata$ = interfaceMeta('Entry');
  function Map() {
  }
  Map.$metadata$ = interfaceMeta('Map');
  function Collection() {
  }
  Collection.$metadata$ = interfaceMeta('Collection', [Iterable_0]);
  function MutableEntry() {
  }
  MutableEntry.$metadata$ = interfaceMeta('MutableEntry', [Entry]);
  function MutableMap() {
  }
  MutableMap.$metadata$ = interfaceMeta('MutableMap', [Map]);
  function MutableList() {
  }
  MutableList.$metadata$ = interfaceMeta('MutableList', [List, MutableCollection]);
  function Set() {
  }
  Set.$metadata$ = interfaceMeta('Set', [Collection]);
  function MutableCollection() {
  }
  MutableCollection.$metadata$ = interfaceMeta('MutableCollection', [Collection, MutableIterable]);
  function MutableIterable() {
  }
  MutableIterable.$metadata$ = interfaceMeta('MutableIterable', [Iterable_0]);
  function Companion_14() {
    Companion_instance_14 = this;
  }
  Companion_14.$metadata$ = objectMeta('Companion');
  var Companion_instance_14;
  function Companion_getInstance_14() {
    if (Companion_instance_14 == null)
      new Companion_14();
    return Companion_instance_14;
  }
  function Enum(name, ordinal) {
    Companion_getInstance_14();
    this.l4_1 = name;
    this.m4_1 = ordinal;
  }
  Enum.prototype.tf = function () {
    return this.l4_1;
  };
  Enum.prototype.u4 = function () {
    return this.m4_1;
  };
  Enum.prototype.n4 = function (other) {
    return compareTo_0(this.m4_1, other.m4_1);
  };
  Enum.prototype.f6 = function (other) {
    return this.n4(other instanceof Enum ? other : THROW_CCE());
  };
  Enum.prototype.equals = function (other) {
    return this === other;
  };
  Enum.prototype.hashCode = function () {
    return identityHashCode(this);
  };
  Enum.prototype.toString = function () {
    return this.l4_1;
  };
  Enum.$metadata$ = classMeta('Enum', [Comparable]);
  function arrayOf(elements) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = elements;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function toString_1(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_2(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
  }
  function charArrayOf(elements) {
    return elements;
  }
  function intArrayOf(elements) {
    return elements;
  }
  function plus_2(_this__u8e3s4, other) {
    var tmp2_safe_receiver = _this__u8e3s4;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : toString_2(tmp2_safe_receiver);
    var tmp = tmp3_elvis_lhs == null ? 'null' : tmp3_elvis_lhs;
    var tmp0_safe_receiver = other;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_2(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
  }
  function fillArrayVal(array, initValue) {
    var inductionVariable = 0;
    var last = array.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        array[i] = initValue;
      }
       while (!(i === last));
    return array;
  }
  function arrayIterator(array) {
    return new arrayIterator$1(array);
  }
  function booleanArray(size) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = fillArrayVal(Array(size), false);
        tmp0_withType.$type$ = 'BooleanArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function charArray(size) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = new Uint16Array(size);
        tmp0_withType.$type$ = 'CharArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function longArray(size) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = fillArrayVal(Array(size), new Long(0, 0));
        tmp0_withType.$type$ = 'LongArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function charArrayOf_0(arr) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = new Uint16Array(arr);
        tmp0_withType.$type$ = 'CharArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function arrayIterator$1($array) {
    this.vf_1 = $array;
    this.uf_1 = 0;
  }
  arrayIterator$1.prototype.e = function () {
    return !(this.uf_1 === this.vf_1.length);
  };
  arrayIterator$1.prototype.f = function () {
    var tmp;
    if (!(this.uf_1 === this.vf_1.length)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.uf_1;
      tmp0_this.uf_1 = tmp1 + 1 | 0;
      tmp = this.vf_1[tmp1];
    } else {
      throw NoSuchElementException_init_$Create$_0('' + this.uf_1);
    }
    return tmp;
  };
  arrayIterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function get_buf() {
    init_properties_bitUtils_kt_cxtw9i();
    return buf;
  }
  var buf;
  function get_bufFloat64() {
    init_properties_bitUtils_kt_cxtw9i();
    return bufFloat64;
  }
  var bufFloat64;
  var bufFloat32;
  function get_bufInt32() {
    init_properties_bitUtils_kt_cxtw9i();
    return bufInt32;
  }
  var bufInt32;
  function get_lowIndex() {
    init_properties_bitUtils_kt_cxtw9i();
    return lowIndex;
  }
  var lowIndex;
  function get_highIndex() {
    init_properties_bitUtils_kt_cxtw9i();
    return highIndex;
  }
  var highIndex;
  function getNumberHashCode(obj) {
    init_properties_bitUtils_kt_cxtw9i();
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = jsBitwiseOr(obj, 0);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    if (tmp$ret$1 === obj) {
      return numberToInt(obj);
    }
    get_bufFloat64()[0] = obj;
    return imul(get_bufInt32()[get_highIndex()], 31) + get_bufInt32()[get_lowIndex()] | 0;
  }
  var properties_initialized_bitUtils_kt_i2bo3e;
  function init_properties_bitUtils_kt_cxtw9i() {
    if (properties_initialized_bitUtils_kt_i2bo3e) {
    } else {
      properties_initialized_bitUtils_kt_i2bo3e = true;
      buf = new ArrayBuffer(8);
      var tmp$ret$1;
      {
        var tmp0_unsafeCast = new Float64Array(get_buf());
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_unsafeCast;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      bufFloat64 = tmp$ret$1;
      var tmp$ret$1_0;
      {
        var tmp0_unsafeCast_0 = new Float32Array(get_buf());
        var tmp$ret$0_0;
        {
          tmp$ret$0_0 = tmp0_unsafeCast_0;
        }
        tmp$ret$1_0 = tmp$ret$0_0;
      }
      bufFloat32 = tmp$ret$1_0;
      var tmp$ret$1_1;
      {
        var tmp0_unsafeCast_1 = new Int32Array(get_buf());
        var tmp$ret$0_1;
        {
          tmp$ret$0_1 = tmp0_unsafeCast_1;
        }
        tmp$ret$1_1 = tmp$ret$0_1;
      }
      bufInt32 = tmp$ret$1_1;
      var tmp$ret$1_2;
      {
        {
        }
        var tmp$ret$0_2;
        {
          get_bufFloat64()[0] = -1.0;
          tmp$ret$0_2 = !(get_bufInt32()[0] === 0) ? 1 : 0;
        }
        tmp$ret$1_2 = tmp$ret$0_2;
      }
      lowIndex = tmp$ret$1_2;
      highIndex = 1 - get_lowIndex() | 0;
    }
  }
  function charSequenceGet(a, index) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$4;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = a;
          }
          var tmp0_unsafeCast = tmp$ret$0.charCodeAt(index);
          tmp$ret$1 = tmp0_unsafeCast;
        }
        var tmp1_Char = tmp$ret$1;
        var tmp_0;
        var tmp$ret$2;
        {
          Companion_getInstance_13();
          var tmp0__get_code__88qj9g = _Char___init__impl__6a9atx(0);
          tmp$ret$2 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
        }
        if (tmp1_Char < tmp$ret$2) {
          tmp_0 = true;
        } else {
          var tmp$ret$3;
          {
            Companion_getInstance_13();
            var tmp1__get_code__adl84j = _Char___init__impl__6a9atx(65535);
            tmp$ret$3 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
          }
          tmp_0 = tmp1_Char > tmp$ret$3;
        }
        if (tmp_0) {
          throw IllegalArgumentException_init_$Create$_0('Invalid Char code: ' + tmp1_Char);
        }
        tmp$ret$4 = numberToChar(tmp1_Char);
      }
      tmp = tmp$ret$4;
    } else {
      tmp = a.e8(index);
    }
    return tmp;
  }
  function isString(a) {
    return typeof a === 'string';
  }
  function charSequenceLength(a) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = a;
        }
        var tmp0_unsafeCast = tmp$ret$0.length;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = a.d8();
    }
    return tmp;
  }
  function charSequenceSubSequence(a, startIndex, endIndex) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = a;
        }
        var tmp0_unsafeCast = tmp$ret$0.substring(startIndex, endIndex);
        tmp$ret$1 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = a.f8(startIndex, endIndex);
    }
    return tmp;
  }
  function arrayToString(array) {
    return joinToString$default(array, ', ', '[', ']', 0, null, arrayToString$lambda(), 24, null);
  }
  function contentEqualsInternal(_this__u8e3s4, other) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = other;
    }
    var b = tmp$ret$1;
    if (a === b)
      return true;
    if (((a == null ? true : b == null) ? true : !isArrayish(b)) ? true : a.length != b.length)
      return false;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals_1(a[i], b[i])) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  function contentHashCodeInternal(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    if (a == null)
      return 0;
    var result = 1;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = imul(result, 31) + hashCode_0(a[i]) | 0;
      }
       while (inductionVariable < last);
    return result;
  }
  function arrayToString$lambda() {
    return function (it) {
      return toString_2(it);
    };
  }
  function compareTo_0(a, b) {
    var tmp0_subject = typeof a;
    var tmp;
    switch (tmp0_subject) {
      case 'number':
        var tmp_0;
        if (typeof b === 'number') {
          tmp_0 = doubleCompareTo(a, b);
        } else {
          if (b instanceof Long) {
            tmp_0 = doubleCompareTo(a, b.uc());
          } else {
            tmp_0 = primitiveCompareTo(a, b);
          }
        }

        tmp = tmp_0;
        break;
      case 'string':
      case 'boolean':
        tmp = primitiveCompareTo(a, b);
        break;
      default:
        tmp = compareToDoNotIntrinsicify(a, b);
        break;
    }
    return tmp;
  }
  function doubleCompareTo(a, b) {
    var tmp;
    if (a < b) {
      tmp = -1;
    } else if (a > b) {
      tmp = 1;
    } else if (a === b) {
      var tmp_0;
      if (a !== 0) {
        tmp_0 = 0;
      } else {
        var tmp$ret$0;
        {
          tmp$ret$0 = 1;
        }
        var ia = tmp$ret$0 / a;
        var tmp_1;
        var tmp$ret$1;
        {
          tmp$ret$1 = 1;
        }
        if (ia === tmp$ret$1 / b) {
          tmp_1 = 0;
        } else {
          if (ia < 0) {
            tmp_1 = -1;
          } else {
            tmp_1 = 1;
          }
        }
        tmp_0 = tmp_1;
      }
      tmp = tmp_0;
    } else if (a !== a) {
      tmp = b !== b ? 0 : 1;
    } else {
      tmp = -1;
    }
    return tmp;
  }
  function primitiveCompareTo(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }
  function compareToDoNotIntrinsicify(a, b) {
    return a.f6(b);
  }
  function identityHashCode(obj) {
    return getObjectHashCode(obj);
  }
  function getObjectHashCode(obj) {
    if (!jsIn('kotlinHashCodeValue$', obj)) {
      var hash = jsBitwiseOr(Math.random() * 4.294967296E9, 0);
      var descriptor = new Object();
      descriptor.value = hash;
      descriptor.enumerable = false;
      Object.defineProperty(obj, 'kotlinHashCodeValue$', descriptor);
    }
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = obj['kotlinHashCodeValue$'];
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function toString_2(o) {
    var tmp;
    if (o == null) {
      tmp = 'null';
    } else if (isArrayish(o)) {
      tmp = '[...]';
    } else {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = o.toString();
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function equals_1(obj1, obj2) {
    if (obj1 == null) {
      return obj2 == null;
    }
    if (obj2 == null) {
      return false;
    }
    if (typeof obj1 === 'object' ? typeof obj1.equals === 'function' : false) {
      return obj1.equals(obj2);
    }
    if (obj1 !== obj1) {
      return obj2 !== obj2;
    }
    if (typeof obj1 === 'number' ? typeof obj2 === 'number' : false) {
      var tmp;
      if (obj1 === obj2) {
        var tmp_0;
        if (obj1 !== 0) {
          tmp_0 = true;
        } else {
          var tmp$ret$0;
          {
            tmp$ret$0 = 1;
          }
          var tmp_1 = tmp$ret$0 / obj1;
          var tmp$ret$1;
          {
            tmp$ret$1 = 1;
          }
          tmp_0 = tmp_1 === tmp$ret$1 / obj2;
        }
        tmp = tmp_0;
      } else {
        tmp = false;
      }
      return tmp;
    }
    return obj1 === obj2;
  }
  function hashCode_0(obj) {
    if (obj == null)
      return 0;
    var tmp0_subject = typeof obj;
    var tmp;
    switch (tmp0_subject) {
      case 'object':
        tmp = 'function' === typeof obj.hashCode ? obj.hashCode() : getObjectHashCode(obj);
        break;
      case 'function':
        tmp = getObjectHashCode(obj);
        break;
      case 'number':
        tmp = getNumberHashCode(obj);
        break;
      case 'boolean':
        var tmp_0;
        var tmp$ret$0;
        {
          tmp$ret$0 = obj;
        }

        if (tmp$ret$0) {
          tmp_0 = 1;
        } else {
          tmp_0 = 0;
        }

        tmp = tmp_0;
        break;
      default:
        tmp = getStringHashCode(String(obj));
        break;
    }
    return tmp;
  }
  function getStringHashCode(str) {
    var hash = 0;
    var length = str.length;
    var inductionVariable = 0;
    var last = length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          tmp$ret$0 = str;
        }
        var code = tmp$ret$0.charCodeAt(i);
        hash = imul(hash, 31) + code | 0;
      }
       while (!(i === last));
    return hash;
  }
  function anyToString(o) {
    return Object.prototype.toString.call(o);
  }
  function boxIntrinsic(x) {
    throw IllegalStateException_init_$Create$('Should be lowered');
  }
  function unboxIntrinsic(x) {
    throw IllegalStateException_init_$Create$('Should be lowered');
  }
  function captureStack(instance, constructorFunction) {
    if (Error.captureStackTrace != null) {
      Error.captureStackTrace(instance, constructorFunction);
    } else {
      var tmp$ret$0;
      {
        tmp$ret$0 = instance;
      }
      tmp$ret$0.stack = (new Error()).stack;
    }
  }
  function extendThrowable(this_, message, cause) {
    Error.call(this_);
    setPropertiesToThrowableInstance(this_, message, cause);
  }
  function setPropertiesToThrowableInstance(this_, message, cause) {
    if (!hasOwnPrototypeProperty(this_, 'message')) {
      var tmp;
      if (message == null) {
        var tmp_0;
        if (!(message === null)) {
          var tmp0_safe_receiver = cause;
          var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
          tmp_0 = tmp1_elvis_lhs == null ? undefined : tmp1_elvis_lhs;
        } else {
          tmp_0 = undefined;
        }
        tmp = tmp_0;
      } else {
        tmp = message;
      }
      this_.message = tmp;
    }
    if (!hasOwnPrototypeProperty(this_, 'cause')) {
      this_.cause = cause;
    }
    this_.name = Object.getPrototypeOf(this_).constructor.name;
  }
  function hasOwnPrototypeProperty(o, name) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = Object.getPrototypeOf(o).hasOwnProperty(name);
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function returnIfSuspended(argument, $cont) {
    return (argument == null ? true : isObject(argument)) ? argument : THROW_CCE();
  }
  function ensureNotNull(v) {
    var tmp;
    if (v == null) {
      THROW_NPE();
    } else {
      tmp = v;
    }
    return tmp;
  }
  function THROW_NPE() {
    throw NullPointerException_init_$Create$();
  }
  function noWhenBranchMatchedException() {
    throw NoWhenBranchMatchedException_init_$Create$();
  }
  function THROW_CCE() {
    throw ClassCastException_init_$Create$();
  }
  function throwUninitializedPropertyAccessException(name) {
    throw UninitializedPropertyAccessException_init_$Create$('lateinit property ' + name + ' has not been initialized');
  }
  function throwKotlinNothingValueException() {
    throw KotlinNothingValueException_init_$Create$();
  }
  function lazy(mode, initializer) {
    return new UnsafeLazyImpl(initializer);
  }
  function lazy_0(initializer) {
    return new UnsafeLazyImpl(initializer);
  }
  function emptyArray() {
    return [];
  }
  function fillFrom(src, dst) {
    var srcLen = src.length;
    var dstLen = dst.length;
    var index = 0;
    var tmp$ret$0;
    {
      tmp$ret$0 = dst;
    }
    var arr = tmp$ret$0;
    while (index < srcLen ? index < dstLen : false) {
      var tmp = index;
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      arr[tmp] = src[tmp0];
    }
    return dst;
  }
  function arrayCopyResize(source, newSize, defaultValue) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = source.slice(0, newSize);
      tmp$ret$0 = tmp0_unsafeCast;
    }
    var result = tmp$ret$0;
    {
      if (source.$type$ !== undefined) {
        result.$type$ = source.$type$;
      }
    }
    var index = source.length;
    if (newSize > index) {
      var tmp$ret$1;
      {
        tmp$ret$1 = result;
      }
      tmp$ret$1.length = newSize;
      while (index < newSize) {
        var tmp0 = index;
        index = tmp0 + 1 | 0;
        result[tmp0] = defaultValue;
      }
    }
    return result;
  }
  function copyArrayType(from, to) {
    if (from.$type$ !== undefined) {
      to.$type$ = from.$type$;
    }
  }
  function Companion_15() {
    Companion_instance_15 = this;
    this.wf_1 = new Long(0, -2147483648);
    this.xf_1 = new Long(-1, 2147483647);
    this.yf_1 = 8;
    this.zf_1 = 64;
  }
  Companion_15.$metadata$ = objectMeta('Companion');
  var Companion_instance_15;
  function Companion_getInstance_15() {
    if (Companion_instance_15 == null)
      new Companion_15();
    return Companion_instance_15;
  }
  function Long(low, high) {
    Companion_getInstance_15();
    Number_0.call(this);
    this.p_1 = low;
    this.q_1 = high;
  }
  Long.prototype.r = function (other) {
    return compare(this, other);
  };
  Long.prototype.f6 = function (other) {
    return this.r(other instanceof Long ? other : THROW_CCE());
  };
  Long.prototype.ag = function (other) {
    return this.z4(toLong_0(other));
  };
  Long.prototype.z4 = function (other) {
    return add(this, other);
  };
  Long.prototype.bg = function (other) {
    return this.a5(toLong_0(other));
  };
  Long.prototype.a5 = function (other) {
    return subtract(this, other);
  };
  Long.prototype.cg = function (other) {
    return this.y4(toLong_0(other));
  };
  Long.prototype.y4 = function (other) {
    return multiply(this, other);
  };
  Long.prototype.dg = function (other) {
    return this.x4(toLong_0(other));
  };
  Long.prototype.x4 = function (other) {
    return divide(this, other);
  };
  Long.prototype.eg = function (other) {
    return this.z5(toLong_0(other));
  };
  Long.prototype.z5 = function (other) {
    return modulo(this, other);
  };
  Long.prototype.fg = function () {
    return this.z4(new Long(1, 0));
  };
  Long.prototype.gg = function () {
    return this.a5(new Long(1, 0));
  };
  Long.prototype.w4 = function () {
    return this.hg().z4(new Long(1, 0));
  };
  Long.prototype.g6 = function (bitCount) {
    return shiftLeft(this, bitCount);
  };
  Long.prototype.r5 = function (bitCount) {
    return shiftRight(this, bitCount);
  };
  Long.prototype.c8 = function (bitCount) {
    return shiftRightUnsigned(this, bitCount);
  };
  Long.prototype.o7 = function (other) {
    return new Long(this.p_1 & other.p_1, this.q_1 & other.q_1);
  };
  Long.prototype.ig = function (other) {
    return new Long(this.p_1 | other.p_1, this.q_1 | other.q_1);
  };
  Long.prototype.x5 = function (other) {
    return new Long(this.p_1 ^ other.p_1, this.q_1 ^ other.q_1);
  };
  Long.prototype.hg = function () {
    return new Long(~this.p_1, ~this.q_1);
  };
  Long.prototype.jg = function () {
    return toByte(this.p_1);
  };
  Long.prototype.kg = function () {
    return toShort(this.p_1);
  };
  Long.prototype.s5 = function () {
    return this.p_1;
  };
  Long.prototype.uc = function () {
    return toNumber(this);
  };
  Long.prototype.valueOf = function () {
    return this.uc();
  };
  Long.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Long) {
      tmp = equalsLong(this, other);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Long.prototype.hashCode = function () {
    return hashCode_1(this);
  };
  Long.prototype.toString = function () {
    return toStringImpl(this, 10);
  };
  Long.$metadata$ = classMeta('Long', [Comparable], undefined, undefined, undefined, Number_0.prototype);
  function get_ZERO() {
    init_properties_longjs_kt_ttk8rv();
    return ZERO;
  }
  var ZERO;
  function get_ONE() {
    init_properties_longjs_kt_ttk8rv();
    return ONE;
  }
  var ONE;
  function get_NEG_ONE() {
    init_properties_longjs_kt_ttk8rv();
    return NEG_ONE;
  }
  var NEG_ONE;
  function get_MAX_VALUE() {
    init_properties_longjs_kt_ttk8rv();
    return MAX_VALUE;
  }
  var MAX_VALUE;
  function get_MIN_VALUE() {
    init_properties_longjs_kt_ttk8rv();
    return MIN_VALUE;
  }
  var MIN_VALUE;
  function get_TWO_PWR_24_() {
    init_properties_longjs_kt_ttk8rv();
    return TWO_PWR_24_;
  }
  var TWO_PWR_24_;
  function compare(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (equalsLong(_this__u8e3s4, other)) {
      return 0;
    }
    var thisNeg = isNegative(_this__u8e3s4);
    var otherNeg = isNegative(other);
    return (thisNeg ? !otherNeg : false) ? -1 : (!thisNeg ? otherNeg : false) ? 1 : isNegative(subtract(_this__u8e3s4, other)) ? -1 : 1;
  }
  function add(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    var a48 = _this__u8e3s4.q_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.q_1 & 65535;
    var a16 = _this__u8e3s4.p_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.p_1 & 65535;
    var b48 = other.q_1 >>> 16 | 0;
    var b32 = other.q_1 & 65535;
    var b16 = other.p_1 >>> 16 | 0;
    var b00 = other.p_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + (a00 + b00 | 0) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + (a16 + b16 | 0) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + (a32 + b32 | 0) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (a48 + b48 | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function subtract(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return add(_this__u8e3s4, other.w4());
  }
  function multiply(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    } else if (isZero(other)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      return isOdd(other) ? get_MIN_VALUE() : get_ZERO();
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return isOdd(_this__u8e3s4) ? get_MIN_VALUE() : get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = multiply(negate(_this__u8e3s4), negate(other));
      } else {
        tmp = negate(multiply(negate(_this__u8e3s4), other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(multiply(_this__u8e3s4, negate(other)));
    }
    if (lessThan(_this__u8e3s4, get_TWO_PWR_24_()) ? lessThan(other, get_TWO_PWR_24_()) : false) {
      return fromNumber(toNumber(_this__u8e3s4) * toNumber(other));
    }
    var a48 = _this__u8e3s4.q_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.q_1 & 65535;
    var a16 = _this__u8e3s4.p_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.p_1 & 65535;
    var b48 = other.q_1 >>> 16 | 0;
    var b32 = other.q_1 & 65535;
    var b16 = other.p_1 >>> 16 | 0;
    var b00 = other.p_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + imul(a00, b00) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + imul(a16, b00) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c16 = c16 + imul(a00, b16) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + imul(a32, b00) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a16, b16) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a00, b32) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (((imul(a48, b00) + imul(a32, b16) | 0) + imul(a16, b32) | 0) + imul(a00, b48) | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function divide(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (isZero(other)) {
      throw Exception_init_$Create$('division by zero');
    } else if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      if (equalsLong(other, get_ONE()) ? true : equalsLong(other, get_NEG_ONE())) {
        return get_MIN_VALUE();
      } else if (equalsLong(other, get_MIN_VALUE())) {
        return get_ONE();
      } else {
        var halfThis = shiftRight(_this__u8e3s4, 1);
        var approx = shiftLeft(halfThis.x4(other), 1);
        if (equalsLong(approx, get_ZERO())) {
          return isNegative(other) ? get_ONE() : get_NEG_ONE();
        } else {
          var rem = subtract(_this__u8e3s4, multiply(other, approx));
          return add(approx, rem.x4(other));
        }
      }
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = negate(_this__u8e3s4).x4(negate(other));
      } else {
        tmp = negate(negate(_this__u8e3s4).x4(other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(_this__u8e3s4.x4(negate(other)));
    }
    var res = get_ZERO();
    var rem_0 = _this__u8e3s4;
    while (greaterThanOrEqual(rem_0, other)) {
      var approxDouble = toNumber(rem_0) / toNumber(other);
      var approx2 = Math.max(1.0, Math.floor(approxDouble));
      var log2 = Math.ceil(Math.log(approx2) / Math.LN2);
      var delta = log2 <= 48.0 ? 1.0 : Math.pow(2.0, log2 - 48);
      var approxRes = fromNumber(approx2);
      var approxRem = multiply(approxRes, other);
      while (isNegative(approxRem) ? true : greaterThan(approxRem, rem_0)) {
        approx2 = approx2 - delta;
        approxRes = fromNumber(approx2);
        approxRem = multiply(approxRes, other);
      }
      if (isZero(approxRes)) {
        approxRes = get_ONE();
      }
      res = add(res, approxRes);
      rem_0 = subtract(rem_0, approxRem);
    }
    return res;
  }
  function modulo(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return subtract(_this__u8e3s4, multiply(_this__u8e3s4.x4(other), other));
  }
  function shiftLeft(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.p_1 << numBits_0, _this__u8e3s4.q_1 << numBits_0 | (_this__u8e3s4.p_1 >>> (32 - numBits_0 | 0) | 0));
      } else {
        return new Long(0, _this__u8e3s4.p_1 << (numBits_0 - 32 | 0));
      }
    }
  }
  function shiftRight(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.p_1 >>> numBits_0 | 0 | _this__u8e3s4.q_1 << (32 - numBits_0 | 0), _this__u8e3s4.q_1 >> numBits_0);
      } else {
        return new Long(_this__u8e3s4.q_1 >> (numBits_0 - 32 | 0), _this__u8e3s4.q_1 >= 0 ? 0 : -1);
      }
    }
  }
  function shiftRightUnsigned(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.p_1 >>> numBits_0 | 0 | _this__u8e3s4.q_1 << (32 - numBits_0 | 0), _this__u8e3s4.q_1 >>> numBits_0 | 0);
      } else {
        var tmp;
        if (numBits_0 === 32) {
          tmp = new Long(_this__u8e3s4.q_1, 0);
        } else {
          tmp = new Long(_this__u8e3s4.q_1 >>> (numBits_0 - 32 | 0) | 0, 0);
        }
        return tmp;
      }
    }
  }
  function toNumber(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.q_1 * 4.294967296E9 + getLowBitsUnsigned(_this__u8e3s4);
  }
  function equalsLong(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.q_1 === other.q_1 ? _this__u8e3s4.p_1 === other.p_1 : false;
  }
  function hashCode_1(l) {
    init_properties_longjs_kt_ttk8rv();
    return l.p_1 ^ l.q_1;
  }
  function toStringImpl(_this__u8e3s4, radix) {
    init_properties_longjs_kt_ttk8rv();
    if (radix < 2 ? true : 36 < radix) {
      throw Exception_init_$Create$('radix out of range: ' + radix);
    }
    if (isZero(_this__u8e3s4)) {
      return '0';
    }
    if (isNegative(_this__u8e3s4)) {
      if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
        var radixLong = fromInt(radix);
        var div = _this__u8e3s4.x4(radixLong);
        var rem = subtract(multiply(div, radixLong), _this__u8e3s4).s5();
        var tmp = toStringImpl(div, radix);
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = rem;
          }
          var tmp0_unsafeCast = tmp$ret$0.toString(radix);
          tmp$ret$1 = tmp0_unsafeCast;
        }
        return tmp + tmp$ret$1;
      } else {
        return '-' + toStringImpl(negate(_this__u8e3s4), radix);
      }
    }
    var digitsPerTime = radix === 2 ? 31 : radix <= 10 ? 9 : radix <= 21 ? 7 : radix <= 35 ? 6 : 5;
    var radixToPower = fromNumber(Math.pow(radix, digitsPerTime));
    var rem_0 = _this__u8e3s4;
    var result = '';
    while (true) {
      var remDiv = rem_0.x4(radixToPower);
      var intval = subtract(rem_0, multiply(remDiv, radixToPower)).s5();
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          tmp$ret$2 = intval;
        }
        var tmp1_unsafeCast = tmp$ret$2.toString(radix);
        tmp$ret$3 = tmp1_unsafeCast;
      }
      var digits = tmp$ret$3;
      rem_0 = remDiv;
      if (isZero(rem_0)) {
        return digits + result;
      } else {
        while (digits.length < digitsPerTime) {
          digits = '0' + digits;
        }
        result = digits + result;
      }
    }
  }
  function fromInt(value) {
    init_properties_longjs_kt_ttk8rv();
    return new Long(value, value < 0 ? -1 : 0);
  }
  function isNegative(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.q_1 < 0;
  }
  function isZero(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.q_1 === 0 ? _this__u8e3s4.p_1 === 0 : false;
  }
  function isOdd(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return (_this__u8e3s4.p_1 & 1) === 1;
  }
  function negate(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.w4();
  }
  function lessThan(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) < 0;
  }
  function fromNumber(value) {
    init_properties_longjs_kt_ttk8rv();
    if (isNaN_0(value)) {
      return get_ZERO();
    } else if (value <= -9.223372036854776E18) {
      return get_MIN_VALUE();
    } else if (value + 1 >= 9.223372036854776E18) {
      return get_MAX_VALUE();
    } else if (value < 0.0) {
      return negate(fromNumber(-value));
    } else {
      var twoPwr32 = 4.294967296E9;
      return new Long(jsBitwiseOr(value % twoPwr32, 0), jsBitwiseOr(value / twoPwr32, 0));
    }
  }
  function greaterThan(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) > 0;
  }
  function greaterThanOrEqual(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) >= 0;
  }
  function getLowBitsUnsigned(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.p_1 >= 0 ? _this__u8e3s4.p_1 : 4.294967296E9 + _this__u8e3s4.p_1;
  }
  var properties_initialized_longjs_kt_5aju7t;
  function init_properties_longjs_kt_ttk8rv() {
    if (properties_initialized_longjs_kt_5aju7t) {
    } else {
      properties_initialized_longjs_kt_5aju7t = true;
      ZERO = fromInt(0);
      ONE = fromInt(1);
      NEG_ONE = fromInt(-1);
      MAX_VALUE = new Long(-1, 2147483647);
      MIN_VALUE = new Long(0, -2147483648);
      TWO_PWR_24_ = fromInt(16777216);
    }
  }
  function withType(type, array) {
    array.$type$ = type;
    return array;
  }
  function toByte(a) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = a << 24 >> 24;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function numberToInt(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a.s5();
    } else {
      tmp = doubleToInt(a);
    }
    return tmp;
  }
  function doubleToInt(a) {
    return a > 2.147483647E9 ? 2147483647 : a < -2.147483648E9 ? -2147483648 : jsBitwiseOr(a, 0);
  }
  function toShort(a) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = a << 16 >> 16;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function numberToLong(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a;
    } else {
      tmp = fromNumber(a);
    }
    return tmp;
  }
  function numberToChar(a) {
    var tmp$ret$0;
    {
      var tmp0_toUShort = numberToInt(a);
      tmp$ret$0 = _UShort___init__impl__jigrne(toShort(tmp0_toUShort));
    }
    return _Char___init__impl__6a9atx_0(tmp$ret$0);
  }
  function toLong_0(a) {
    return fromInt(a);
  }
  function numberRangeToNumber(start, endInclusive) {
    return new IntRange(start, endInclusive);
  }
  function get_propertyRefClassMetadataCache() {
    init_properties_reflectRuntime_kt_yf9l8h();
    return propertyRefClassMetadataCache;
  }
  var propertyRefClassMetadataCache;
  function metadataObject() {
    init_properties_reflectRuntime_kt_yf9l8h();
    var undef = undefined;
    return classMeta(undef, undef, undef, undef, undef, undef);
  }
  function getPropertyCallableRef(name, paramCount, type, getter, setter) {
    init_properties_reflectRuntime_kt_yf9l8h();
    getter.get = getter;
    getter.set = setter;
    getter.callableName = name;
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = getPropertyRefClass(getter, getKPropMetadata(paramCount, setter, type));
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function getPropertyRefClass(obj, metadata) {
    init_properties_reflectRuntime_kt_yf9l8h();
    obj.$metadata$ = metadata;
    obj.constructor = obj;
    return obj;
  }
  function getKPropMetadata(paramCount, setter, type) {
    init_properties_reflectRuntime_kt_yf9l8h();
    var mdata = get_propertyRefClassMetadataCache()[paramCount][setter == null ? 0 : 1];
    if (mdata.interfaces.length === 0) {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = mdata.interfaces;
        tmp$ret$0 = tmp0_asDynamic;
      }
      tmp$ret$0.push(type);
      if (mdata.interfacesCache == null) {
        mdata.interfacesCache = generateInterfaceCache();
      } else {
        ensureNotNull(mdata.interfacesCache).isComplete = false;
      }
      extendCacheWithSingle(ensureNotNull(mdata.interfacesCache), type);
    }
    return mdata;
  }
  var properties_initialized_reflectRuntime_kt_inkhwd;
  function init_properties_reflectRuntime_kt_yf9l8h() {
    if (properties_initialized_reflectRuntime_kt_inkhwd) {
    } else {
      properties_initialized_reflectRuntime_kt_inkhwd = true;
      var tmp$ret$11;
      {
        var tmp$ret$2;
        {
          var tmp0_arrayOf = [metadataObject(), metadataObject()];
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              tmp$ret$0 = tmp0_arrayOf;
            }
            tmp$ret$1 = tmp$ret$0;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        var tmp = tmp$ret$2;
        var tmp$ret$5;
        {
          var tmp1_arrayOf = [metadataObject(), metadataObject()];
          var tmp$ret$4;
          {
            var tmp$ret$3;
            {
              tmp$ret$3 = tmp1_arrayOf;
            }
            tmp$ret$4 = tmp$ret$3;
          }
          tmp$ret$5 = tmp$ret$4;
        }
        var tmp_0 = tmp$ret$5;
        var tmp$ret$8;
        {
          var tmp2_arrayOf = [metadataObject(), metadataObject()];
          var tmp$ret$7;
          {
            var tmp$ret$6;
            {
              tmp$ret$6 = tmp2_arrayOf;
            }
            tmp$ret$7 = tmp$ret$6;
          }
          tmp$ret$8 = tmp$ret$7;
        }
        var tmp3_arrayOf = [tmp, tmp_0, tmp$ret$8];
        var tmp$ret$10;
        {
          var tmp$ret$9;
          {
            tmp$ret$9 = tmp3_arrayOf;
          }
          tmp$ret$10 = tmp$ret$9;
        }
        tmp$ret$11 = tmp$ret$10;
      }
      propertyRefClassMetadataCache = tmp$ret$11;
    }
  }
  var interfacesCounter;
  function classMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return createMetadata('class', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype);
  }
  function createMetadata(kind, name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return {kind: kind, simpleName: name, interfaceId: kind === 'interface' ? -1 : undefined, interfaces: interfaces || [], associatedObjectKey: associatedObjectKey, associatedObjects: associatedObjects, suspendArity: suspendArity, fastPrototype: fastPrototype, $kClass$: undefined, interfacesCache: {isComplete: fastPrototype === undefined && (interfaces === undefined || interfaces.length === 0), implementInterfaceMemo: {}}};
  }
  function isArrayish(o) {
    return isJsArray(o) ? true : isView(o);
  }
  function isJsArray(obj) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = Array.isArray(obj);
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function isInterface(obj, iface) {
    var tmp0_elvis_lhs = obj.constructor;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var ctor = tmp;
    return isInterfaceImpl(ctor, iface);
  }
  function isInterfaceImpl(ctor, iface) {
    if (ctor === iface) {
      return true;
    }
    var metadata = ctor.$metadata$;
    if (!(metadata == null) ? metadata.interfacesCache == null : false) {
      metadata.interfacesCache = generateInterfaceCache();
    }
    var tmp0_safe_receiver = metadata;
    var interfacesCache = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.interfacesCache;
    var tmp;
    if (!(interfacesCache == null)) {
      if (!interfacesCache.isComplete) {
        completeInterfaceCache(ctor);
      }
      var tmp1_safe_receiver = iface.$metadata$;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.interfaceId;
      var tmp_0;
      if (tmp2_elvis_lhs == null) {
        return false;
      } else {
        tmp_0 = tmp2_elvis_lhs;
      }
      var interfaceId = tmp_0;
      tmp = !!interfacesCache.implementInterfaceMemo[interfaceId];
    } else {
      var tmp3_safe_receiver = fastGetPrototype(ctor);
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.constructor;
      var tmp_1;
      if (tmp4_elvis_lhs == null) {
        return false;
      } else {
        tmp_1 = tmp4_elvis_lhs;
      }
      var constructor = tmp_1;
      tmp = isInterfaceImpl(constructor, iface);
    }
    return tmp;
  }
  function generateInterfaceCache() {
    return {isComplete: false, implementInterfaceMemo: {}};
  }
  function completeInterfaceCache(ctor) {
    var metadata = ctor.$metadata$;
    if (!(metadata == null) ? metadata.interfacesCache == null : false) {
      metadata.interfacesCache = generateInterfaceCache();
    }
    var tmp0_safe_receiver = metadata;
    var interfacesCache = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.interfacesCache;
    if (!(interfacesCache == null)) {
      if (interfacesCache.isComplete === true) {
        return interfacesCache;
      }
      var indexedObject = metadata.interfaces;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var i = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        extendCacheWithSingle(interfacesCache, i);
        extendCacheWith(interfacesCache, completeInterfaceCache(i));
      }
    }
    var tmp2_safe_receiver = fastGetPrototype(ctor);
    var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.constructor;
    var tmp;
    if (tmp3_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = completeInterfaceCache(tmp3_safe_receiver);
      }
      tmp = tmp$ret$0;
    }
    var parentInterfacesCache = tmp;
    var tmp4_safe_receiver = interfacesCache;
    var tmp_0;
    if (tmp4_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          extendCacheWith(tmp4_safe_receiver, parentInterfacesCache);
          tmp4_safe_receiver.isComplete = true;
        }
        tmp$ret$1 = tmp4_safe_receiver;
      }
      tmp_0 = tmp$ret$1;
    }
    var tmp5_elvis_lhs = tmp_0;
    return tmp5_elvis_lhs == null ? parentInterfacesCache : tmp5_elvis_lhs;
  }
  function fastGetPrototype(ctor) {
    var tmp0_safe_receiver = ctor.$metadata$;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          if (tmp0_safe_receiver.fastPrototype == null) {
            tmp0_safe_receiver.fastPrototype = getPrototype(ctor);
          }
          tmp$ret$0 = tmp0_safe_receiver.fastPrototype;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? getPrototype(ctor) : tmp1_elvis_lhs;
  }
  function extendCacheWithSingle(_this__u8e3s4, intr) {
    _this__u8e3s4.implementInterfaceMemo[getOrDefineInterfaceId(intr)] = true;
  }
  function extendCacheWith(_this__u8e3s4, cache) {
    var tmp0_safe_receiver = cache;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.implementInterfaceMemo;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var anotherInterfaceMemo = tmp;
    Object.assign(_this__u8e3s4.implementInterfaceMemo, anotherInterfaceMemo);
  }
  function getPrototype(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.prototype;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$2;
      {
        {
        }
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_unsafeCast = Object.getPrototypeOf(tmp0_safe_receiver);
            tmp$ret$0 = tmp0_unsafeCast;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp = tmp$ret$2;
    }
    return tmp;
  }
  function getOrDefineInterfaceId(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = _this__u8e3s4.$metadata$;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var metadata = tmp$ret$1;
    var tmp0_elvis_lhs = metadata.interfaceId;
    var interfaceId = tmp0_elvis_lhs == null ? -1 : tmp0_elvis_lhs;
    var tmp;
    if (!equals_1(interfaceId, -1)) {
      tmp = interfaceId;
    } else {
      var tmp1 = interfacesCounter;
      interfacesCounter = tmp1 + 1 | 0;
      var result = tmp1;
      metadata.interfaceId = result;
      tmp = result;
    }
    return tmp;
  }
  function isArray(obj) {
    var tmp;
    if (isJsArray(obj)) {
      var tmp$ret$0;
      {
        tmp$ret$0 = obj;
      }
      tmp = !tmp$ret$0.$type$;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isObject(obj) {
    var objTypeOf = typeof obj;
    var tmp0_subject = objTypeOf;
    switch (tmp0_subject) {
      case 'string':
        return true;
      case 'number':
        return true;
      case 'boolean':
        return true;
      case 'function':
        return true;
      default:
        return jsInstanceOf(obj, Object);
    }
  }
  function isSuspendFunction(obj, arity) {
    if (typeof obj === 'function') {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = obj.$arity;
        tmp$ret$0 = tmp0_unsafeCast;
      }
      return tmp$ret$0 === arity;
    }
    if (typeof obj === 'object' ? jsIn('$metadata$', obj.constructor) : false) {
      var tmp$ret$1;
      {
        var tmp1_unsafeCast = obj.constructor;
        tmp$ret$1 = tmp1_unsafeCast;
      }
      var tmp0_safe_receiver = tmp$ret$1.$metadata$;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.suspendArity;
      var tmp;
      if (tmp1_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$2;
        {
          {
          }
          var result = false;
          var tmp0_iterator = arrayIterator(tmp1_safe_receiver);
          $l$loop: while (tmp0_iterator.e()) {
            var item = tmp0_iterator.f();
            if (arity === item) {
              result = true;
              break $l$loop;
            }
          }
          return result;
        }
        tmp = tmp$ret$2;
      }
      var tmp2_elvis_lhs = tmp;
      return tmp2_elvis_lhs == null ? false : tmp2_elvis_lhs;
    }
    return false;
  }
  function isNumber(a) {
    var tmp;
    if (typeof a === 'number') {
      tmp = true;
    } else {
      tmp = a instanceof Long;
    }
    return tmp;
  }
  function isComparable(value) {
    var type = typeof value;
    return ((type === 'string' ? true : type === 'boolean') ? true : isNumber(value)) ? true : isInterface(value, get_js(getKClass(Comparable)));
  }
  function isCharSequence(value) {
    return typeof value === 'string' ? true : isInterface(value, get_js(getKClass(CharSequence)));
  }
  function isBooleanArray(a) {
    return isJsArray(a) ? a.$type$ === 'BooleanArray' : false;
  }
  function isByteArray(a) {
    return jsInstanceOf(a, Int8Array);
  }
  function isShortArray(a) {
    return jsInstanceOf(a, Int16Array);
  }
  function isCharArray(a) {
    return jsInstanceOf(a, Uint16Array) ? a.$type$ === 'CharArray' : false;
  }
  function isIntArray(a) {
    return jsInstanceOf(a, Int32Array);
  }
  function isFloatArray(a) {
    return jsInstanceOf(a, Float32Array);
  }
  function isLongArray(a) {
    return isJsArray(a) ? a.$type$ === 'LongArray' : false;
  }
  function isDoubleArray(a) {
    return jsInstanceOf(a, Float64Array);
  }
  function interfaceMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity) {
    return createMetadata('interface', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, undefined);
  }
  function objectMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return createMetadata('object', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype);
  }
  function jsIsType(obj, jsClass) {
    if (jsClass === Object) {
      return isObject(obj);
    }
    if ((obj == null ? true : jsClass == null) ? true : !(typeof obj === 'object') ? !(typeof obj === 'function') : false) {
      return false;
    }
    if (typeof jsClass === 'function' ? jsInstanceOf(obj, jsClass) : false) {
      return true;
    }
    var proto = jsGetPrototypeOf(jsClass);
    var tmp0_safe_receiver = proto;
    var constructor = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.constructor;
    if (constructor != null ? jsIn('$metadata$', constructor) : false) {
      var metadata = constructor.$metadata$;
      if (metadata.kind === 'object') {
        return obj === jsClass;
      }
    }
    var klassMetadata = jsClass.$metadata$;
    if (klassMetadata == null) {
      return jsInstanceOf(obj, jsClass);
    }
    if (klassMetadata.kind === 'interface' ? obj.constructor != null : false) {
      return isInterfaceImpl(obj.constructor, jsClass);
    }
    return false;
  }
  function jsGetPrototypeOf(jsClass) {
    return Object.getPrototypeOf(jsClass);
  }
  function copyInto(_this__u8e3s4, destination, destinationOffset, startIndex, endIndex) {
    arrayCopy(_this__u8e3s4, destination, destinationOffset, startIndex, endIndex);
    return destination;
  }
  function copyOf(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$1;
    {
      var tmp1_withType = fillFrom(_this__u8e3s4, charArray(newSize));
      tmp1_withType.$type$ = 'CharArray';
      tmp$ret$1 = tmp1_withType;
    }
    return tmp$ret$1;
  }
  function copyOf_0(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Float64Array(newSize));
  }
  function copyOf_1(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Float32Array(newSize));
  }
  function copyOf_2(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$1;
    {
      var tmp1_withType = arrayCopyResize(_this__u8e3s4, newSize, new Long(0, 0));
      tmp1_withType.$type$ = 'LongArray';
      tmp$ret$1 = tmp1_withType;
    }
    return tmp$ret$1;
  }
  function copyOf_3(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Int32Array(newSize));
  }
  function copyOf_4(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Int16Array(newSize));
  }
  function copyOf_5(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Int8Array(newSize));
  }
  function copyOf_6(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$1;
    {
      var tmp1_withType = arrayCopyResize(_this__u8e3s4, newSize, false);
      tmp1_withType.$type$ = 'BooleanArray';
      tmp$ret$1 = tmp1_withType;
    }
    return tmp$ret$1;
  }
  function asList(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return new ArrayList(tmp$ret$1);
  }
  function contentEquals(_this__u8e3s4, other) {
    return contentEqualsInternal(_this__u8e3s4, other);
  }
  function contentHashCode(_this__u8e3s4) {
    return contentHashCodeInternal(_this__u8e3s4);
  }
  function sortWith_0(_this__u8e3s4, comparator) {
    if (_this__u8e3s4.length > 1)
      sortArrayWith(_this__u8e3s4, comparator);
  }
  function plus_3(_this__u8e3s4, elements) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.concat(elements);
  }
  function fill(_this__u8e3s4, element, fromIndex, toIndex) {
    Companion_getInstance().e1(fromIndex, toIndex, _this__u8e3s4.length);
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$0.fill(element, fromIndex, toIndex);
    }
  }
  function fill$default(_this__u8e3s4, element, fromIndex, toIndex, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      fromIndex = 0;
    if (!(($mask0 & 4) === 0))
      toIndex = _this__u8e3s4.length;
    return fill(_this__u8e3s4, element, fromIndex, toIndex);
  }
  function copyOf_7(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return arrayCopyResize(_this__u8e3s4, newSize, null);
  }
  function decodeVarLenBase64(base64, fromBase64, resultLength) {
    var result = new Int32Array(resultLength);
    var index = 0;
    var int = 0;
    var shift = 0;
    var indexedObject = base64;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var char = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      {
        tmp$ret$0 = Char__toInt_impl_vasixd(char);
      }
      var sixBit = fromBase64[tmp$ret$0];
      int = int | (sixBit & 31) << shift;
      if (sixBit < 32) {
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        result[tmp1] = int;
        int = 0;
        shift = 0;
      } else {
        shift = shift + 5 | 0;
      }
    }
    return result;
  }
  function minOf(a, b) {
    return Math.min(a, b);
  }
  function maxOf(a, b) {
    return Math.max(a, b);
  }
  function digitToIntImpl(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    }
    var ch = tmp$ret$0;
    var index = binarySearchRange(Digit_getInstance().lg_1, ch);
    var diff = ch - Digit_getInstance().lg_1[index] | 0;
    return diff < 10 ? diff : -1;
  }
  function binarySearchRange(array, needle) {
    var bottom = 0;
    var top = array.length - 1 | 0;
    var middle = -1;
    var value = 0;
    while (bottom <= top) {
      middle = (bottom + top | 0) / 2 | 0;
      value = array[middle];
      if (needle > value)
        bottom = middle + 1 | 0;
      else if (needle === value)
        return middle;
      else
        top = middle - 1 | 0;
    }
    return middle - (needle < value ? 1 : 0) | 0;
  }
  function Digit() {
    Digit_instance = this;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new Int32Array([48, 1632, 1776, 1984, 2406, 2534, 2662, 2790, 2918, 3046, 3174, 3302, 3430, 3558, 3664, 3792, 3872, 4160, 4240, 6112, 6160, 6470, 6608, 6784, 6800, 6992, 7088, 7232, 7248, 42528, 43216, 43264, 43472, 43504, 43600, 44016, 65296]);
    }
    tmp.lg_1 = tmp$ret$0;
  }
  Digit.$metadata$ = objectMeta('Digit');
  var Digit_instance;
  function Digit_getInstance() {
    if (Digit_instance == null)
      new Digit();
    return Digit_instance;
  }
  function isLowerCaseImpl(_this__u8e3s4) {
    var tmp;
    if (getLetterType(_this__u8e3s4) === 1) {
      tmp = true;
    } else {
      var tmp$ret$0;
      {
        tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
      }
      tmp = isOtherLowercase(tmp$ret$0);
    }
    return tmp;
  }
  function getLetterType(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    }
    var ch = tmp$ret$0;
    var index = binarySearchRange(Letter_getInstance().mg_1, ch);
    var rangeStart = Letter_getInstance().mg_1[index];
    var rangeEnd = (rangeStart + Letter_getInstance().ng_1[index] | 0) - 1 | 0;
    var code = Letter_getInstance().og_1[index];
    if (ch > rangeEnd) {
      return 0;
    }
    var lastTwoBits = code & 3;
    if (lastTwoBits === 0) {
      var shift = 2;
      var threshold = rangeStart;
      var inductionVariable = 0;
      if (inductionVariable <= 1)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          threshold = threshold + (code >> shift & 127) | 0;
          if (threshold > ch) {
            return 3;
          }
          shift = shift + 7 | 0;
          threshold = threshold + (code >> shift & 127) | 0;
          if (threshold > ch) {
            return 0;
          }
          shift = shift + 7 | 0;
        }
         while (inductionVariable <= 1);
      return 3;
    }
    if (code <= 7) {
      return lastTwoBits;
    }
    var distance = ch - rangeStart | 0;
    var shift_0 = code <= 31 ? distance % 2 | 0 : distance;
    return code >> imul(2, shift_0) & 3;
  }
  function Letter() {
    Letter_instance = this;
    var toBase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
    var fromBase64 = new Int32Array(128);
    var inductionVariable = 0;
    var last = charSequenceLength(toBase64) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          var tmp0__get_code__88qj9g = charSequenceGet(toBase64, i);
          tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
        }
        fromBase64[tmp$ret$0] = i;
      }
       while (inductionVariable <= last);
    var rangeStartDiff = 'hCgBpCQGYHZH5BRpBPPPPPPRMP5BPPlCPP6BkEPPPPcPXPzBvBrB3BOiDoBHwD+E3DauCnFmBmB2D6E1BlBTiBmBlBP5BhBiBrBvBjBqBnBPRtBiCmCtBlB0BmB5BiB7BmBgEmChBZgCoEoGVpBSfRhBPqKQ2BwBYoFgB4CJuTiEvBuCuDrF5DgEgFlJ1DgFmBQtBsBRGsB+BPiBlD1EIjDPRPPPQPPPPPGQSQS/DxENVNU+B9zCwBwBPPCkDPNnBPqDYY1R8B7FkFgTgwGgwUwmBgKwBuBScmEP/BPPPPPPrBP8B7F1B/ErBqC6B7BiBmBfQsBUwCw/KwqIwLwETPcPjQgJxFgBlBsD';
    var diff = decodeVarLenBase64(rangeStartDiff, fromBase64, 222);
    var start = new Int32Array(diff.length);
    var inductionVariable_0 = 0;
    var last_0 = diff.length - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        if (i_0 === 0)
          start[i_0] = diff[i_0];
        else
          start[i_0] = start[i_0 - 1 | 0] + diff[i_0] | 0;
      }
       while (inductionVariable_0 <= last_0);
    this.mg_1 = start;
    var rangeLength = 'aaMBXHYH5BRpBPPPPPPRMP5BPPlCPPzBDOOPPcPXPzBvBjB3BOhDmBBpB7DoDYxB+EiBP1DoExBkBQhBekBPmBgBhBctBiBMWOOXhCsBpBkBUV3Ba4BkB0DlCgBXgBtD4FSdBfPhBPpKP0BvBXjEQ2CGsT8DhBtCqDpFvD1D3E0IrD2EkBJrBDOBsB+BPiBlB1EIjDPPPPPPPPPPPGPPMNLsBNPNPKCvBvBPPCkDPBmBPhDXXgD4B6FzEgDguG9vUtkB9JcuBSckEP/BPPPPPPBPf4FrBjEhBpC3B5BKaWPrBOwCk/KsCuLqDHPbPxPsFtEaaqDL';
    this.ng_1 = decodeVarLenBase64(rangeLength, fromBase64, 222);
    var rangeCategory = 'GFjgggUHGGFFZZZmzpz5qB6s6020B60ptltB6smt2sB60mz22B1+vv+8BZZ5s2850BW5q1ymtB506smzBF3q1q1qB1q1q1+Bgii4wDTm74g3KiggxqM60q1q1Bq1o1q1BF1qlrqrBZ2q5wprBGFZWWZGHFsjiooLowgmOowjkwCkgoiIk7ligGogiioBkwkiYkzj2oNoi+sbkwj04DghhkQ8wgiYkgoioDsgnkwC4gikQ//v+85BkwvoIsgoyI4yguI0whiwEowri4CoghsJowgqYowgm4DkwgsY/nwnzPowhmYkg6wI8yggZswikwHgxgmIoxgqYkwgk4DkxgmIkgoioBsgssoBgzgyI8g9gL8g9kI0wgwJoxgkoC0wgioFkw/wI0w53iF4gioYowjmgBHGq1qkgwBF1q1q8qBHwghuIwghyKk0goQkwgoQk3goQHGFHkyg0pBgxj6IoinkxDswno7Ikwhz9Bo0gioB8z48Rwli0xN0mpjoX8w78pDwltoqKHFGGwwgsIHFH3q1q16BFHWFZ1q10q1B2qlwq1B1q10q1B2q1yq1B6q1gq1Biq1qhxBir1qp1Bqt1q1qB1g1q1+B//3q16B///q1qBH/qlqq9Bholqq9B1i00a1q10qD1op1HkwmigEigiy6Cptogq1Bixo1kDq7/j00B2qgoBWGFm1lz50B6s5q1+BGWhggzhwBFFhgk4//Bo2jigE8wguI8wguI8wgugUog1qoB4qjmIwwi2KgkYHHH4lBgiFWkgIWoghssMmz5smrBZ3q1y50B5sm7gzBtz1smzB5smz50BqzqtmzB5sgzqzBF2/9//5BowgoIwmnkzPkwgk4C8ys65BkgoqI0wgy6FghquZo2giY0ghiIsgh24B4ghsQ8QF/v1q1OFs0O8iCHHF1qggz/B8wg6Iznv+//B08QgohsjK0QGFk7hsQ4gB';
    this.og_1 = decodeVarLenBase64(rangeCategory, fromBase64, 222);
  }
  Letter.$metadata$ = objectMeta('Letter');
  var Letter_instance;
  function Letter_getInstance() {
    if (Letter_instance == null)
      new Letter();
    return Letter_instance;
  }
  function isOtherLowercase(_this__u8e3s4) {
    var index = binarySearchRange(OtherLowercase_getInstance().pg_1, _this__u8e3s4);
    return index >= 0 ? _this__u8e3s4 < (OtherLowercase_getInstance().pg_1[index] + OtherLowercase_getInstance().qg_1[index] | 0) : false;
  }
  function OtherLowercase() {
    OtherLowercase_instance = this;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new Int32Array([170, 186, 688, 704, 736, 837, 890, 7468, 7544, 7579, 8305, 8319, 8336, 8560, 9424, 11388, 42652, 42864, 43000, 43868]);
    }
    tmp.pg_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = new Int32Array([1, 1, 9, 2, 5, 1, 1, 63, 1, 37, 1, 1, 13, 16, 26, 2, 2, 1, 2, 4]);
    }
    tmp_0.qg_1 = tmp$ret$1;
  }
  OtherLowercase.$metadata$ = objectMeta('OtherLowercase');
  var OtherLowercase_instance;
  function OtherLowercase_getInstance() {
    if (OtherLowercase_instance == null)
      new OtherLowercase();
    return OtherLowercase_instance;
  }
  function titlecaseCharImpl(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    }
    var code = tmp$ret$0;
    if ((452 <= code ? code <= 460 : false) ? true : 497 <= code ? code <= 499 : false) {
      return numberToChar(imul(3, (code + 1 | 0) / 3 | 0));
    }
    if ((4304 <= code ? code <= 4346 : false) ? true : 4349 <= code ? code <= 4351 : false) {
      return _this__u8e3s4;
    }
    return uppercaseChar(_this__u8e3s4);
  }
  function isWhitespaceImpl(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    }
    var ch = tmp$ret$0;
    return (((9 <= ch ? ch <= 13 : false) ? true : 28 <= ch ? ch <= 32 : false) ? true : ch === 160) ? true : ch > 4096 ? (((((ch === 5760 ? true : 8192 <= ch ? ch <= 8202 : false) ? true : ch === 8232) ? true : ch === 8233) ? true : ch === 8239) ? true : ch === 8287) ? true : ch === 12288 : false;
  }
  function releaseIntercepted($this) {
    var intercepted = $this.yg_1;
    if (!(intercepted == null) ? !(intercepted === $this) : false) {
      ensureNotNull($this.o3().z3(Key_getInstance())).y3(intercepted);
    }
    $this.yg_1 = CompletedContinuation_getInstance();
  }
  function CoroutineImpl(resultContinuation) {
    this.rg_1 = resultContinuation;
    this.sg_1 = 0;
    this.tg_1 = 0;
    this.ug_1 = null;
    this.vg_1 = null;
    this.wg_1 = null;
    var tmp = this;
    var tmp0_safe_receiver = this.rg_1;
    tmp.xg_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.o3();
    this.yg_1 = null;
  }
  CoroutineImpl.prototype.zg = function () {
    return this.vg_1;
  };
  CoroutineImpl.prototype.o3 = function () {
    return ensureNotNull(this.xg_1);
  };
  CoroutineImpl.prototype.ah = function () {
    var tmp2_elvis_lhs = this.yg_1;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_safe_receiver = this.o3().z3(Key_getInstance());
        var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.x3(this);
        var tmp0_also = tmp1_elvis_lhs == null ? this : tmp1_elvis_lhs;
        {
        }
        {
          this.yg_1 = tmp0_also;
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp2_elvis_lhs;
    }
    return tmp;
  };
  CoroutineImpl.prototype.bh = function (result) {
    var current = this;
    var tmp$ret$0;
    {
      var tmp;
      if (_Result___get_isFailure__impl__jpiriv(result)) {
        tmp = null;
      } else {
        var tmp_0 = _Result___get_value__impl__bjfvqg(result);
        tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
      }
      tmp$ret$0 = tmp;
    }
    var currentResult = tmp$ret$0;
    var currentException = Result__exceptionOrNull_impl_p6xea9(result);
    while (true) {
      var tmp$ret$6;
      {
        var tmp0_with = current;
        {
        }
        if (currentException == null) {
          tmp0_with.ug_1 = currentResult;
        } else {
          tmp0_with.sg_1 = tmp0_with.tg_1;
          tmp0_with.vg_1 = currentException;
        }
        try {
          var outcome = tmp0_with.ch();
          if (outcome === get_COROUTINE_SUSPENDED())
            return Unit_getInstance();
          currentResult = outcome;
          currentException = null;
        } catch ($p) {
          currentResult = null;
          var tmp$ret$1;
          {
            tmp$ret$1 = $p;
          }
          currentException = tmp$ret$1;
        }
        releaseIntercepted(tmp0_with);
        var completion = ensureNotNull(tmp0_with.rg_1);
        var tmp_1;
        if (completion instanceof CoroutineImpl) {
          current = completion;
          tmp_1 = Unit_getInstance();
        } else {
          if (!(currentException == null)) {
            var tmp$ret$3;
            {
              var tmp0_resumeWithException = ensureNotNull(currentException);
              var tmp$ret$2;
              {
                var tmp0_failure = Companion_getInstance_4();
                tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(tmp0_resumeWithException));
              }
              tmp$ret$3 = completion.m3(tmp$ret$2);
            }
          } else {
            var tmp$ret$5;
            {
              var tmp1_resume = currentResult;
              var tmp$ret$4;
              {
                var tmp0_success = Companion_getInstance_4();
                tmp$ret$4 = _Result___init__impl__xyqfz8(tmp1_resume);
              }
              tmp$ret$5 = completion.m3(tmp$ret$4);
            }
          }
          return Unit_getInstance();
        }
        tmp$ret$6 = tmp_1;
      }
    }
  };
  CoroutineImpl.prototype.m3 = function (result) {
    return this.bh(result);
  };
  CoroutineImpl.$metadata$ = classMeta('CoroutineImpl', [Continuation]);
  function CompletedContinuation() {
    CompletedContinuation_instance = this;
  }
  CompletedContinuation.prototype.o3 = function () {
    throw IllegalStateException_init_$Create$('This continuation is already complete');
  };
  CompletedContinuation.prototype.bh = function (result) {
    {
      throw IllegalStateException_init_$Create$('This continuation is already complete');
    }
  };
  CompletedContinuation.prototype.m3 = function (result) {
    return this.bh(result);
  };
  CompletedContinuation.prototype.toString = function () {
    return 'This continuation is already complete';
  };
  CompletedContinuation.$metadata$ = objectMeta('CompletedContinuation', [Continuation]);
  var CompletedContinuation_instance;
  function CompletedContinuation_getInstance() {
    if (CompletedContinuation_instance == null)
      new CompletedContinuation();
    return CompletedContinuation_instance;
  }
  function intercepted(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4 instanceof CoroutineImpl ? _this__u8e3s4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ah();
    return tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
  }
  function createCoroutineUnintercepted(_this__u8e3s4, receiver, completion) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_2(completion, _this__u8e3s4, receiver);
    }
    return tmp$ret$0;
  }
  function startCoroutineUninterceptedOrReturn(_this__u8e3s4, receiver, completion) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    return typeof a === 'function' ? a(receiver, completion) : _this__u8e3s4.dh(receiver, completion);
  }
  function createCoroutineFromSuspendFunction(completion, block) {
    return new _no_name_provided__qut3iv_3(completion, block);
  }
  function invokeSuspendSuperTypeWithReceiver(_this__u8e3s4, receiver, completion) {
    throw new NotImplementedError('It is intrinsic method');
  }
  function startCoroutineUninterceptedOrReturn_0(_this__u8e3s4, receiver, param, completion) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    return typeof a === 'function' ? a(receiver, param, completion) : _this__u8e3s4.r6(receiver, param, completion);
  }
  function invokeSuspendSuperTypeWithReceiverAndParam(_this__u8e3s4, receiver, param, completion) {
    throw new NotImplementedError('It is intrinsic method');
  }
  function _no_name_provided__qut3iv_2($completion, $this_createCoroutineUnintercepted, $receiver) {
    this.mh_1 = $completion;
    this.nh_1 = $this_createCoroutineUnintercepted;
    this.oh_1 = $receiver;
    CoroutineImpl.call(this, isInterface($completion, Continuation) ? $completion : THROW_CCE());
  }
  _no_name_provided__qut3iv_2.prototype.ch = function () {
    if (this.zg() != null)
      throw this.zg();
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = this.nh_1;
      }
      var a = tmp$ret$0;
      tmp$ret$1 = typeof a === 'function' ? a(this.oh_1, this.mh_1) : this.nh_1.dh(this.oh_1, this.mh_1);
    }
    return tmp$ret$1;
  };
  _no_name_provided__qut3iv_2.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function _no_name_provided__qut3iv_3($completion, $block) {
    this.xh_1 = $block;
    CoroutineImpl.call(this, isInterface($completion, Continuation) ? $completion : THROW_CCE());
  }
  _no_name_provided__qut3iv_3.prototype.ch = function () {
    if (this.zg() != null)
      throw this.zg();
    return this.xh_1();
  };
  _no_name_provided__qut3iv_3.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function Exception_init_$Init$($this) {
    extendThrowable($this, void 1, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Init$_0(message, $this) {
    extendThrowable($this, message, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Create$(message) {
    var tmp = Exception_init_$Init$_0(message, Object.create(Exception.prototype));
    captureStack(tmp, Exception_init_$Create$);
    return tmp;
  }
  function Exception_init_$Init$_1(message, cause, $this) {
    extendThrowable($this, message, cause);
    Exception.call($this);
    return $this;
  }
  function Exception() {
    captureStack(this, Exception);
  }
  Exception.$metadata$ = classMeta('Exception', undefined, undefined, undefined, undefined, Error.prototype);
  function Error_init_$Init$(message, $this) {
    extendThrowable($this, message, void 1);
    Error_0.call($this);
    return $this;
  }
  function Error_init_$Init$_0(message, cause, $this) {
    extendThrowable($this, message, cause);
    Error_0.call($this);
    return $this;
  }
  function Error_0() {
    captureStack(this, Error_0);
  }
  Error_0.$metadata$ = classMeta('Error', undefined, undefined, undefined, undefined, Error.prototype);
  function IllegalArgumentException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$() {
    var tmp = IllegalArgumentException_init_$Init$(Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$_0(message) {
    var tmp = IllegalArgumentException_init_$Init$_0(message, Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$_0);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_1(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$_1(message, cause) {
    var tmp = IllegalArgumentException_init_$Init$_1(message, cause, Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$_1);
    return tmp;
  }
  function IllegalArgumentException() {
    captureStack(this, IllegalArgumentException);
  }
  IllegalArgumentException.$metadata$ = classMeta('IllegalArgumentException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NoSuchElementException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$() {
    var tmp = NoSuchElementException_init_$Init$(Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$);
    return tmp;
  }
  function NoSuchElementException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$_0(message) {
    var tmp = NoSuchElementException_init_$Init$_0(message, Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$_0);
    return tmp;
  }
  function NoSuchElementException() {
    captureStack(this, NoSuchElementException);
  }
  NoSuchElementException.$metadata$ = classMeta('NoSuchElementException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function RuntimeException_init_$Init$($this) {
    Exception_init_$Init$($this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_0(message, $this) {
    Exception_init_$Init$_0(message, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_1(message, cause, $this) {
    Exception_init_$Init$_1(message, cause, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Create$(message, cause) {
    var tmp = RuntimeException_init_$Init$_1(message, cause, Object.create(RuntimeException.prototype));
    captureStack(tmp, RuntimeException_init_$Create$);
    return tmp;
  }
  function RuntimeException() {
    captureStack(this, RuntimeException);
  }
  RuntimeException.$metadata$ = classMeta('RuntimeException', undefined, undefined, undefined, undefined, Exception.prototype);
  function IllegalStateException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$(message) {
    var tmp = IllegalStateException_init_$Init$(message, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$);
    return tmp;
  }
  function IllegalStateException_init_$Init$_0(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$_0(message, cause) {
    var tmp = IllegalStateException_init_$Init$_0(message, cause, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$_0);
    return tmp;
  }
  function IllegalStateException() {
    captureStack(this, IllegalStateException);
  }
  IllegalStateException.$metadata$ = classMeta('IllegalStateException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function UnsupportedOperationException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$() {
    var tmp = UnsupportedOperationException_init_$Init$(Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$);
    return tmp;
  }
  function UnsupportedOperationException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$_0(message) {
    var tmp = UnsupportedOperationException_init_$Init$_0(message, Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$_0);
    return tmp;
  }
  function UnsupportedOperationException() {
    captureStack(this, UnsupportedOperationException);
  }
  UnsupportedOperationException.$metadata$ = classMeta('UnsupportedOperationException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function IndexOutOfBoundsException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IndexOutOfBoundsException.call($this);
    return $this;
  }
  function IndexOutOfBoundsException_init_$Create$(message) {
    var tmp = IndexOutOfBoundsException_init_$Init$(message, Object.create(IndexOutOfBoundsException.prototype));
    captureStack(tmp, IndexOutOfBoundsException_init_$Create$);
    return tmp;
  }
  function IndexOutOfBoundsException() {
    captureStack(this, IndexOutOfBoundsException);
  }
  IndexOutOfBoundsException.$metadata$ = classMeta('IndexOutOfBoundsException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function AssertionError_init_$Init$(message, $this) {
    Error_init_$Init$(message, $this);
    AssertionError.call($this);
    return $this;
  }
  function AssertionError_init_$Create$(message) {
    var tmp = AssertionError_init_$Init$(message, Object.create(AssertionError.prototype));
    captureStack(tmp, AssertionError_init_$Create$);
    return tmp;
  }
  function AssertionError() {
    captureStack(this, AssertionError);
  }
  AssertionError.$metadata$ = classMeta('AssertionError', undefined, undefined, undefined, undefined, Error_0.prototype);
  function NumberFormatException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$_0(message, $this);
    NumberFormatException.call($this);
    return $this;
  }
  function NumberFormatException_init_$Create$(message) {
    var tmp = NumberFormatException_init_$Init$(message, Object.create(NumberFormatException.prototype));
    captureStack(tmp, NumberFormatException_init_$Create$);
    return tmp;
  }
  function NumberFormatException() {
    captureStack(this, NumberFormatException);
  }
  NumberFormatException.$metadata$ = classMeta('NumberFormatException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function ArithmeticException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    ArithmeticException.call($this);
    return $this;
  }
  function ArithmeticException_init_$Create$(message) {
    var tmp = ArithmeticException_init_$Init$(message, Object.create(ArithmeticException.prototype));
    captureStack(tmp, ArithmeticException_init_$Create$);
    return tmp;
  }
  function ArithmeticException() {
    captureStack(this, ArithmeticException);
  }
  ArithmeticException.$metadata$ = classMeta('ArithmeticException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NullPointerException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NullPointerException.call($this);
    return $this;
  }
  function NullPointerException_init_$Create$() {
    var tmp = NullPointerException_init_$Init$(Object.create(NullPointerException.prototype));
    captureStack(tmp, NullPointerException_init_$Create$);
    return tmp;
  }
  function NullPointerException() {
    captureStack(this, NullPointerException);
  }
  NullPointerException.$metadata$ = classMeta('NullPointerException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NoWhenBranchMatchedException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoWhenBranchMatchedException.call($this);
    return $this;
  }
  function NoWhenBranchMatchedException_init_$Create$() {
    var tmp = NoWhenBranchMatchedException_init_$Init$(Object.create(NoWhenBranchMatchedException.prototype));
    captureStack(tmp, NoWhenBranchMatchedException_init_$Create$);
    return tmp;
  }
  function NoWhenBranchMatchedException() {
    captureStack(this, NoWhenBranchMatchedException);
  }
  NoWhenBranchMatchedException.$metadata$ = classMeta('NoWhenBranchMatchedException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function ClassCastException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    ClassCastException.call($this);
    return $this;
  }
  function ClassCastException_init_$Create$() {
    var tmp = ClassCastException_init_$Init$(Object.create(ClassCastException.prototype));
    captureStack(tmp, ClassCastException_init_$Create$);
    return tmp;
  }
  function ClassCastException() {
    captureStack(this, ClassCastException);
  }
  ClassCastException.$metadata$ = classMeta('ClassCastException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function UninitializedPropertyAccessException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UninitializedPropertyAccessException.call($this);
    return $this;
  }
  function UninitializedPropertyAccessException_init_$Create$(message) {
    var tmp = UninitializedPropertyAccessException_init_$Init$(message, Object.create(UninitializedPropertyAccessException.prototype));
    captureStack(tmp, UninitializedPropertyAccessException_init_$Create$);
    return tmp;
  }
  function UninitializedPropertyAccessException() {
    captureStack(this, UninitializedPropertyAccessException);
  }
  UninitializedPropertyAccessException.$metadata$ = classMeta('UninitializedPropertyAccessException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function jsIn(lhs_hack, rhs_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = lhs_hack in rhs_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function jsBitwiseOr(lhs_hack, rhs_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = lhs_hack | rhs_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function jsTypeOf(value_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = typeof value_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function jsDeleteProperty(obj_hack, property_hack) {
    delete obj_hack[property_hack];
  }
  function jsInstanceOf(obj_hack, jsClass_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = obj_hack instanceof jsClass_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function findAssociatedObject(_this__u8e3s4, annotationClass) {
    var tmp;
    var tmp_0;
    if (_this__u8e3s4 instanceof KClassImpl) {
      tmp_0 = annotationClass instanceof KClassImpl;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = annotationClass.wc();
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0;
        tmp$ret$1 = tmp1_unsafeCast;
      }
      var tmp0_safe_receiver = tmp$ret$1.$metadata$;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.associatedObjectKey;
      var tmp_1;
      if (tmp1_safe_receiver == null) {
        tmp_1 = null;
      } else {
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp1_safe_receiver;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp_1 = tmp$ret$3;
      }
      var tmp2_elvis_lhs = tmp_1;
      var tmp_2;
      if (tmp2_elvis_lhs == null) {
        return null;
      } else {
        tmp_2 = tmp2_elvis_lhs;
      }
      var key = tmp_2;
      var tmp$ret$5;
      {
        var tmp$ret$4;
        {
          var tmp2_asDynamic = _this__u8e3s4.wc();
          tmp$ret$4 = tmp2_asDynamic;
        }
        var tmp3_unsafeCast = tmp$ret$4;
        tmp$ret$5 = tmp3_unsafeCast;
      }
      var tmp3_safe_receiver = tmp$ret$5.$metadata$;
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.associatedObjects;
      var tmp_3;
      if (tmp4_elvis_lhs == null) {
        return null;
      } else {
        tmp_3 = tmp4_elvis_lhs;
      }
      var map = tmp_3;
      var tmp5_elvis_lhs = map[key];
      var tmp_4;
      if (tmp5_elvis_lhs == null) {
        return null;
      } else {
        tmp_4 = tmp5_elvis_lhs;
      }
      var factory = tmp_4;
      return factory();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function toString_3(_this__u8e3s4, radix) {
    return toStringImpl(_this__u8e3s4, checkRadix(radix));
  }
  function Function1() {
  }
  Function1.$metadata$ = interfaceMeta('Function1');
  function SuspendFunction1() {
  }
  SuspendFunction1.$metadata$ = interfaceMeta('SuspendFunction1');
  function SuspendFunction2() {
  }
  SuspendFunction2.$metadata$ = interfaceMeta('SuspendFunction2');
  //region block: post-declaration
  CombinedContext.prototype.g4 = plus;
  AbstractCoroutineContextElement.prototype.z3 = get;
  AbstractCoroutineContextElement.prototype.f4 = fold;
  AbstractCoroutineContextElement.prototype.e4 = minusKey;
  AbstractCoroutineContextElement.prototype.g4 = plus;
  InternalHashCodeMap.prototype.gc = createJsMap;
  //endregion
  //region block: init
  _stableSortingIsSupported = null;
  interfacesCounter = 0;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = createInvariantKTypeProjection;
  _.$_$.b = createKType;
  _.$_$.c = findAssociatedObject;
  _.$_$.d = getKClassFromExpression;
  _.$_$.e = getKClass;
  _.$_$.f = LazyThreadSafetyMode_PUBLICATION_getInstance;
  _.$_$.g = returnIfSuspended;
  _.$_$.h = fill$default;
  _.$_$.i = joinToString$default_0;
  _.$_$.j = joinToString$default;
  _.$_$.k = contains$default;
  _.$_$.l = indexOf$default;
  _.$_$.m = lastIndexOf$default;
  _.$_$.n = startsWith$default_0;
  _.$_$.o = ArrayList_init_$Create$_0;
  _.$_$.p = ArrayList_init_$Create$;
  _.$_$.q = ArrayList_init_$Create$_1;
  _.$_$.r = HashMap_init_$Create$_1;
  _.$_$.s = HashMap_init_$Create$;
  _.$_$.t = HashMap_init_$Create$_2;
  _.$_$.u = HashSet_init_$Create$_1;
  _.$_$.v = HashSet_init_$Create$;
  _.$_$.w = HashSet_init_$Create$_0;
  _.$_$.x = LinkedHashMap_init_$Create$_1;
  _.$_$.y = LinkedHashMap_init_$Create$;
  _.$_$.z = LinkedHashMap_init_$Create$_2;
  _.$_$.a1 = LinkedHashSet_init_$Create$;
  _.$_$.b1 = LinkedHashSet_init_$Create$_0;
  _.$_$.c1 = CancellationException_init_$Init$;
  _.$_$.d1 = CancellationException_init_$Create$;
  _.$_$.e1 = CancellationException_init_$Init$_0;
  _.$_$.f1 = CancellationException_init_$Create$_0;
  _.$_$.g1 = SafeContinuation_init_$Create$;
  _.$_$.h1 = StringBuilder_init_$Create$;
  _.$_$.i1 = StringBuilder_init_$Create$_0;
  _.$_$.j1 = Error_init_$Init$_0;
  _.$_$.k1 = IllegalArgumentException_init_$Create$;
  _.$_$.l1 = IllegalArgumentException_init_$Init$_0;
  _.$_$.m1 = IllegalArgumentException_init_$Create$_0;
  _.$_$.n1 = IllegalArgumentException_init_$Init$_1;
  _.$_$.o1 = IllegalStateException_init_$Init$;
  _.$_$.p1 = IllegalStateException_init_$Create$;
  _.$_$.q1 = IllegalStateException_init_$Create$_0;
  _.$_$.r1 = IndexOutOfBoundsException_init_$Create$;
  _.$_$.s1 = NoSuchElementException_init_$Create$;
  _.$_$.t1 = NoSuchElementException_init_$Init$_0;
  _.$_$.u1 = NoSuchElementException_init_$Create$_0;
  _.$_$.v1 = RuntimeException_init_$Init$_0;
  _.$_$.w1 = RuntimeException_init_$Init$_1;
  _.$_$.x1 = RuntimeException_init_$Create$;
  _.$_$.y1 = UnsupportedOperationException_init_$Create$;
  _.$_$.z1 = UnsupportedOperationException_init_$Create$_0;
  _.$_$.a2 = Duration__toIsoString_impl_9h6wsm;
  _.$_$.b2 = _Char___init__impl__6a9atx;
  _.$_$.c2 = Char__minus_impl_a2frrh;
  _.$_$.d2 = Char__toInt_impl_vasixd;
  _.$_$.e2 = toString_0;
  _.$_$.f2 = _Result___init__impl__xyqfz8;
  _.$_$.g2 = Result__exceptionOrNull_impl_p6xea9;
  _.$_$.h2 = _Result___get_value__impl__bjfvqg;
  _.$_$.i2 = _UByte___init__impl__g9hnc4;
  _.$_$.j2 = _UByte___get_data__impl__jof9qr;
  _.$_$.k2 = UByte__toString_impl_v72jg;
  _.$_$.l2 = _UInt___init__impl__l7qpdl;
  _.$_$.m2 = _UInt___get_data__impl__f0vqqw;
  _.$_$.n2 = UInt__toString_impl_dbgl21;
  _.$_$.o2 = _ULong___init__impl__c78o9k;
  _.$_$.p2 = _ULong___get_data__impl__fggpzb;
  _.$_$.q2 = ULong__toString_impl_f9au7k;
  _.$_$.r2 = _UShort___init__impl__jigrne;
  _.$_$.s2 = _UShort___get_data__impl__g0245;
  _.$_$.t2 = UShort__toString_impl_edaoee;
  _.$_$.u2 = Key_getInstance;
  _.$_$.v2 = EmptyCoroutineContext_getInstance;
  _.$_$.w2 = BooleanCompanionObject_getInstance;
  _.$_$.x2 = ByteCompanionObject_getInstance;
  _.$_$.y2 = DoubleCompanionObject_getInstance;
  _.$_$.z2 = FloatCompanionObject_getInstance;
  _.$_$.a3 = IntCompanionObject_getInstance;
  _.$_$.b3 = ShortCompanionObject_getInstance;
  _.$_$.c3 = StringCompanionObject_getInstance;
  _.$_$.d3 = PrimitiveClasses_getInstance;
  _.$_$.e3 = Companion_getInstance_3;
  _.$_$.f3 = Companion_getInstance_13;
  _.$_$.g3 = Companion_getInstance_15;
  _.$_$.h3 = Companion_getInstance_4;
  _.$_$.i3 = Companion_getInstance_5;
  _.$_$.j3 = Companion_getInstance_6;
  _.$_$.k3 = Companion_getInstance_7;
  _.$_$.l3 = Companion_getInstance_8;
  _.$_$.m3 = Unit_getInstance;
  _.$_$.n3 = ArrayList;
  _.$_$.o3 = Collection;
  _.$_$.p3 = HashMap;
  _.$_$.q3 = HashSet;
  _.$_$.r3 = Iterable_0;
  _.$_$.s3 = Iterator;
  _.$_$.t3 = LinkedHashMap;
  _.$_$.u3 = LinkedHashSet;
  _.$_$.v3 = List;
  _.$_$.w3 = Entry;
  _.$_$.x3 = Map;
  _.$_$.y3 = MutableList;
  _.$_$.z3 = MutableMap;
  _.$_$.a4 = MutableSet;
  _.$_$.b4 = Set;
  _.$_$.c4 = arrayCopy;
  _.$_$.d4 = asList;
  _.$_$.e4 = collectionSizeOrDefault;
  _.$_$.f4 = contentEquals;
  _.$_$.g4 = contentHashCode;
  _.$_$.h4 = copyOf_4;
  _.$_$.i4 = copyOf_2;
  _.$_$.j4 = copyOf_6;
  _.$_$.k4 = copyOf;
  _.$_$.l4 = copyOf_5;
  _.$_$.m4 = copyOf_0;
  _.$_$.n4 = copyOf_1;
  _.$_$.o4 = copyOf_7;
  _.$_$.p4 = copyOf_3;
  _.$_$.q4 = copyToArray;
  _.$_$.r4 = emptyList;
  _.$_$.s4 = emptyMap;
  _.$_$.t4 = emptySet;
  _.$_$.u4 = fill;
  _.$_$.v4 = getValue;
  _.$_$.w4 = get_indices_0;
  _.$_$.x4 = get_indices;
  _.$_$.y4 = get_lastIndex_1;
  _.$_$.z4 = get_lastIndex_2;
  _.$_$.a5 = lastOrNull;
  _.$_$.b5 = last;
  _.$_$.c5 = listOf;
  _.$_$.d5 = mapCapacity;
  _.$_$.e5 = mapOf;
  _.$_$.f5 = plus_0;
  _.$_$.g5 = removeLast;
  _.$_$.h5 = setOf;
  _.$_$.i5 = singleOrNull;
  _.$_$.j5 = sortedWith;
  _.$_$.k5 = toBooleanArray;
  _.$_$.l5 = toHashSet;
  _.$_$.m5 = toList_0;
  _.$_$.n5 = toList;
  _.$_$.o5 = toMap;
  _.$_$.p5 = withIndex;
  _.$_$.q5 = compareValues;
  _.$_$.r5 = CancellationException;
  _.$_$.s5 = get_COROUTINE_SUSPENDED;
  _.$_$.t5 = createCoroutineUnintercepted;
  _.$_$.u5 = intercepted;
  _.$_$.v5 = AbstractCoroutineContextElement;
  _.$_$.w5 = AbstractCoroutineContextKey;
  _.$_$.x5 = get_0;
  _.$_$.y5 = minusKey_0;
  _.$_$.z5 = ContinuationInterceptor;
  _.$_$.a6 = Continuation;
  _.$_$.b6 = fold;
  _.$_$.c6 = get;
  _.$_$.d6 = minusKey;
  _.$_$.e6 = Element;
  _.$_$.f6 = Key_0;
  _.$_$.g6 = plus;
  _.$_$.h6 = CoroutineImpl;
  _.$_$.i6 = SuspendFunction1;
  _.$_$.j6 = SuspendFunction2;
  _.$_$.k6 = resume;
  _.$_$.l6 = startCoroutine;
  _.$_$.m6 = anyToString;
  _.$_$.n6 = arrayIterator;
  _.$_$.o6 = booleanArray;
  _.$_$.p6 = captureStack;
  _.$_$.q6 = charArray;
  _.$_$.r6 = charSequenceGet;
  _.$_$.s6 = charSequenceLength;
  _.$_$.t6 = charSequenceSubSequence;
  _.$_$.u6 = classMeta;
  _.$_$.v6 = compareTo_0;
  _.$_$.w6 = equals_1;
  _.$_$.x6 = fillArrayVal;
  _.$_$.y6 = getPropertyCallableRef;
  _.$_$.z6 = getStringHashCode;
  _.$_$.a7 = hashCode_0;
  _.$_$.b7 = interfaceMeta;
  _.$_$.c7 = isArray;
  _.$_$.d7 = isBooleanArray;
  _.$_$.e7 = isByteArray;
  _.$_$.f7 = isCharArray;
  _.$_$.g7 = isDoubleArray;
  _.$_$.h7 = isFloatArray;
  _.$_$.i7 = isIntArray;
  _.$_$.j7 = isInterface;
  _.$_$.k7 = isLongArray;
  _.$_$.l7 = isObject;
  _.$_$.m7 = isShortArray;
  _.$_$.n7 = get_js;
  _.$_$.o7 = longArray;
  _.$_$.p7 = numberToChar;
  _.$_$.q7 = numberToInt;
  _.$_$.r7 = objectMeta;
  _.$_$.s7 = toByte;
  _.$_$.t7 = toLong_0;
  _.$_$.u7 = toShort;
  _.$_$.v7 = toString_2;
  _.$_$.w7 = coerceAtLeast;
  _.$_$.x7 = coerceAtMost;
  _.$_$.y7 = step;
  _.$_$.z7 = until;
  _.$_$.a8 = KClass;
  _.$_$.b8 = KProperty1;
  _.$_$.c8 = KTypeParameter;
  _.$_$.d8 = SequenceScope;
  _.$_$.e8 = sequence;
  _.$_$.f8 = equals_0;
  _.$_$.g8 = isBlank;
  _.$_$.h8 = isLowerCase;
  _.$_$.i8 = single_2;
  _.$_$.j8 = titlecase;
  _.$_$.k8 = toDoubleOrNull;
  _.$_$.l8 = toDouble;
  _.$_$.m8 = toIntOrNull;
  _.$_$.n8 = toInt;
  _.$_$.o8 = toLongOrNull;
  _.$_$.p8 = toLong;
  _.$_$.q8 = toUByte_1;
  _.$_$.r8 = toUInt_1;
  _.$_$.s8 = toULongOrNull;
  _.$_$.t8 = toULong_1;
  _.$_$.u8 = toUShort_1;
  _.$_$.v8 = trimIndent;
  _.$_$.w8 = Duration;
  _.$_$.x8 = Annotation;
  _.$_$.y8 = Char_0;
  _.$_$.z8 = Comparator;
  _.$_$.a9 = DeepRecursiveFunction;
  _.$_$.b9 = DeepRecursiveScope;
  _.$_$.c9 = Enum;
  _.$_$.d9 = Error_0;
  _.$_$.e9 = IllegalArgumentException;
  _.$_$.f9 = IllegalStateException;
  _.$_$.g9 = Long;
  _.$_$.h9 = NoSuchElementException;
  _.$_$.i9 = Pair;
  _.$_$.j9 = RuntimeException;
  _.$_$.k9 = THROW_CCE;
  _.$_$.l9 = Triple;
  _.$_$.m9 = UByte;
  _.$_$.n9 = UInt;
  _.$_$.o9 = ULong;
  _.$_$.p9 = UShort;
  _.$_$.q9 = Unit;
  _.$_$.r9 = UnsupportedOperationException;
  _.$_$.s9 = addSuppressed;
  _.$_$.t9 = arrayOf;
  _.$_$.u9 = countTrailingZeroBits;
  _.$_$.v9 = createFailure;
  _.$_$.w9 = ensureNotNull;
  _.$_$.x9 = invoke;
  _.$_$.y9 = isFinite_0;
  _.$_$.z9 = isFinite;
  _.$_$.aa = lazy;
  _.$_$.ba = lazy_0;
  _.$_$.ca = noWhenBranchMatchedException;
  _.$_$.da = plus_2;
  _.$_$.ea = throwKotlinNothingValueException;
  _.$_$.fa = throwUninitializedPropertyAccessException;
  _.$_$.ga = toString_1;
  _.$_$.ha = to;
  //endregion
  return _;
}(module.exports));

//# sourceMappingURL=kotlin-kotlin-stdlib-js-ir.js.map

/***/ }),

/***/ 180:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var interfaceMeta = kotlin_kotlin.$_$.b7;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.c3;
  var Unit_getInstance = kotlin_kotlin.$_$.m3;
  var emptyList = kotlin_kotlin.$_$.r4;
  var LazyThreadSafetyMode_PUBLICATION_getInstance = kotlin_kotlin.$_$.f;
  var lazy = kotlin_kotlin.$_$.aa;
  var classMeta = kotlin_kotlin.$_$.u6;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var KProperty1 = kotlin_kotlin.$_$.b8;
  var getPropertyCallableRef = kotlin_kotlin.$_$.y6;
  var IllegalArgumentException_init_$Init$ = kotlin_kotlin.$_$.l1;
  var captureStack = kotlin_kotlin.$_$.p6;
  var IllegalArgumentException_init_$Init$_0 = kotlin_kotlin.$_$.n1;
  var IllegalArgumentException = kotlin_kotlin.$_$.e9;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.e4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.o;
  var toString = kotlin_kotlin.$_$.v7;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var THROW_CCE = kotlin_kotlin.$_$.k9;
  var isInterface = kotlin_kotlin.$_$.j7;
  var KClass = kotlin_kotlin.$_$.a8;
  var copyToArray = kotlin_kotlin.$_$.q4;
  var Triple = kotlin_kotlin.$_$.l9;
  var getKClass = kotlin_kotlin.$_$.e;
  var Pair = kotlin_kotlin.$_$.i9;
  var Entry = kotlin_kotlin.$_$.w3;
  var LinkedHashMap = kotlin_kotlin.$_$.t3;
  var MutableMap = kotlin_kotlin.$_$.z3;
  var Map = kotlin_kotlin.$_$.x3;
  var HashMap = kotlin_kotlin.$_$.p3;
  var LinkedHashSet = kotlin_kotlin.$_$.u3;
  var MutableSet = kotlin_kotlin.$_$.a4;
  var Set = kotlin_kotlin.$_$.b4;
  var HashSet = kotlin_kotlin.$_$.q3;
  var ArrayList = kotlin_kotlin.$_$.n3;
  var MutableList = kotlin_kotlin.$_$.y3;
  var List = kotlin_kotlin.$_$.v3;
  var Collection = kotlin_kotlin.$_$.o3;
  var equals = kotlin_kotlin.$_$.w6;
  var getStringHashCode = kotlin_kotlin.$_$.z6;
  var Iterator = kotlin_kotlin.$_$.s3;
  var Iterable = kotlin_kotlin.$_$.r3;
  var isBlank = kotlin_kotlin.$_$.g8;
  var toList = kotlin_kotlin.$_$.n5;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.p;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.v;
  var toHashSet = kotlin_kotlin.$_$.l5;
  var toBooleanArray = kotlin_kotlin.$_$.k5;
  var withIndex = kotlin_kotlin.$_$.p5;
  var to = kotlin_kotlin.$_$.ha;
  var toMap = kotlin_kotlin.$_$.o5;
  var lazy_0 = kotlin_kotlin.$_$.ba;
  var contentEquals = kotlin_kotlin.$_$.f4;
  var until = kotlin_kotlin.$_$.z7;
  var joinToString$default = kotlin_kotlin.$_$.i;
  var objectMeta = kotlin_kotlin.$_$.r7;
  var ensureNotNull = kotlin_kotlin.$_$.w9;
  var Long = kotlin_kotlin.$_$.g9;
  var Char = kotlin_kotlin.$_$.y8;
  var isObject = kotlin_kotlin.$_$.l7;
  var Duration__toIsoString_impl_9h6wsm = kotlin_kotlin.$_$.a2;
  var Duration = kotlin_kotlin.$_$.w8;
  var Companion_getInstance = kotlin_kotlin.$_$.e3;
  var toIntOrNull = kotlin_kotlin.$_$.m8;
  var hashCode = kotlin_kotlin.$_$.a7;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.p1;
  var isArray = kotlin_kotlin.$_$.c7;
  var arrayIterator = kotlin_kotlin.$_$.n6;
  var asList = kotlin_kotlin.$_$.d4;
  var ArrayList_init_$Create$_1 = kotlin_kotlin.$_$.q;
  var step = kotlin_kotlin.$_$.y7;
  var getValue = kotlin_kotlin.$_$.v4;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.s;
  var HashMap_init_$Create$_0 = kotlin_kotlin.$_$.t;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.y;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.z;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.a1;
  var LinkedHashSet_init_$Create$_0 = kotlin_kotlin.$_$.b1;
  var HashSet_init_$Create$_0 = kotlin_kotlin.$_$.w;
  var longArray = kotlin_kotlin.$_$.o7;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.g3;
  var get_lastIndex = kotlin_kotlin.$_$.y4;
  var countTrailingZeroBits = kotlin_kotlin.$_$.u9;
  var KTypeParameter = kotlin_kotlin.$_$.c8;
  var HashSet_init_$Create$_1 = kotlin_kotlin.$_$.u;
  var contentHashCode = kotlin_kotlin.$_$.g4;
  var fillArrayVal = kotlin_kotlin.$_$.x6;
  var booleanArray = kotlin_kotlin.$_$.o6;
  var emptyMap = kotlin_kotlin.$_$.s4;
  var Companion_getInstance_1 = kotlin_kotlin.$_$.f3;
  var isCharArray = kotlin_kotlin.$_$.f7;
  var charArray = kotlin_kotlin.$_$.q6;
  var DoubleCompanionObject_getInstance = kotlin_kotlin.$_$.y2;
  var isDoubleArray = kotlin_kotlin.$_$.g7;
  var FloatCompanionObject_getInstance = kotlin_kotlin.$_$.z2;
  var isFloatArray = kotlin_kotlin.$_$.h7;
  var isLongArray = kotlin_kotlin.$_$.k7;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.a3;
  var isIntArray = kotlin_kotlin.$_$.i7;
  var ShortCompanionObject_getInstance = kotlin_kotlin.$_$.b3;
  var isShortArray = kotlin_kotlin.$_$.m7;
  var ByteCompanionObject_getInstance = kotlin_kotlin.$_$.x2;
  var isByteArray = kotlin_kotlin.$_$.e7;
  var BooleanCompanionObject_getInstance = kotlin_kotlin.$_$.w2;
  var isBooleanArray = kotlin_kotlin.$_$.d7;
  var coerceAtLeast = kotlin_kotlin.$_$.w7;
  var copyOf = kotlin_kotlin.$_$.k4;
  var copyOf_0 = kotlin_kotlin.$_$.m4;
  var copyOf_1 = kotlin_kotlin.$_$.n4;
  var copyOf_2 = kotlin_kotlin.$_$.i4;
  var copyOf_3 = kotlin_kotlin.$_$.p4;
  var copyOf_4 = kotlin_kotlin.$_$.h4;
  var copyOf_5 = kotlin_kotlin.$_$.l4;
  var copyOf_6 = kotlin_kotlin.$_$.j4;
  var Unit = kotlin_kotlin.$_$.q9;
  var trimIndent = kotlin_kotlin.$_$.v8;
  var equals_0 = kotlin_kotlin.$_$.f8;
  var charSequenceLength = kotlin_kotlin.$_$.s6;
  var charSequenceGet = kotlin_kotlin.$_$.r6;
  var toString_0 = kotlin_kotlin.$_$.e2;
  var titlecase = kotlin_kotlin.$_$.j8;
  var isLowerCase = kotlin_kotlin.$_$.h8;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.d3;
  var mapOf = kotlin_kotlin.$_$.e5;
  var lastOrNull = kotlin_kotlin.$_$.a5;
  var get_lastIndex_0 = kotlin_kotlin.$_$.z4;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.m2;
  var UInt = kotlin_kotlin.$_$.n9;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.l2;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.p2;
  var ULong = kotlin_kotlin.$_$.o9;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.o2;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.j2;
  var UByte = kotlin_kotlin.$_$.m9;
  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.i2;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.s2;
  var UShort = kotlin_kotlin.$_$.p9;
  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.r2;
  var Annotation = kotlin_kotlin.$_$.x8;
  var get_indices = kotlin_kotlin.$_$.x4;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.r1;
  var get_indices_0 = kotlin_kotlin.$_$.w4;
  var get_js = kotlin_kotlin.$_$.n7;
  var findAssociatedObject = kotlin_kotlin.$_$.c;
  //endregion
  //region block: pre-declaration
  PolymorphicSerializer.prototype = Object.create(AbstractPolymorphicSerializer.prototype);
  PolymorphicSerializer.prototype.constructor = PolymorphicSerializer;
  SealedClassSerializer.prototype = Object.create(AbstractPolymorphicSerializer.prototype);
  SealedClassSerializer.prototype.constructor = SealedClassSerializer;
  SerializationException.prototype = Object.create(IllegalArgumentException.prototype);
  SerializationException.prototype.constructor = SerializationException;
  UnknownFieldException.prototype = Object.create(SerializationException.prototype);
  UnknownFieldException.prototype.constructor = UnknownFieldException;
  MissingFieldException.prototype = Object.create(SerializationException.prototype);
  MissingFieldException.prototype.constructor = MissingFieldException;
  function get_isNullable() {
    return false;
  }
  function get_isInline() {
    return false;
  }
  function get_annotations() {
    return emptyList();
  }
  ENUM.prototype = Object.create(SerialKind.prototype);
  ENUM.prototype.constructor = ENUM;
  CONTEXTUAL.prototype = Object.create(SerialKind.prototype);
  CONTEXTUAL.prototype.constructor = CONTEXTUAL;
  PolymorphicKind.prototype = Object.create(SerialKind.prototype);
  PolymorphicKind.prototype.constructor = PolymorphicKind;
  SEALED.prototype = Object.create(PolymorphicKind.prototype);
  SEALED.prototype.constructor = SEALED;
  OPEN.prototype = Object.create(PolymorphicKind.prototype);
  OPEN.prototype.constructor = OPEN;
  PrimitiveKind.prototype = Object.create(SerialKind.prototype);
  PrimitiveKind.prototype.constructor = PrimitiveKind;
  BOOLEAN.prototype = Object.create(PrimitiveKind.prototype);
  BOOLEAN.prototype.constructor = BOOLEAN;
  BYTE.prototype = Object.create(PrimitiveKind.prototype);
  BYTE.prototype.constructor = BYTE;
  CHAR.prototype = Object.create(PrimitiveKind.prototype);
  CHAR.prototype.constructor = CHAR;
  SHORT.prototype = Object.create(PrimitiveKind.prototype);
  SHORT.prototype.constructor = SHORT;
  INT.prototype = Object.create(PrimitiveKind.prototype);
  INT.prototype.constructor = INT;
  LONG.prototype = Object.create(PrimitiveKind.prototype);
  LONG.prototype.constructor = LONG;
  FLOAT.prototype = Object.create(PrimitiveKind.prototype);
  FLOAT.prototype.constructor = FLOAT;
  DOUBLE.prototype = Object.create(PrimitiveKind.prototype);
  DOUBLE.prototype.constructor = DOUBLE;
  STRING.prototype = Object.create(PrimitiveKind.prototype);
  STRING.prototype.constructor = STRING;
  StructureKind.prototype = Object.create(SerialKind.prototype);
  StructureKind.prototype.constructor = StructureKind;
  CLASS.prototype = Object.create(StructureKind.prototype);
  CLASS.prototype.constructor = CLASS;
  LIST.prototype = Object.create(StructureKind.prototype);
  LIST.prototype.constructor = LIST;
  MAP.prototype = Object.create(StructureKind.prototype);
  MAP.prototype.constructor = MAP;
  OBJECT.prototype = Object.create(StructureKind.prototype);
  OBJECT.prototype.constructor = OBJECT;
  function decodeSerializableValue(deserializer) {
    return deserializer.k1b(this);
  }
  function decodeSequentially() {
    return false;
  }
  function decodeCollectionSize(descriptor) {
    return -1;
  }
  function decodeSerializableElement$default(descriptor, index, deserializer, previousValue, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      previousValue = null;
    return $handler == null ? this.n1e(descriptor, index, deserializer, previousValue) : $handler(descriptor, index, deserializer, previousValue);
  }
  function encodeNotNullMark() {
  }
  function beginCollection(descriptor, collectionSize) {
    return this.c1e(descriptor);
  }
  function encodeSerializableValue(serializer, value) {
    serializer.j1b(this, value);
  }
  function encodeNullableSerializableValue(serializer, value) {
    var isNullabilitySupported = serializer.i1b().f1c();
    if (isNullabilitySupported) {
      return this.q1f(isInterface(serializer, SerializationStrategy) ? serializer : THROW_CCE(), value);
    }
    if (value == null) {
      this.v1e();
    } else {
      this.t1f();
      this.q1f(serializer, value);
    }
  }
  function shouldEncodeElementDefault(descriptor, index) {
    return true;
  }
  PrimitiveArrayDescriptor.prototype = Object.create(ListLikeDescriptor.prototype);
  PrimitiveArrayDescriptor.prototype.constructor = PrimitiveArrayDescriptor;
  ArrayClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  ArrayClassDesc.prototype.constructor = ArrayClassDesc;
  HashMapClassDesc.prototype = Object.create(MapLikeDescriptor.prototype);
  HashMapClassDesc.prototype.constructor = HashMapClassDesc;
  LinkedHashMapClassDesc.prototype = Object.create(MapLikeDescriptor.prototype);
  LinkedHashMapClassDesc.prototype.constructor = LinkedHashMapClassDesc;
  ArrayListClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  ArrayListClassDesc.prototype.constructor = ArrayListClassDesc;
  HashSetClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  HashSetClassDesc.prototype.constructor = HashSetClassDesc;
  LinkedHashSetClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  LinkedHashSetClassDesc.prototype.constructor = LinkedHashSetClassDesc;
  CollectionLikeSerializer.prototype = Object.create(AbstractCollectionSerializer.prototype);
  CollectionLikeSerializer.prototype.constructor = CollectionLikeSerializer;
  PrimitiveArraySerializer.prototype = Object.create(CollectionLikeSerializer.prototype);
  PrimitiveArraySerializer.prototype.constructor = PrimitiveArraySerializer;
  CollectionSerializer.prototype = Object.create(CollectionLikeSerializer.prototype);
  CollectionSerializer.prototype.constructor = CollectionSerializer;
  ReferenceArraySerializer.prototype = Object.create(CollectionLikeSerializer.prototype);
  ReferenceArraySerializer.prototype.constructor = ReferenceArraySerializer;
  MapLikeSerializer.prototype = Object.create(AbstractCollectionSerializer.prototype);
  MapLikeSerializer.prototype.constructor = MapLikeSerializer;
  HashMapSerializer.prototype = Object.create(MapLikeSerializer.prototype);
  HashMapSerializer.prototype.constructor = HashMapSerializer;
  LinkedHashMapSerializer.prototype = Object.create(MapLikeSerializer.prototype);
  LinkedHashMapSerializer.prototype.constructor = LinkedHashMapSerializer;
  LinkedHashSetSerializer.prototype = Object.create(CollectionSerializer.prototype);
  LinkedHashSetSerializer.prototype.constructor = LinkedHashSetSerializer;
  ArrayListSerializer.prototype = Object.create(CollectionSerializer.prototype);
  ArrayListSerializer.prototype.constructor = ArrayListSerializer;
  HashSetSerializer.prototype = Object.create(CollectionSerializer.prototype);
  HashSetSerializer.prototype.constructor = HashSetSerializer;
  InlineClassDescriptor.prototype = Object.create(PluginGeneratedSerialDescriptor.prototype);
  InlineClassDescriptor.prototype.constructor = InlineClassDescriptor;
  function typeParametersSerializers() {
    return get_EMPTY_SERIALIZER_ARRAY();
  }
  CharArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  CharArraySerializer_0.prototype.constructor = CharArraySerializer_0;
  DoubleArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  DoubleArraySerializer_0.prototype.constructor = DoubleArraySerializer_0;
  FloatArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  FloatArraySerializer_0.prototype.constructor = FloatArraySerializer_0;
  LongArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  LongArraySerializer_0.prototype.constructor = LongArraySerializer_0;
  IntArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  IntArraySerializer_0.prototype.constructor = IntArraySerializer_0;
  ShortArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  ShortArraySerializer_0.prototype.constructor = ShortArraySerializer_0;
  ByteArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  ByteArraySerializer_0.prototype.constructor = ByteArraySerializer_0;
  BooleanArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  BooleanArraySerializer_0.prototype.constructor = BooleanArraySerializer_0;
  CharArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  CharArrayBuilder.prototype.constructor = CharArrayBuilder;
  DoubleArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  DoubleArrayBuilder.prototype.constructor = DoubleArrayBuilder;
  FloatArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  FloatArrayBuilder.prototype.constructor = FloatArrayBuilder;
  LongArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  LongArrayBuilder.prototype.constructor = LongArrayBuilder;
  IntArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  IntArrayBuilder.prototype.constructor = IntArrayBuilder;
  ShortArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  ShortArrayBuilder.prototype.constructor = ShortArrayBuilder;
  ByteArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  ByteArrayBuilder.prototype.constructor = ByteArrayBuilder;
  BooleanArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  BooleanArrayBuilder.prototype.constructor = BooleanArrayBuilder;
  NamedValueDecoder.prototype = Object.create(TaggedDecoder.prototype);
  NamedValueDecoder.prototype.constructor = NamedValueDecoder;
  MapEntrySerializer_0.prototype = Object.create(KeyValueSerializer.prototype);
  MapEntrySerializer_0.prototype.constructor = MapEntrySerializer_0;
  PairSerializer_0.prototype = Object.create(KeyValueSerializer.prototype);
  PairSerializer_0.prototype.constructor = PairSerializer_0;
  SerialModuleImpl.prototype = Object.create(SerializersModule.prototype);
  SerialModuleImpl.prototype.constructor = SerialModuleImpl;
  Argless.prototype = Object.create(ContextualProvider.prototype);
  Argless.prototype.constructor = Argless;
  WithTypeArguments.prototype = Object.create(ContextualProvider.prototype);
  WithTypeArguments.prototype.constructor = WithTypeArguments;
  function contextual(kClass, serializer) {
    return this.p1r(kClass, SerializersModuleCollector$contextual$lambda(serializer));
  }
  //endregion
  function KSerializer() {
  }
  KSerializer.$metadata$ = interfaceMeta('KSerializer', [SerializationStrategy, DeserializationStrategy]);
  function SerializationStrategy() {
  }
  SerializationStrategy.$metadata$ = interfaceMeta('SerializationStrategy');
  function DeserializationStrategy() {
  }
  DeserializationStrategy.$metadata$ = interfaceMeta('DeserializationStrategy');
  function PolymorphicSerializer$descriptor$delegate$lambda$lambda(this$0) {
    return function ($this$buildSerialDescriptor) {
      var tmp = serializer_1(StringCompanionObject_getInstance()).i1b();
      $this$buildSerialDescriptor.t1b('type', tmp, null, false, 12, null);
      var tmp_0 = 'kotlinx.serialization.Polymorphic<' + this$0.u1b_1.xc() + '>';
      var tmp_1 = CONTEXTUAL_getInstance();
      var tmp_2 = buildSerialDescriptor$default(tmp_0, tmp_1, [], null, 12, null);
      $this$buildSerialDescriptor.t1b('value', tmp_2, null, false, 12, null);
      $this$buildSerialDescriptor.n1b_1 = this$0.v1b_1;
      return Unit_getInstance();
    };
  }
  function PolymorphicSerializer$descriptor$delegate$lambda(this$0) {
    return function () {
      var tmp = OPEN_getInstance();
      return withContext(buildSerialDescriptor$default('kotlinx.serialization.Polymorphic', tmp, [], PolymorphicSerializer$descriptor$delegate$lambda$lambda(this$0), 4, null), this$0.u1b_1);
    };
  }
  function PolymorphicSerializer(baseClass) {
    AbstractPolymorphicSerializer.call(this);
    this.u1b_1 = baseClass;
    this.v1b_1 = emptyList();
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.w1b_1 = lazy(tmp_0, PolymorphicSerializer$descriptor$delegate$lambda(this));
  }
  PolymorphicSerializer.prototype.x1b = function () {
    return this.u1b_1;
  };
  PolymorphicSerializer.prototype.i1b = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = descriptor$factory();
      tmp$ret$0 = this.w1b_1.l1();
    }
    return tmp$ret$0;
  };
  PolymorphicSerializer.prototype.toString = function () {
    return 'kotlinx.serialization.PolymorphicSerializer(baseClass: ' + this.u1b_1 + ')';
  };
  PolymorphicSerializer.$metadata$ = classMeta('PolymorphicSerializer', undefined, undefined, undefined, undefined, AbstractPolymorphicSerializer.prototype);
  function findPolymorphicSerializer(_this__u8e3s4, encoder, value) {
    var tmp0_elvis_lhs = _this__u8e3s4.z1b(encoder, value);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throwSubtypeNotRegistered(getKClassFromExpression(value), _this__u8e3s4.x1b());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function findPolymorphicSerializer_0(_this__u8e3s4, decoder, klassName) {
    var tmp0_elvis_lhs = _this__u8e3s4.y1b(decoder, klassName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throwSubtypeNotRegistered_0(klassName, _this__u8e3s4.x1b());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function descriptor$factory() {
    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
      return receiver.i1b();
    }, null);
  }
  function SealedClassSerializer() {
  }
  SealedClassSerializer.$metadata$ = classMeta('SealedClassSerializer', undefined, undefined, undefined, undefined, AbstractPolymorphicSerializer.prototype);
  function StringFormat() {
  }
  StringFormat.$metadata$ = interfaceMeta('StringFormat', [SerialFormat]);
  function SerialFormat() {
  }
  SerialFormat.$metadata$ = interfaceMeta('SerialFormat');
  function SerializationException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$(message, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException_init_$Create$(message) {
    var tmp = SerializationException_init_$Init$(message, Object.create(SerializationException.prototype));
    captureStack(tmp, SerializationException_init_$Create$);
    return tmp;
  }
  function SerializationException_init_$Init$_0(message, cause, $this) {
    IllegalArgumentException_init_$Init$_0(message, cause, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException() {
    captureStack(this, SerializationException);
  }
  SerializationException.$metadata$ = classMeta('SerializationException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function UnknownFieldException_init_$Init$(index, $this) {
    UnknownFieldException.call($this, 'An unknown field for index ' + index);
    return $this;
  }
  function UnknownFieldException_init_$Create$(index) {
    var tmp = UnknownFieldException_init_$Init$(index, Object.create(UnknownFieldException.prototype));
    captureStack(tmp, UnknownFieldException_init_$Create$);
    return tmp;
  }
  function UnknownFieldException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, UnknownFieldException);
  }
  UnknownFieldException.$metadata$ = classMeta('UnknownFieldException', undefined, undefined, undefined, undefined, SerializationException.prototype);
  function MissingFieldException_init_$Init$(missingFields, serialName, $this) {
    MissingFieldException.call($this, missingFields, missingFields.g() === 1 ? "Field '" + missingFields.h(0) + "' is required for type with serial name '" + serialName + "', but it was missing" : 'Fields ' + missingFields + " are required for type with serial name '" + serialName + "', but they were missing", null);
    return $this;
  }
  function MissingFieldException_init_$Create$(missingFields, serialName) {
    var tmp = MissingFieldException_init_$Init$(missingFields, serialName, Object.create(MissingFieldException.prototype));
    captureStack(tmp, MissingFieldException_init_$Create$);
    return tmp;
  }
  function MissingFieldException(missingFields, message, cause) {
    SerializationException_init_$Init$_0(message, cause, this);
    this.c1c_1 = missingFields;
    captureStack(this, MissingFieldException);
  }
  MissingFieldException.$metadata$ = classMeta('MissingFieldException', undefined, undefined, undefined, undefined, SerializationException.prototype);
  function serializer(_this__u8e3s4, type) {
    var tmp0_elvis_lhs = serializerByKTypeImpl(_this__u8e3s4, type, true);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      platformSpecificSerializerNotRegistered(kclass(type));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function serializerByKTypeImpl(_this__u8e3s4, type, failOnMissingTypeArgSerializer) {
    var rootClass = kclass(type);
    var isNullable = type.id();
    var tmp$ret$4;
    {
      var tmp0_map = type.hd();
      var tmp$ret$3;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator = tmp0_map.d();
        while (tmp0_iterator.e()) {
          var item = tmp0_iterator.f();
          var tmp$ret$2;
          {
            var tmp$ret$1;
            $l$block: {
              var tmp0_requireNotNull = item.r4_1;
              {
              }
              if (tmp0_requireNotNull == null) {
                var tmp$ret$0;
                {
                  tmp$ret$0 = 'Star projections in type arguments are not allowed, but had ' + type;
                }
                var message = tmp$ret$0;
                throw IllegalArgumentException_init_$Create$(toString(message));
              } else {
                tmp$ret$1 = tmp0_requireNotNull;
                break $l$block;
              }
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp0_mapTo.c(tmp$ret$2);
        }
        tmp$ret$3 = tmp0_mapTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var typeArguments = tmp$ret$4;
    var tmp;
    if (typeArguments.i()) {
      var tmp0_elvis_lhs = serializerOrNull(rootClass);
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        tmp_0 = _this__u8e3s4.d1c(rootClass, null, 2, null);
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      tmp = builtinSerializer(_this__u8e3s4, typeArguments, rootClass, failOnMissingTypeArgSerializer);
    }
    var tmp1_safe_receiver = tmp;
    var tmp_1;
    if (tmp1_safe_receiver == null) {
      tmp_1 = null;
    } else {
      var tmp$ret$5;
      {
        tmp$ret$5 = (!(tmp1_safe_receiver == null) ? isInterface(tmp1_safe_receiver, KSerializer) : false) ? tmp1_safe_receiver : THROW_CCE();
      }
      tmp_1 = tmp$ret$5;
    }
    var result = tmp_1;
    var tmp2_safe_receiver = result;
    return tmp2_safe_receiver == null ? null : nullable(tmp2_safe_receiver, isNullable);
  }
  function serializerOrNull(_this__u8e3s4) {
    var tmp0_elvis_lhs = compiledSerializerImpl(_this__u8e3s4);
    return tmp0_elvis_lhs == null ? builtinSerializerOrNull(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  function builtinSerializer(_this__u8e3s4, typeArguments, rootClass, failOnMissingTypeArgSerializer) {
    var tmp;
    if (failOnMissingTypeArgSerializer) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
          var tmp0_iterator = typeArguments.d();
          while (tmp0_iterator.e()) {
            var item = tmp0_iterator.f();
            tmp0_mapTo.c(serializer(_this__u8e3s4, item));
          }
          tmp$ret$0 = tmp0_mapTo;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    } else {
      var tmp$ret$4;
      {
        var tmp$ret$3;
        {
          var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
          var tmp0_iterator_0 = typeArguments.d();
          while (tmp0_iterator_0.e()) {
            var item_0 = tmp0_iterator_0.f();
            var tmp$ret$2;
            {
              var tmp0_elvis_lhs = serializerOrNull_0(_this__u8e3s4, item_0);
              var tmp_0;
              if (tmp0_elvis_lhs == null) {
                return null;
              } else {
                tmp_0 = tmp0_elvis_lhs;
              }
              tmp$ret$2 = tmp_0;
            }
            tmp0_mapTo_0.c(tmp$ret$2);
          }
          tmp$ret$3 = tmp0_mapTo_0;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp = tmp$ret$4;
    }
    var serializers = tmp;
    var tmp0_subject = rootClass;
    var tmp_1;
    if (((tmp0_subject.equals(getKClass(Collection)) ? true : tmp0_subject.equals(getKClass(List))) ? true : tmp0_subject.equals(getKClass(MutableList))) ? true : tmp0_subject.equals(getKClass(ArrayList))) {
      tmp_1 = new ArrayListSerializer(serializers.h(0));
    } else if (tmp0_subject.equals(getKClass(HashSet))) {
      tmp_1 = new HashSetSerializer(serializers.h(0));
    } else if ((tmp0_subject.equals(getKClass(Set)) ? true : tmp0_subject.equals(getKClass(MutableSet))) ? true : tmp0_subject.equals(getKClass(LinkedHashSet))) {
      tmp_1 = new LinkedHashSetSerializer(serializers.h(0));
    } else if (tmp0_subject.equals(getKClass(HashMap))) {
      tmp_1 = new HashMapSerializer(serializers.h(0), serializers.h(1));
    } else if ((tmp0_subject.equals(getKClass(Map)) ? true : tmp0_subject.equals(getKClass(MutableMap))) ? true : tmp0_subject.equals(getKClass(LinkedHashMap))) {
      tmp_1 = new LinkedHashMapSerializer(serializers.h(0), serializers.h(1));
    } else if (tmp0_subject.equals(getKClass(Entry))) {
      tmp_1 = MapEntrySerializer(serializers.h(0), serializers.h(1));
    } else if (tmp0_subject.equals(getKClass(Pair))) {
      tmp_1 = PairSerializer(serializers.h(0), serializers.h(1));
    } else if (tmp0_subject.equals(getKClass(Triple))) {
      tmp_1 = TripleSerializer(serializers.h(0), serializers.h(1), serializers.h(2));
    } else {
      if (isReferenceArray(rootClass)) {
        var tmp$ret$5;
        {
          var tmp_2 = typeArguments.h(0).gd();
          var tmp0_cast = ArraySerializer((!(tmp_2 == null) ? isInterface(tmp_2, KClass) : false) ? tmp_2 : THROW_CCE(), serializers.h(0));
          tmp$ret$5 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
        }
        return tmp$ret$5;
      }
      var tmp$ret$6;
      {
        tmp$ret$6 = copyToArray(serializers);
      }
      var args = tmp$ret$6;
      var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(rootClass, args.slice());
      tmp_1 = tmp1_elvis_lhs == null ? reflectiveOrContextual(_this__u8e3s4, rootClass, serializers) : tmp1_elvis_lhs;
    }
    return tmp_1;
  }
  function nullable(_this__u8e3s4, shouldBeNullable) {
    if (shouldBeNullable)
      return get_nullable(_this__u8e3s4);
    return isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
  }
  function serializerOrNull_0(_this__u8e3s4, type) {
    return serializerByKTypeImpl(_this__u8e3s4, type, false);
  }
  function reflectiveOrContextual(_this__u8e3s4, kClass, typeArgumentsSerializers) {
    var tmp0_elvis_lhs = serializerOrNull(kClass);
    return tmp0_elvis_lhs == null ? _this__u8e3s4.e1c(kClass, typeArgumentsSerializers) : tmp0_elvis_lhs;
  }
  function serializer_0(type) {
    return serializer(EmptySerializersModule_0(), type);
  }
  function serializer_1(_this__u8e3s4) {
    return StringSerializer_getInstance();
  }
  function serializer_2(_this__u8e3s4) {
    return CharSerializer_getInstance();
  }
  function CharArraySerializer() {
    return CharArraySerializer_getInstance();
  }
  function serializer_3(_this__u8e3s4) {
    return DoubleSerializer_getInstance();
  }
  function DoubleArraySerializer() {
    return DoubleArraySerializer_getInstance();
  }
  function serializer_4(_this__u8e3s4) {
    return FloatSerializer_getInstance();
  }
  function FloatArraySerializer() {
    return FloatArraySerializer_getInstance();
  }
  function serializer_5(_this__u8e3s4) {
    return LongSerializer_getInstance();
  }
  function LongArraySerializer() {
    return LongArraySerializer_getInstance();
  }
  function serializer_6(_this__u8e3s4) {
    return IntSerializer_getInstance();
  }
  function IntArraySerializer() {
    return IntArraySerializer_getInstance();
  }
  function serializer_7(_this__u8e3s4) {
    return ShortSerializer_getInstance();
  }
  function ShortArraySerializer() {
    return ShortArraySerializer_getInstance();
  }
  function serializer_8(_this__u8e3s4) {
    return ByteSerializer_getInstance();
  }
  function ByteArraySerializer() {
    return ByteArraySerializer_getInstance();
  }
  function serializer_9(_this__u8e3s4) {
    return BooleanSerializer_getInstance();
  }
  function BooleanArraySerializer() {
    return BooleanArraySerializer_getInstance();
  }
  function serializer_10(_this__u8e3s4) {
    return UnitSerializer_getInstance();
  }
  function serializer_11(_this__u8e3s4) {
    return DurationSerializer_getInstance();
  }
  function serializer_12(_this__u8e3s4) {
    return UIntSerializer_getInstance();
  }
  function serializer_13(_this__u8e3s4) {
    return ULongSerializer_getInstance();
  }
  function serializer_14(_this__u8e3s4) {
    return UByteSerializer_getInstance();
  }
  function serializer_15(_this__u8e3s4) {
    return UShortSerializer_getInstance();
  }
  function MapEntrySerializer(keySerializer, valueSerializer) {
    return new MapEntrySerializer_0(keySerializer, valueSerializer);
  }
  function PairSerializer(keySerializer, valueSerializer) {
    return new PairSerializer_0(keySerializer, valueSerializer);
  }
  function TripleSerializer(aSerializer, bSerializer, cSerializer) {
    return new TripleSerializer_0(aSerializer, bSerializer, cSerializer);
  }
  function ArraySerializer(kClass, elementSerializer) {
    return new ReferenceArraySerializer(kClass, elementSerializer);
  }
  function get_nullable(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4.i1b().f1c()) {
      tmp = isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
    } else {
      tmp = new NullableSerializer(_this__u8e3s4);
    }
    return tmp;
  }
  function ListSerializer(elementSerializer) {
    return new ArrayListSerializer(elementSerializer);
  }
  function MapSerializer(keySerializer, valueSerializer) {
    return new LinkedHashMapSerializer(keySerializer, valueSerializer);
  }
  function withContext(_this__u8e3s4, context) {
    return new ContextDescriptor(_this__u8e3s4, context);
  }
  function ContextDescriptor(original, kClass) {
    this.g1c_1 = original;
    this.h1c_1 = kClass;
    this.i1c_1 = this.g1c_1.j1c() + '<' + this.h1c_1.xc() + '>';
  }
  ContextDescriptor.prototype.k1c = function () {
    return this.g1c_1.k1c();
  };
  ContextDescriptor.prototype.l1c = function () {
    return this.g1c_1.l1c();
  };
  ContextDescriptor.prototype.m1c = function () {
    return this.g1c_1.m1c();
  };
  ContextDescriptor.prototype.f1c = function () {
    return this.g1c_1.f1c();
  };
  ContextDescriptor.prototype.n1c = function () {
    return this.g1c_1.n1c();
  };
  ContextDescriptor.prototype.o1c = function (index) {
    return this.g1c_1.o1c(index);
  };
  ContextDescriptor.prototype.p1c = function (index) {
    return this.g1c_1.p1c(index);
  };
  ContextDescriptor.prototype.q1c = function (name) {
    return this.g1c_1.q1c(name);
  };
  ContextDescriptor.prototype.r1c = function (index) {
    return this.g1c_1.r1c(index);
  };
  ContextDescriptor.prototype.s1c = function (index) {
    return this.g1c_1.s1c(index);
  };
  ContextDescriptor.prototype.j1c = function () {
    return this.i1c_1;
  };
  ContextDescriptor.prototype.equals = function (other) {
    var tmp0_elvis_lhs = other instanceof ContextDescriptor ? other : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var another = tmp;
    return equals(this.g1c_1, another.g1c_1) ? another.h1c_1.equals(this.h1c_1) : false;
  };
  ContextDescriptor.prototype.hashCode = function () {
    var result = this.h1c_1.hashCode();
    result = imul(31, result) + getStringHashCode(this.i1c_1) | 0;
    return result;
  };
  ContextDescriptor.prototype.toString = function () {
    return 'ContextDescriptor(kClass: ' + this.h1c_1 + ', original: ' + this.g1c_1 + ')';
  };
  ContextDescriptor.$metadata$ = classMeta('ContextDescriptor', [SerialDescriptor]);
  function getContextualDescriptor(_this__u8e3s4, descriptor) {
    var tmp0_safe_receiver = get_capturedKClass(descriptor);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var tmp0_safe_receiver_0 = _this__u8e3s4.d1c(tmp0_safe_receiver, null, 2, null);
          tmp$ret$0 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.i1b();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function get_capturedKClass(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof ContextDescriptor) {
      tmp = _this__u8e3s4.h1c_1;
    } else {
      if (tmp0_subject instanceof SerialDescriptorForNullable) {
        tmp = get_capturedKClass(_this__u8e3s4.t1c_1);
      } else {
        tmp = null;
      }
    }
    return tmp;
  }
  function SerialDescriptor() {
  }
  SerialDescriptor.$metadata$ = interfaceMeta('SerialDescriptor');
  function get_elementDescriptors(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  function elementDescriptors$1$1($this_elementDescriptors) {
    this.x1c_1 = $this_elementDescriptors;
    this.w1c_1 = $this_elementDescriptors.l1c();
  }
  elementDescriptors$1$1.prototype.e = function () {
    return this.w1c_1 > 0;
  };
  elementDescriptors$1$1.prototype.f = function () {
    var tmp = this.x1c_1.l1c();
    var tmp0_this = this;
    var tmp1 = tmp0_this.w1c_1;
    tmp0_this.w1c_1 = tmp1 - 1 | 0;
    return this.x1c_1.p1c(tmp - tmp1 | 0);
  };
  elementDescriptors$1$1.$metadata$ = classMeta(undefined, [Iterator]);
  function _no_name_provided__qut3iv($this_elementDescriptors) {
    this.y1c_1 = $this_elementDescriptors;
  }
  _no_name_provided__qut3iv.prototype.d = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = new elementDescriptors$1$1(this.y1c_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Iterable]);
  function buildSerialDescriptor(serialName, kind, typeParameters, builder) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = !isBlank(serialName);
      }
      var tmp0_require = tmp$ret$0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Blank serial names are prohibited';
        }
        var message = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    {
      var tmp1_require = !equals(kind, CLASS_getInstance());
      {
      }
      if (!tmp1_require) {
        var tmp$ret$2;
        {
          tmp$ret$2 = "For StructureKind.CLASS please use 'buildClassSerialDescriptor' instead";
        }
        var message_0 = tmp$ret$2;
        throw IllegalArgumentException_init_$Create$(toString(message_0));
      }
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builder(sdBuilder);
    return new SerialDescriptorImpl(serialName, kind, sdBuilder.o1b_1.g(), toList(typeParameters), sdBuilder);
  }
  function buildSerialDescriptor$default(serialName, kind, typeParameters, builder, $mask0, $handler) {
    if (!(($mask0 & 8) === 0)) {
      builder = buildSerialDescriptor$lambda();
    }
    return buildSerialDescriptor(serialName, kind, typeParameters, builder);
  }
  function ClassSerialDescriptorBuilder(serialName) {
    this.l1b_1 = serialName;
    this.m1b_1 = false;
    this.n1b_1 = emptyList();
    this.o1b_1 = ArrayList_init_$Create$_0();
    this.p1b_1 = HashSet_init_$Create$();
    this.q1b_1 = ArrayList_init_$Create$_0();
    this.r1b_1 = ArrayList_init_$Create$_0();
    this.s1b_1 = ArrayList_init_$Create$_0();
  }
  ClassSerialDescriptorBuilder.prototype.z1c = function (elementName, descriptor, annotations, isOptional) {
    {
      var tmp0_require = this.p1b_1.c(elementName);
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = "Element with name '" + elementName + "' is already registered";
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var tmp0_this = this;
    {
      var tmp1_plusAssign = tmp0_this.o1b_1;
      tmp1_plusAssign.c(elementName);
    }
    var tmp1_this = this;
    {
      var tmp2_plusAssign = tmp1_this.q1b_1;
      tmp2_plusAssign.c(descriptor);
    }
    var tmp2_this = this;
    {
      var tmp3_plusAssign = tmp2_this.r1b_1;
      tmp3_plusAssign.c(annotations);
    }
    var tmp3_this = this;
    {
      var tmp4_plusAssign = tmp3_this.s1b_1;
      tmp4_plusAssign.c(isOptional);
    }
  };
  ClassSerialDescriptorBuilder.prototype.t1b = function (elementName, descriptor, annotations, isOptional, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      annotations = emptyList();
    if (!(($mask0 & 8) === 0))
      isOptional = false;
    return this.z1c(elementName, descriptor, annotations, isOptional);
  };
  ClassSerialDescriptorBuilder.$metadata$ = classMeta('ClassSerialDescriptorBuilder');
  function _get__hashCode__tgwhef($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = _hashCode$factory();
      tmp$ret$0 = $this.l1d_1.l1();
    }
    return tmp$ret$0;
  }
  function SerialDescriptorImpl$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.k1d_1);
    };
  }
  function SerialDescriptorImpl$toString$lambda(this$0) {
    return function (it) {
      return this$0.r1c(it) + ': ' + this$0.p1c(it).j1c();
    };
  }
  function SerialDescriptorImpl(serialName, kind, elementsCount, typeParameters, builder) {
    this.a1d_1 = serialName;
    this.b1d_1 = kind;
    this.c1d_1 = elementsCount;
    this.d1d_1 = builder.n1b_1;
    this.e1d_1 = toHashSet(builder.o1b_1);
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_toTypedArray = builder.o1b_1;
      tmp$ret$0 = copyToArray(tmp0_toTypedArray);
    }
    tmp.f1d_1 = tmp$ret$0;
    this.g1d_1 = compactArray(builder.q1b_1);
    var tmp_0 = this;
    var tmp$ret$1;
    {
      var tmp0_toTypedArray_0 = builder.r1b_1;
      tmp$ret$1 = copyToArray(tmp0_toTypedArray_0);
    }
    tmp_0.h1d_1 = tmp$ret$1;
    this.i1d_1 = toBooleanArray(builder.s1b_1);
    var tmp_1 = this;
    var tmp$ret$4;
    {
      var tmp0_map = withIndex(this.f1d_1);
      var tmp$ret$3;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator = tmp0_map.d();
        while (tmp0_iterator.e()) {
          var item = tmp0_iterator.f();
          var tmp$ret$2;
          {
            tmp$ret$2 = to(item.g2_1, item.f2_1);
          }
          tmp0_mapTo.c(tmp$ret$2);
        }
        tmp$ret$3 = tmp0_mapTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    tmp_1.j1d_1 = toMap(tmp$ret$4);
    this.k1d_1 = compactArray(typeParameters);
    var tmp_2 = this;
    tmp_2.l1d_1 = lazy_0(SerialDescriptorImpl$_hashCode$delegate$lambda(this));
  }
  SerialDescriptorImpl.prototype.j1c = function () {
    return this.a1d_1;
  };
  SerialDescriptorImpl.prototype.n1c = function () {
    return this.b1d_1;
  };
  SerialDescriptorImpl.prototype.l1c = function () {
    return this.c1d_1;
  };
  SerialDescriptorImpl.prototype.k1c = function () {
    return this.d1d_1;
  };
  SerialDescriptorImpl.prototype.m1d = function () {
    return this.e1d_1;
  };
  SerialDescriptorImpl.prototype.r1c = function (index) {
    return getChecked(this.f1d_1, index);
  };
  SerialDescriptorImpl.prototype.q1c = function (name) {
    var tmp0_elvis_lhs = this.j1d_1.v1(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_2();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  SerialDescriptorImpl.prototype.o1c = function (index) {
    return getChecked(this.h1d_1, index);
  };
  SerialDescriptorImpl.prototype.p1c = function (index) {
    return getChecked(this.g1d_1, index);
  };
  SerialDescriptorImpl.prototype.s1c = function (index) {
    return getChecked_0(this.i1d_1, index);
  };
  SerialDescriptorImpl.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof SerialDescriptorImpl)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.j1c() === other.j1c())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      {
        var tmp0__anonymous__q1qw7t = other;
        tmp$ret$1 = contentEquals(this.k1d_1, tmp0__anonymous__q1qw7t.k1d_1);
      }
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.l1c() === other.l1c())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.l1c();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.p1c(index).j1c() === other.p1c(index).j1c())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.p1c(index).n1c(), other.p1c(index).n1c())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  SerialDescriptorImpl.prototype.hashCode = function () {
    return _get__hashCode__tgwhef(this);
  };
  SerialDescriptorImpl.prototype.toString = function () {
    var tmp = until(0, this.c1d_1);
    var tmp_0 = this.a1d_1 + '(';
    return joinToString$default(tmp, ', ', tmp_0, ')', 0, null, SerialDescriptorImpl$toString$lambda(this), 24, null);
  };
  SerialDescriptorImpl.$metadata$ = classMeta('SerialDescriptorImpl', [SerialDescriptor, CachedNames]);
  function buildClassSerialDescriptor(serialName, typeParameters, builderAction) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = !isBlank(serialName);
      }
      var tmp0_require = tmp$ret$0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Blank serial names are prohibited';
        }
        var message = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builderAction(sdBuilder);
    return new SerialDescriptorImpl(serialName, CLASS_getInstance(), sdBuilder.o1b_1.g(), toList(typeParameters), sdBuilder);
  }
  function buildClassSerialDescriptor$default(serialName, typeParameters, builderAction, $mask0, $handler) {
    if (!(($mask0 & 4) === 0)) {
      builderAction = buildClassSerialDescriptor$lambda();
    }
    return buildClassSerialDescriptor(serialName, typeParameters, builderAction);
  }
  function PrimitiveSerialDescriptor(serialName, kind) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = !isBlank(serialName);
      }
      var tmp0_require = tmp$ret$0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Blank serial names are prohibited';
        }
        var message = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return PrimitiveDescriptorSafe(serialName, kind);
  }
  function buildSerialDescriptor$lambda() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function buildClassSerialDescriptor$lambda() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function _hashCode$factory() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef(receiver);
    }, null);
  }
  function ENUM() {
    ENUM_instance = this;
    SerialKind.call(this);
  }
  ENUM.$metadata$ = objectMeta('ENUM', undefined, undefined, undefined, undefined, SerialKind.prototype);
  var ENUM_instance;
  function ENUM_getInstance() {
    if (ENUM_instance == null)
      new ENUM();
    return ENUM_instance;
  }
  function CONTEXTUAL() {
    CONTEXTUAL_instance = this;
    SerialKind.call(this);
  }
  CONTEXTUAL.$metadata$ = objectMeta('CONTEXTUAL', undefined, undefined, undefined, undefined, SerialKind.prototype);
  var CONTEXTUAL_instance;
  function CONTEXTUAL_getInstance() {
    if (CONTEXTUAL_instance == null)
      new CONTEXTUAL();
    return CONTEXTUAL_instance;
  }
  function SerialKind() {
  }
  SerialKind.prototype.toString = function () {
    return ensureNotNull(getKClassFromExpression(this).xc());
  };
  SerialKind.prototype.hashCode = function () {
    return getStringHashCode(this.toString());
  };
  SerialKind.$metadata$ = classMeta('SerialKind');
  function SEALED() {
    SEALED_instance = this;
    PolymorphicKind.call(this);
  }
  SEALED.$metadata$ = objectMeta('SEALED', undefined, undefined, undefined, undefined, PolymorphicKind.prototype);
  var SEALED_instance;
  function SEALED_getInstance() {
    if (SEALED_instance == null)
      new SEALED();
    return SEALED_instance;
  }
  function OPEN() {
    OPEN_instance = this;
    PolymorphicKind.call(this);
  }
  OPEN.$metadata$ = objectMeta('OPEN', undefined, undefined, undefined, undefined, PolymorphicKind.prototype);
  var OPEN_instance;
  function OPEN_getInstance() {
    if (OPEN_instance == null)
      new OPEN();
    return OPEN_instance;
  }
  function PolymorphicKind() {
    SerialKind.call(this);
  }
  PolymorphicKind.$metadata$ = classMeta('PolymorphicKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function BOOLEAN() {
    BOOLEAN_instance = this;
    PrimitiveKind.call(this);
  }
  BOOLEAN.$metadata$ = objectMeta('BOOLEAN', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var BOOLEAN_instance;
  function BOOLEAN_getInstance() {
    if (BOOLEAN_instance == null)
      new BOOLEAN();
    return BOOLEAN_instance;
  }
  function BYTE() {
    BYTE_instance = this;
    PrimitiveKind.call(this);
  }
  BYTE.$metadata$ = objectMeta('BYTE', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var BYTE_instance;
  function BYTE_getInstance() {
    if (BYTE_instance == null)
      new BYTE();
    return BYTE_instance;
  }
  function CHAR() {
    CHAR_instance = this;
    PrimitiveKind.call(this);
  }
  CHAR.$metadata$ = objectMeta('CHAR', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var CHAR_instance;
  function CHAR_getInstance() {
    if (CHAR_instance == null)
      new CHAR();
    return CHAR_instance;
  }
  function SHORT() {
    SHORT_instance = this;
    PrimitiveKind.call(this);
  }
  SHORT.$metadata$ = objectMeta('SHORT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var SHORT_instance;
  function SHORT_getInstance() {
    if (SHORT_instance == null)
      new SHORT();
    return SHORT_instance;
  }
  function INT() {
    INT_instance = this;
    PrimitiveKind.call(this);
  }
  INT.$metadata$ = objectMeta('INT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var INT_instance;
  function INT_getInstance() {
    if (INT_instance == null)
      new INT();
    return INT_instance;
  }
  function LONG() {
    LONG_instance = this;
    PrimitiveKind.call(this);
  }
  LONG.$metadata$ = objectMeta('LONG', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var LONG_instance;
  function LONG_getInstance() {
    if (LONG_instance == null)
      new LONG();
    return LONG_instance;
  }
  function FLOAT() {
    FLOAT_instance = this;
    PrimitiveKind.call(this);
  }
  FLOAT.$metadata$ = objectMeta('FLOAT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var FLOAT_instance;
  function FLOAT_getInstance() {
    if (FLOAT_instance == null)
      new FLOAT();
    return FLOAT_instance;
  }
  function DOUBLE() {
    DOUBLE_instance = this;
    PrimitiveKind.call(this);
  }
  DOUBLE.$metadata$ = objectMeta('DOUBLE', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var DOUBLE_instance;
  function DOUBLE_getInstance() {
    if (DOUBLE_instance == null)
      new DOUBLE();
    return DOUBLE_instance;
  }
  function STRING() {
    STRING_instance = this;
    PrimitiveKind.call(this);
  }
  STRING.$metadata$ = objectMeta('STRING', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var STRING_instance;
  function STRING_getInstance() {
    if (STRING_instance == null)
      new STRING();
    return STRING_instance;
  }
  function PrimitiveKind() {
    SerialKind.call(this);
  }
  PrimitiveKind.$metadata$ = classMeta('PrimitiveKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function CLASS() {
    CLASS_instance = this;
    StructureKind.call(this);
  }
  CLASS.$metadata$ = objectMeta('CLASS', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var CLASS_instance;
  function CLASS_getInstance() {
    if (CLASS_instance == null)
      new CLASS();
    return CLASS_instance;
  }
  function LIST() {
    LIST_instance = this;
    StructureKind.call(this);
  }
  LIST.$metadata$ = objectMeta('LIST', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var LIST_instance;
  function LIST_getInstance() {
    if (LIST_instance == null)
      new LIST();
    return LIST_instance;
  }
  function MAP() {
    MAP_instance = this;
    StructureKind.call(this);
  }
  MAP.$metadata$ = objectMeta('MAP', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var MAP_instance;
  function MAP_getInstance() {
    if (MAP_instance == null)
      new MAP();
    return MAP_instance;
  }
  function OBJECT() {
    OBJECT_instance = this;
    StructureKind.call(this);
  }
  OBJECT.$metadata$ = objectMeta('OBJECT', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var OBJECT_instance;
  function OBJECT_getInstance() {
    if (OBJECT_instance == null)
      new OBJECT();
    return OBJECT_instance;
  }
  function StructureKind() {
    SerialKind.call(this);
  }
  StructureKind.$metadata$ = classMeta('StructureKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function AbstractDecoder() {
  }
  AbstractDecoder.prototype.n1d = function () {
    throw SerializationException_init_$Create$('' + getKClassFromExpression(this) + " can't retrieve untyped values");
  };
  AbstractDecoder.prototype.o1d = function () {
    return true;
  };
  AbstractDecoder.prototype.p1d = function () {
    return null;
  };
  AbstractDecoder.prototype.q1d = function () {
    var tmp = this.n1d();
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.r1d = function () {
    var tmp = this.n1d();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.s1d = function () {
    var tmp = this.n1d();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.t1d = function () {
    var tmp = this.n1d();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.u1d = function () {
    var tmp = this.n1d();
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.v1d = function () {
    var tmp = this.n1d();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.w1d = function () {
    var tmp = this.n1d();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.x1d = function () {
    var tmp = this.n1d();
    return tmp instanceof Char ? tmp.x_1 : THROW_CCE();
  };
  AbstractDecoder.prototype.y1d = function () {
    var tmp = this.n1d();
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.z1d = function (descriptor) {
    return this;
  };
  AbstractDecoder.prototype.a1e = function (deserializer, previousValue) {
    return this.b1e(deserializer);
  };
  AbstractDecoder.prototype.c1e = function (descriptor) {
    return this;
  };
  AbstractDecoder.prototype.d1e = function (descriptor) {
  };
  AbstractDecoder.prototype.e1e = function (descriptor, index) {
    return this.q1d();
  };
  AbstractDecoder.prototype.f1e = function (descriptor, index) {
    return this.r1d();
  };
  AbstractDecoder.prototype.g1e = function (descriptor, index) {
    return this.s1d();
  };
  AbstractDecoder.prototype.h1e = function (descriptor, index) {
    return this.t1d();
  };
  AbstractDecoder.prototype.i1e = function (descriptor, index) {
    return this.u1d();
  };
  AbstractDecoder.prototype.j1e = function (descriptor, index) {
    return this.v1d();
  };
  AbstractDecoder.prototype.k1e = function (descriptor, index) {
    return this.w1d();
  };
  AbstractDecoder.prototype.l1e = function (descriptor, index) {
    return this.x1d();
  };
  AbstractDecoder.prototype.m1e = function (descriptor, index) {
    return this.y1d();
  };
  AbstractDecoder.prototype.n1e = function (descriptor, index, deserializer, previousValue) {
    return this.a1e(deserializer, previousValue);
  };
  AbstractDecoder.prototype.p1e = function (descriptor, index, deserializer, previousValue) {
    var isNullabilitySupported = deserializer.i1b().f1c();
    return (isNullabilitySupported ? true : this.o1d()) ? this.a1e(deserializer, previousValue) : this.p1d();
  };
  AbstractDecoder.$metadata$ = classMeta('AbstractDecoder', [Decoder, CompositeDecoder]);
  function AbstractEncoder() {
  }
  AbstractEncoder.prototype.c1e = function (descriptor) {
    return this;
  };
  AbstractEncoder.prototype.d1e = function (descriptor) {
  };
  AbstractEncoder.prototype.t1e = function (descriptor, index) {
    return true;
  };
  AbstractEncoder.prototype.u1e = function (value) {
    throw SerializationException_init_$Create$('Non-serializable ' + getKClassFromExpression(value) + ' is not supported by ' + getKClassFromExpression(this) + ' encoder');
  };
  AbstractEncoder.prototype.v1e = function () {
    throw SerializationException_init_$Create$("'null' is not supported by default");
  };
  AbstractEncoder.prototype.w1e = function (value) {
    return this.u1e(value);
  };
  AbstractEncoder.prototype.x1e = function (value) {
    return this.u1e(value);
  };
  AbstractEncoder.prototype.y1e = function (value) {
    return this.u1e(value);
  };
  AbstractEncoder.prototype.z1e = function (value) {
    return this.u1e(value);
  };
  AbstractEncoder.prototype.a1f = function (value) {
    return this.u1e(value);
  };
  AbstractEncoder.prototype.b1f = function (value) {
    return this.u1e(value);
  };
  AbstractEncoder.prototype.c1f = function (value) {
    return this.u1e(value);
  };
  AbstractEncoder.prototype.d1f = function (value) {
    return this.u1e(new Char(value));
  };
  AbstractEncoder.prototype.e1f = function (value) {
    return this.u1e(value);
  };
  AbstractEncoder.prototype.f1f = function (descriptor) {
    return this;
  };
  AbstractEncoder.prototype.g1f = function (descriptor, index, value) {
    if (this.t1e(descriptor, index))
      this.w1e(value);
  };
  AbstractEncoder.prototype.h1f = function (descriptor, index, value) {
    if (this.t1e(descriptor, index))
      this.x1e(value);
  };
  AbstractEncoder.prototype.i1f = function (descriptor, index, value) {
    if (this.t1e(descriptor, index))
      this.y1e(value);
  };
  AbstractEncoder.prototype.j1f = function (descriptor, index, value) {
    if (this.t1e(descriptor, index))
      this.z1e(value);
  };
  AbstractEncoder.prototype.k1f = function (descriptor, index, value) {
    if (this.t1e(descriptor, index))
      this.a1f(value);
  };
  AbstractEncoder.prototype.l1f = function (descriptor, index, value) {
    if (this.t1e(descriptor, index))
      this.b1f(value);
  };
  AbstractEncoder.prototype.m1f = function (descriptor, index, value) {
    if (this.t1e(descriptor, index))
      this.c1f(value);
  };
  AbstractEncoder.prototype.n1f = function (descriptor, index, value) {
    if (this.t1e(descriptor, index))
      this.d1f(value);
  };
  AbstractEncoder.prototype.o1f = function (descriptor, index, value) {
    if (this.t1e(descriptor, index))
      this.e1f(value);
  };
  AbstractEncoder.prototype.p1f = function (descriptor, index, serializer, value) {
    if (this.t1e(descriptor, index))
      this.q1f(serializer, value);
  };
  AbstractEncoder.prototype.r1f = function (descriptor, index, serializer, value) {
    if (this.t1e(descriptor, index))
      this.s1f(serializer, value);
  };
  AbstractEncoder.$metadata$ = classMeta('AbstractEncoder', [Encoder, CompositeEncoder]);
  function Decoder() {
  }
  Decoder.$metadata$ = interfaceMeta('Decoder');
  function Companion() {
    Companion_instance = this;
    this.w1f_1 = -1;
    this.x1f_1 = -3;
  }
  Companion.prototype.y1f = function () {
    return this.w1f_1;
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_2() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function CompositeDecoder() {
  }
  CompositeDecoder.$metadata$ = interfaceMeta('CompositeDecoder');
  function decodeStructure(_this__u8e3s4, descriptor, block) {
    var composite = _this__u8e3s4.c1e(descriptor);
    var result = block(composite);
    composite.d1e(descriptor);
    return result;
  }
  function Encoder() {
  }
  Encoder.$metadata$ = interfaceMeta('Encoder');
  function CompositeEncoder() {
  }
  CompositeEncoder.$metadata$ = interfaceMeta('CompositeEncoder');
  function encodeCollection(_this__u8e3s4, descriptor, collectionSize, block) {
    var composite = _this__u8e3s4.u1f(descriptor, collectionSize);
    block(composite);
    composite.d1e(descriptor);
  }
  function encodeStructure(_this__u8e3s4, descriptor, block) {
    var composite = _this__u8e3s4.c1e(descriptor);
    block(composite);
    composite.d1e(descriptor);
  }
  function decodeSequentially_0($this, compositeDecoder) {
    var klassName = compositeDecoder.m1e($this.i1b(), 0);
    var serializer = findPolymorphicSerializer_0($this, compositeDecoder, klassName);
    var tmp = $this.i1b();
    return compositeDecoder.o1e(tmp, 1, serializer, null, 8, null);
  }
  function AbstractPolymorphicSerializer() {
  }
  AbstractPolymorphicSerializer.prototype.j1b = function (encoder, value) {
    var actualSerializer = findPolymorphicSerializer(this, encoder, value);
    {
      var tmp0_encodeStructure = this.i1b();
      var composite = encoder.c1e(tmp0_encodeStructure);
      {
        composite.o1f(this.i1b(), 0, actualSerializer.i1b().j1c());
        var tmp = this.i1b();
        var tmp$ret$0;
        {
          tmp$ret$0 = isInterface(actualSerializer, SerializationStrategy) ? actualSerializer : THROW_CCE();
        }
        composite.p1f(tmp, 1, tmp$ret$0, value);
      }
      composite.d1e(tmp0_encodeStructure);
    }
  };
  AbstractPolymorphicSerializer.prototype.k1b = function (decoder) {
    var tmp$ret$5;
    {
      var tmp0_decodeStructure = this.i1b();
      var composite = decoder.c1e(tmp0_decodeStructure);
      var tmp$ret$0;
      $l$block: {
        var klassName = null;
        var value = null;
        if (composite.q1e()) {
          tmp$ret$0 = decodeSequentially_0(this, composite);
          break $l$block;
        }
        mainLoop: while (true) {
          var index = composite.r1e(this.i1b());
          Companion_getInstance_2();
          if (index === -1) {
            break mainLoop;
          } else {
            if (index === 0) {
              klassName = composite.m1e(this.i1b(), index);
            } else {
              if (index === 1) {
                var tmp$ret$2;
                $l$block_0: {
                  var tmp0_requireNotNull = klassName;
                  {
                  }
                  if (tmp0_requireNotNull == null) {
                    var tmp$ret$1;
                    {
                      tmp$ret$1 = 'Cannot read polymorphic value before its type token';
                    }
                    var message = tmp$ret$1;
                    throw IllegalArgumentException_init_$Create$(toString(message));
                  } else {
                    tmp$ret$2 = tmp0_requireNotNull;
                    break $l$block_0;
                  }
                }
                klassName = tmp$ret$2;
                var serializer = findPolymorphicSerializer_0(this, composite, klassName);
                var tmp = this.i1b();
                value = composite.o1e(tmp, index, serializer, null, 8, null);
              } else {
                var tmp0_elvis_lhs = klassName;
                throw SerializationException_init_$Create$('Invalid index in polymorphic deserialization of ' + (tmp0_elvis_lhs == null ? 'unknown class' : tmp0_elvis_lhs) + ('\n Expected 0, 1 or DECODE_DONE(-1), but found ' + index));
              }
            }
          }
        }
        var tmp$ret$4;
        $l$block_1: {
          var tmp1_requireNotNull = value;
          {
          }
          if (tmp1_requireNotNull == null) {
            var tmp$ret$3;
            {
              tmp$ret$3 = 'Polymorphic value has not been read for class ' + klassName;
            }
            var message_0 = tmp$ret$3;
            throw IllegalArgumentException_init_$Create$(toString(message_0));
          } else {
            tmp$ret$4 = tmp1_requireNotNull;
            break $l$block_1;
          }
        }
        var tmp_0 = tmp$ret$4;
        tmp$ret$0 = isObject(tmp_0) ? tmp_0 : THROW_CCE();
      }
      var result = tmp$ret$0;
      composite.d1e(tmp0_decodeStructure);
      tmp$ret$5 = result;
    }
    return tmp$ret$5;
  };
  AbstractPolymorphicSerializer.prototype.y1b = function (decoder, klassName) {
    return decoder.b1c().z1f(this.x1b(), klassName);
  };
  AbstractPolymorphicSerializer.prototype.z1b = function (encoder, value) {
    return encoder.b1c().a1g(this.x1b(), value);
  };
  AbstractPolymorphicSerializer.$metadata$ = classMeta('AbstractPolymorphicSerializer', [KSerializer]);
  function throwSubtypeNotRegistered(subClass, baseClass) {
    var tmp0_elvis_lhs = subClass.xc();
    throwSubtypeNotRegistered_0(tmp0_elvis_lhs == null ? '' + subClass : tmp0_elvis_lhs, baseClass);
  }
  function throwSubtypeNotRegistered_0(subClassName, baseClass) {
    var scope = "in the scope of '" + baseClass.xc() + "'";
    throw SerializationException_init_$Create$(subClassName == null ? 'Class discriminator was missing and no default polymorphic serializers were registered ' + scope : "Class '" + subClassName + "' is not registered for polymorphic serialization " + scope + '.\n' + "Mark the base class as 'sealed' or register the serializer explicitly.");
  }
  function DurationSerializer() {
    DurationSerializer_instance = this;
    this.b1g_1 = new PrimitiveSerialDescriptor_0('kotlin.time.Duration', STRING_getInstance());
  }
  DurationSerializer.prototype.i1b = function () {
    return this.b1g_1;
  };
  DurationSerializer.prototype.c1g = function (encoder, value) {
    encoder.e1f(Duration__toIsoString_impl_9h6wsm(value));
  };
  DurationSerializer.prototype.j1b = function (encoder, value) {
    return this.c1g(encoder, value instanceof Duration ? value.y5_1 : THROW_CCE());
  };
  DurationSerializer.prototype.d1g = function (decoder) {
    return Companion_getInstance().w5(decoder.y1d());
  };
  DurationSerializer.prototype.k1b = function (decoder) {
    return new Duration(this.d1g(decoder));
  };
  DurationSerializer.$metadata$ = objectMeta('DurationSerializer', [KSerializer]);
  var DurationSerializer_instance;
  function DurationSerializer_getInstance() {
    if (DurationSerializer_instance == null)
      new DurationSerializer();
    return DurationSerializer_instance;
  }
  function CachedNames() {
  }
  CachedNames.$metadata$ = interfaceMeta('CachedNames');
  function PrimitiveArrayDescriptor(primitive) {
    ListLikeDescriptor.call(this, primitive);
    this.g1g_1 = primitive.j1c() + 'Array';
  }
  PrimitiveArrayDescriptor.prototype.j1c = function () {
    return this.g1g_1;
  };
  PrimitiveArrayDescriptor.$metadata$ = classMeta('PrimitiveArrayDescriptor', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function ArrayClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayClassDesc.prototype.j1c = function () {
    return 'kotlin.Array';
  };
  ArrayClassDesc.$metadata$ = classMeta('ArrayClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function HashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.HashMap', keyDesc, valueDesc);
  }
  HashMapClassDesc.$metadata$ = classMeta('HashMapClassDesc', undefined, undefined, undefined, undefined, MapLikeDescriptor.prototype);
  function LinkedHashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.LinkedHashMap', keyDesc, valueDesc);
  }
  LinkedHashMapClassDesc.$metadata$ = classMeta('LinkedHashMapClassDesc', undefined, undefined, undefined, undefined, MapLikeDescriptor.prototype);
  function ListLikeDescriptor(elementDescriptor) {
    this.h1g_1 = elementDescriptor;
    this.i1g_1 = 1;
  }
  ListLikeDescriptor.prototype.n1c = function () {
    return LIST_getInstance();
  };
  ListLikeDescriptor.prototype.l1c = function () {
    return this.i1g_1;
  };
  ListLikeDescriptor.prototype.r1c = function (index) {
    return index.toString();
  };
  ListLikeDescriptor.prototype.q1c = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(name + ' is not a valid list index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  ListLikeDescriptor.prototype.s1c = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.j1c() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return false;
  };
  ListLikeDescriptor.prototype.o1c = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.j1c() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return emptyList();
  };
  ListLikeDescriptor.prototype.p1c = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.j1c() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return this.h1g_1;
  };
  ListLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ListLikeDescriptor))
      return false;
    if (equals(this.h1g_1, other.h1g_1) ? this.j1c() === other.j1c() : false)
      return true;
    return false;
  };
  ListLikeDescriptor.prototype.hashCode = function () {
    return imul(hashCode(this.h1g_1), 31) + getStringHashCode(this.j1c()) | 0;
  };
  ListLikeDescriptor.prototype.toString = function () {
    return this.j1c() + '(' + this.h1g_1 + ')';
  };
  ListLikeDescriptor.$metadata$ = classMeta('ListLikeDescriptor', [SerialDescriptor]);
  function MapLikeDescriptor(serialName, keyDescriptor, valueDescriptor) {
    this.l1g_1 = serialName;
    this.m1g_1 = keyDescriptor;
    this.n1g_1 = valueDescriptor;
    this.o1g_1 = 2;
  }
  MapLikeDescriptor.prototype.j1c = function () {
    return this.l1g_1;
  };
  MapLikeDescriptor.prototype.n1c = function () {
    return MAP_getInstance();
  };
  MapLikeDescriptor.prototype.l1c = function () {
    return this.o1g_1;
  };
  MapLikeDescriptor.prototype.r1c = function (index) {
    return index.toString();
  };
  MapLikeDescriptor.prototype.q1c = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(name + ' is not a valid map index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  MapLikeDescriptor.prototype.s1c = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.j1c() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return false;
  };
  MapLikeDescriptor.prototype.o1c = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.j1c() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return emptyList();
  };
  MapLikeDescriptor.prototype.p1c = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.j1c() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var tmp0_subject = index % 2 | 0;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = this.m1g_1;
        break;
      case 1:
        tmp = this.n1g_1;
        break;
      default:
        throw IllegalStateException_init_$Create$('Unreached');
    }
    return tmp;
  };
  MapLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapLikeDescriptor))
      return false;
    if (!(this.j1c() === other.j1c()))
      return false;
    if (!equals(this.m1g_1, other.m1g_1))
      return false;
    if (!equals(this.n1g_1, other.n1g_1))
      return false;
    return true;
  };
  MapLikeDescriptor.prototype.hashCode = function () {
    var result = getStringHashCode(this.j1c());
    result = imul(31, result) + hashCode(this.m1g_1) | 0;
    result = imul(31, result) + hashCode(this.n1g_1) | 0;
    return result;
  };
  MapLikeDescriptor.prototype.toString = function () {
    return this.j1c() + '(' + this.m1g_1 + ', ' + this.n1g_1 + ')';
  };
  MapLikeDescriptor.$metadata$ = classMeta('MapLikeDescriptor', [SerialDescriptor]);
  function ArrayListClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayListClassDesc.prototype.j1c = function () {
    return 'kotlin.collections.ArrayList';
  };
  ArrayListClassDesc.$metadata$ = classMeta('ArrayListClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function HashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  HashSetClassDesc.prototype.j1c = function () {
    return 'kotlin.collections.HashSet';
  };
  HashSetClassDesc.$metadata$ = classMeta('HashSetClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function LinkedHashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  LinkedHashSetClassDesc.prototype.j1c = function () {
    return 'kotlin.collections.LinkedHashSet';
  };
  LinkedHashSetClassDesc.$metadata$ = classMeta('LinkedHashSetClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function PrimitiveArraySerializer(primitiveSerializer) {
    CollectionLikeSerializer.call(this, primitiveSerializer);
    this.w1g_1 = new PrimitiveArrayDescriptor(primitiveSerializer.i1b());
  }
  PrimitiveArraySerializer.prototype.i1b = function () {
    return this.w1g_1;
  };
  PrimitiveArraySerializer.prototype.x1g = function (_this__u8e3s4) {
    return _this__u8e3s4.y1g();
  };
  PrimitiveArraySerializer.prototype.z1g = function (_this__u8e3s4) {
    return _this__u8e3s4.x2();
  };
  PrimitiveArraySerializer.prototype.a1h = function (_this__u8e3s4, size) {
    return _this__u8e3s4.eb(size);
  };
  PrimitiveArraySerializer.prototype.b1h = function (_this__u8e3s4) {
    throw IllegalStateException_init_$Create$('This method lead to boxing and must not be used, use writeContents instead');
  };
  PrimitiveArraySerializer.prototype.c1h = function (_this__u8e3s4) {
    return this.b1h((_this__u8e3s4 == null ? true : isObject(_this__u8e3s4)) ? _this__u8e3s4 : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.d1h = function (_this__u8e3s4, index, element) {
    throw IllegalStateException_init_$Create$('This method lead to boxing and must not be used, use Builder.append instead');
  };
  PrimitiveArraySerializer.prototype.e1h = function () {
    return this.g1h(this.f1h());
  };
  PrimitiveArraySerializer.prototype.k1h = function (encoder, value) {
    var size = this.l1h(value);
    {
      var tmp0_encodeCollection = this.w1g_1;
      var composite = encoder.u1f(tmp0_encodeCollection, size);
      {
        this.j1h(composite, value, size);
      }
      composite.d1e(tmp0_encodeCollection);
    }
  };
  PrimitiveArraySerializer.prototype.j1b = function (encoder, value) {
    return this.k1h(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.m1h = function (encoder, value) {
    return this.k1h(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.k1b = function (decoder) {
    return this.n1h(decoder, null);
  };
  PrimitiveArraySerializer.$metadata$ = classMeta('PrimitiveArraySerializer', undefined, undefined, undefined, undefined, CollectionLikeSerializer.prototype);
  function PrimitiveArrayBuilder() {
  }
  PrimitiveArrayBuilder.prototype.q1h = function (requiredCapacity, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      requiredCapacity = this.y1g() + 1 | 0;
    return $handler == null ? this.eb(requiredCapacity) : $handler(requiredCapacity);
  };
  PrimitiveArrayBuilder.$metadata$ = classMeta('PrimitiveArrayBuilder');
  function CollectionLikeSerializer(elementSerializer) {
    AbstractCollectionSerializer.call(this);
    this.o1h_1 = elementSerializer;
  }
  CollectionLikeSerializer.prototype.m1h = function (encoder, value) {
    var size = this.l1h(value);
    {
      var tmp0_encodeCollection = this.i1b();
      var composite = encoder.u1f(tmp0_encodeCollection, size);
      {
        var iterator = this.c1h(value);
        var inductionVariable = 0;
        if (inductionVariable < size)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            composite.p1f(this.i1b(), index, this.o1h_1, iterator.f());
          }
           while (inductionVariable < size);
      }
      composite.d1e(tmp0_encodeCollection);
    }
  };
  CollectionLikeSerializer.prototype.j1b = function (encoder, value) {
    return this.m1h(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  CollectionLikeSerializer.prototype.p1h = function (decoder, builder, startIndex, size) {
    {
      var tmp0_require = size >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Size must be known in advance when using READ_ALL';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.h1h(decoder, startIndex + index | 0, builder, false);
      }
       while (inductionVariable < size);
  };
  CollectionLikeSerializer.prototype.h1h = function (decoder, index, builder, checkIndex) {
    var tmp = this.i1b();
    this.d1h(builder, index, decoder.o1e(tmp, index, this.o1h_1, null, 8, null));
  };
  CollectionLikeSerializer.$metadata$ = classMeta('CollectionLikeSerializer', undefined, undefined, undefined, undefined, AbstractCollectionSerializer.prototype);
  function readSize($this, decoder, builder) {
    var size = decoder.s1e($this.i1b());
    $this.a1h(builder, size);
    return size;
  }
  function AbstractCollectionSerializer() {
  }
  AbstractCollectionSerializer.prototype.n1h = function (decoder, previous) {
    var tmp0_safe_receiver = previous;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.g1h(tmp0_safe_receiver);
    var builder = tmp1_elvis_lhs == null ? this.e1h() : tmp1_elvis_lhs;
    var startIndex = this.x1g(builder);
    var compositeDecoder = decoder.c1e(this.i1b());
    if (compositeDecoder.q1e()) {
      this.p1h(compositeDecoder, builder, startIndex, readSize(this, compositeDecoder, builder));
    } else {
      $l$loop: while (true) {
        var index = compositeDecoder.r1e(this.i1b());
        Companion_getInstance_2();
        if (index === -1)
          break $l$loop;
        var tmp = startIndex + index | 0;
        this.i1h(compositeDecoder, tmp, builder, false, 8, null);
      }
    }
    compositeDecoder.d1e(this.i1b());
    return this.z1g(builder);
  };
  AbstractCollectionSerializer.prototype.k1b = function (decoder) {
    return this.n1h(decoder, null);
  };
  AbstractCollectionSerializer.prototype.i1h = function (decoder, index, builder, checkIndex, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      checkIndex = true;
    return $handler == null ? this.h1h(decoder, index, builder, checkIndex) : $handler(decoder, index, builder, checkIndex);
  };
  AbstractCollectionSerializer.$metadata$ = classMeta('AbstractCollectionSerializer', [KSerializer]);
  function CollectionSerializer(element) {
    CollectionLikeSerializer.call(this, element);
  }
  CollectionSerializer.prototype.s1h = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  CollectionSerializer.prototype.l1h = function (_this__u8e3s4) {
    return this.s1h((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Collection) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  CollectionSerializer.prototype.t1h = function (_this__u8e3s4) {
    return _this__u8e3s4.d();
  };
  CollectionSerializer.prototype.c1h = function (_this__u8e3s4) {
    return this.t1h((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Collection) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  CollectionSerializer.$metadata$ = classMeta('CollectionSerializer', undefined, undefined, undefined, undefined, CollectionLikeSerializer.prototype);
  function ReferenceArraySerializer(kClass, eSerializer) {
    CollectionLikeSerializer.call(this, eSerializer);
    this.v1h_1 = kClass;
    this.w1h_1 = new ArrayClassDesc(eSerializer.i1b());
  }
  ReferenceArraySerializer.prototype.i1b = function () {
    return this.w1h_1;
  };
  ReferenceArraySerializer.prototype.x1h = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  ReferenceArraySerializer.prototype.l1h = function (_this__u8e3s4) {
    return this.x1h((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.y1h = function (_this__u8e3s4) {
    return arrayIterator(_this__u8e3s4);
  };
  ReferenceArraySerializer.prototype.c1h = function (_this__u8e3s4) {
    return this.y1h((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.e1h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    return tmp$ret$0;
  };
  ReferenceArraySerializer.prototype.z1h = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  ReferenceArraySerializer.prototype.x1g = function (_this__u8e3s4) {
    return this.z1h(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.a1i = function (_this__u8e3s4) {
    return toNativeArrayImpl(_this__u8e3s4, this.v1h_1);
  };
  ReferenceArraySerializer.prototype.z1g = function (_this__u8e3s4) {
    return this.a1i(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.b1i = function (_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asList(_this__u8e3s4));
  };
  ReferenceArraySerializer.prototype.g1h = function (_this__u8e3s4) {
    return this.b1i((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.c1i = function (_this__u8e3s4, size) {
    return _this__u8e3s4.eb(size);
  };
  ReferenceArraySerializer.prototype.a1h = function (_this__u8e3s4, size) {
    return this.c1i(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
  };
  ReferenceArraySerializer.prototype.d1i = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.na(index, element);
  };
  ReferenceArraySerializer.prototype.d1h = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
    return this.d1i(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ReferenceArraySerializer.$metadata$ = classMeta('ReferenceArraySerializer', undefined, undefined, undefined, undefined, CollectionLikeSerializer.prototype);
  function MapLikeSerializer(keySerializer, valueSerializer) {
    AbstractCollectionSerializer.call(this);
    this.e1i_1 = keySerializer;
    this.f1i_1 = valueSerializer;
  }
  MapLikeSerializer.prototype.g1i = function () {
    return this.e1i_1;
  };
  MapLikeSerializer.prototype.h1i = function () {
    return this.f1i_1;
  };
  MapLikeSerializer.prototype.p1h = function (decoder, builder, startIndex, size) {
    {
      var tmp0_require = size >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Size must be known in advance when using READ_ALL';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var progression = step(until(0, imul(size, 2)), 2);
    var inductionVariable = progression.s_1;
    var last = progression.t_1;
    var step_0 = progression.u_1;
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        this.h1h(decoder, startIndex + index | 0, builder, false);
      }
       while (!(index === last));
  };
  MapLikeSerializer.prototype.h1h = function (decoder, index, builder, checkIndex) {
    var tmp = this.i1b();
    var key = decoder.o1e(tmp, index, this.e1i_1, null, 8, null);
    var tmp_0;
    if (checkIndex) {
      var tmp$ret$1;
      {
        var tmp0_also = decoder.r1e(this.i1b());
        {
        }
        {
          {
            var tmp0_require = tmp0_also === (index + 1 | 0);
            {
            }
            if (!tmp0_require) {
              var tmp$ret$0;
              {
                tmp$ret$0 = 'Value must follow key in a map, index for key: ' + index + ', returned index for value: ' + tmp0_also;
              }
              var message = tmp$ret$0;
              throw IllegalArgumentException_init_$Create$(toString(message));
            }
          }
        }
        tmp$ret$1 = tmp0_also;
      }
      tmp_0 = tmp$ret$1;
    } else {
      tmp_0 = index + 1 | 0;
    }
    var vIndex = tmp_0;
    var tmp_1;
    var tmp_2;
    if (builder.s1(key)) {
      var tmp_3 = this.f1i_1.i1b().n1c();
      tmp_2 = !(tmp_3 instanceof PrimitiveKind);
    } else {
      tmp_2 = false;
    }
    if (tmp_2) {
      tmp_1 = decoder.n1e(this.i1b(), vIndex, this.f1i_1, getValue(builder, key));
    } else {
      var tmp_4 = this.i1b();
      tmp_1 = decoder.o1e(tmp_4, vIndex, this.f1i_1, null, 8, null);
    }
    var value = tmp_1;
    {
      builder.a(key, value);
    }
  };
  MapLikeSerializer.prototype.m1h = function (encoder, value) {
    var size = this.l1h(value);
    {
      var tmp0_encodeCollection = this.i1b();
      var composite = encoder.u1f(tmp0_encodeCollection, size);
      {
        var iterator = this.c1h(value);
        var index = 0;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = iterator;
          }
          var tmp0_iterator = tmp$ret$0;
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            {
              var tmp$ret$1;
              {
                tmp$ret$1 = element.j1();
              }
              var k = tmp$ret$1;
              var tmp$ret$2;
              {
                tmp$ret$2 = element.l1();
              }
              var v = tmp$ret$2;
              var tmp = this.i1b();
              var tmp0 = index;
              index = tmp0 + 1 | 0;
              composite.p1f(tmp, tmp0, this.e1i_1, k);
              var tmp_0 = this.i1b();
              var tmp1 = index;
              index = tmp1 + 1 | 0;
              composite.p1f(tmp_0, tmp1, this.f1i_1, v);
            }
          }
        }
      }
      composite.d1e(tmp0_encodeCollection);
    }
  };
  MapLikeSerializer.prototype.j1b = function (encoder, value) {
    return this.m1h(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  MapLikeSerializer.$metadata$ = classMeta('MapLikeSerializer', undefined, undefined, undefined, undefined, AbstractCollectionSerializer.prototype);
  function HashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this.k1i_1 = new HashMapClassDesc(kSerializer.i1b(), vSerializer.i1b());
  }
  HashMapSerializer.prototype.i1b = function () {
    return this.k1i_1;
  };
  HashMapSerializer.prototype.l1i = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  HashMapSerializer.prototype.l1h = function (_this__u8e3s4) {
    return this.l1i((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.m1i = function (_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.j().d();
    }
    return tmp$ret$0;
  };
  HashMapSerializer.prototype.c1h = function (_this__u8e3s4) {
    return this.m1i((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.e1h = function () {
    return HashMap_init_$Create$();
  };
  HashMapSerializer.prototype.n1i = function (_this__u8e3s4) {
    return imul(_this__u8e3s4.g(), 2);
  };
  HashMapSerializer.prototype.x1g = function (_this__u8e3s4) {
    return this.n1i(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.o1i = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  HashMapSerializer.prototype.z1g = function (_this__u8e3s4) {
    return this.o1i(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.p1i = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? HashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  HashMapSerializer.prototype.g1h = function (_this__u8e3s4) {
    return this.p1i((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.q1i = function (_this__u8e3s4, size) {
  };
  HashMapSerializer.prototype.a1h = function (_this__u8e3s4, size) {
    return this.q1i(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE(), size);
  };
  HashMapSerializer.$metadata$ = classMeta('HashMapSerializer', undefined, undefined, undefined, undefined, MapLikeSerializer.prototype);
  function LinkedHashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this.t1i_1 = new LinkedHashMapClassDesc(kSerializer.i1b(), vSerializer.i1b());
  }
  LinkedHashMapSerializer.prototype.i1b = function () {
    return this.t1i_1;
  };
  LinkedHashMapSerializer.prototype.l1i = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  LinkedHashMapSerializer.prototype.l1h = function (_this__u8e3s4) {
    return this.l1i((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.m1i = function (_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.j().d();
    }
    return tmp$ret$0;
  };
  LinkedHashMapSerializer.prototype.c1h = function (_this__u8e3s4) {
    return this.m1i((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.e1h = function () {
    return LinkedHashMap_init_$Create$();
  };
  LinkedHashMapSerializer.prototype.u1i = function (_this__u8e3s4) {
    return imul(_this__u8e3s4.g(), 2);
  };
  LinkedHashMapSerializer.prototype.x1g = function (_this__u8e3s4) {
    return this.u1i(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.v1i = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  LinkedHashMapSerializer.prototype.z1g = function (_this__u8e3s4) {
    return this.v1i(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.p1i = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? LinkedHashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  LinkedHashMapSerializer.prototype.g1h = function (_this__u8e3s4) {
    return this.p1i((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.w1i = function (_this__u8e3s4, size) {
  };
  LinkedHashMapSerializer.prototype.a1h = function (_this__u8e3s4, size) {
    return this.w1i(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE(), size);
  };
  LinkedHashMapSerializer.$metadata$ = classMeta('LinkedHashMapSerializer', undefined, undefined, undefined, undefined, MapLikeSerializer.prototype);
  function LinkedHashSetSerializer(eSerializer) {
    CollectionSerializer.call(this, eSerializer);
    this.y1i_1 = new LinkedHashSetClassDesc(eSerializer.i1b());
  }
  LinkedHashSetSerializer.prototype.i1b = function () {
    return this.y1i_1;
  };
  LinkedHashSetSerializer.prototype.e1h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashSet_init_$Create$();
    }
    return tmp$ret$0;
  };
  LinkedHashSetSerializer.prototype.z1i = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  LinkedHashSetSerializer.prototype.x1g = function (_this__u8e3s4) {
    return this.z1i(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.a1j = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  LinkedHashSetSerializer.prototype.z1g = function (_this__u8e3s4) {
    return this.a1j(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.b1j = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? LinkedHashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  LinkedHashSetSerializer.prototype.g1h = function (_this__u8e3s4) {
    return this.b1j((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.c1j = function (_this__u8e3s4, size) {
  };
  LinkedHashSetSerializer.prototype.a1h = function (_this__u8e3s4, size) {
    return this.c1j(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE(), size);
  };
  LinkedHashSetSerializer.prototype.d1j = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.c(element);
  };
  LinkedHashSetSerializer.prototype.d1h = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE();
    return this.d1j(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  LinkedHashSetSerializer.$metadata$ = classMeta('LinkedHashSetSerializer', undefined, undefined, undefined, undefined, CollectionSerializer.prototype);
  function ArrayListSerializer(element) {
    CollectionSerializer.call(this, element);
    this.f1j_1 = new ArrayListClassDesc(element.i1b());
  }
  ArrayListSerializer.prototype.i1b = function () {
    return this.f1j_1;
  };
  ArrayListSerializer.prototype.e1h = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    return tmp$ret$0;
  };
  ArrayListSerializer.prototype.g1j = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  ArrayListSerializer.prototype.x1g = function (_this__u8e3s4) {
    return this.g1j(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.h1j = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  ArrayListSerializer.prototype.z1g = function (_this__u8e3s4) {
    return this.h1j(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.i1j = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? ArrayList_init_$Create$_1(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  ArrayListSerializer.prototype.g1h = function (_this__u8e3s4) {
    return this.i1j((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.j1j = function (_this__u8e3s4, size) {
    return _this__u8e3s4.eb(size);
  };
  ArrayListSerializer.prototype.a1h = function (_this__u8e3s4, size) {
    return this.j1j(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
  };
  ArrayListSerializer.prototype.k1j = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.na(index, element);
  };
  ArrayListSerializer.prototype.d1h = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
    return this.k1j(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ArrayListSerializer.$metadata$ = classMeta('ArrayListSerializer', undefined, undefined, undefined, undefined, CollectionSerializer.prototype);
  function HashSetSerializer(eSerializer) {
    CollectionSerializer.call(this, eSerializer);
    this.m1j_1 = new HashSetClassDesc(eSerializer.i1b());
  }
  HashSetSerializer.prototype.i1b = function () {
    return this.m1j_1;
  };
  HashSetSerializer.prototype.e1h = function () {
    return HashSet_init_$Create$();
  };
  HashSetSerializer.prototype.n1j = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  HashSetSerializer.prototype.x1g = function (_this__u8e3s4) {
    return this.n1j(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.o1j = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  HashSetSerializer.prototype.z1g = function (_this__u8e3s4) {
    return this.o1j(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.b1j = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? HashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  HashSetSerializer.prototype.g1h = function (_this__u8e3s4) {
    return this.b1j((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.p1j = function (_this__u8e3s4, size) {
  };
  HashSetSerializer.prototype.a1h = function (_this__u8e3s4, size) {
    return this.p1j(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE(), size);
  };
  HashSetSerializer.prototype.q1j = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.c(element);
  };
  HashSetSerializer.prototype.d1h = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE();
    return this.q1j(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  HashSetSerializer.$metadata$ = classMeta('HashSetSerializer', undefined, undefined, undefined, undefined, CollectionSerializer.prototype);
  function Companion_0() {
    Companion_instance_0 = this;
    this.r1j_1 = longArray(0);
  }
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_3() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function prepareHighMarksArray($this, elementsCount) {
    var slotsCount = (elementsCount - 1 | 0) >>> 6 | 0;
    Companion_getInstance_0();
    var elementsInLastSlot = elementsCount & (64 - 1 | 0);
    var highMarks = longArray(slotsCount);
    if (!(elementsInLastSlot === 0)) {
      highMarks[get_lastIndex(highMarks)] = (new Long(-1, -1)).g6(elementsCount);
    }
    return highMarks;
  }
  function markHigh($this, index) {
    var slot = (index >>> 6 | 0) - 1 | 0;
    Companion_getInstance_0();
    var offsetInSlot = index & (64 - 1 | 0);
    $this.v1j_1[slot] = $this.v1j_1[slot].ig((new Long(1, 0)).g6(offsetInSlot));
  }
  function nextUnmarkedHighIndex($this) {
    var inductionVariable = 0;
    var last = $this.v1j_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var slot = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = slot + 1 | 0;
        Companion_getInstance_0();
        var slotOffset = imul(tmp, 64);
        var slotMarks = $this.v1j_1[slot];
        while (!slotMarks.equals(new Long(-1, -1))) {
          var indexInSlot = countTrailingZeroBits(slotMarks.hg());
          slotMarks = slotMarks.ig((new Long(1, 0)).g6(indexInSlot));
          var index = slotOffset + indexInSlot | 0;
          if ($this.t1j_1($this.s1j_1, index)) {
            $this.v1j_1[slot] = slotMarks;
            return index;
          }
        }
        $this.v1j_1[slot] = slotMarks;
      }
       while (inductionVariable <= last);
    Companion_getInstance_2();
    return -1;
  }
  function ElementMarker(descriptor, readIfAbsent) {
    Companion_getInstance_3();
    this.s1j_1 = descriptor;
    this.t1j_1 = readIfAbsent;
    var elementsCount = this.s1j_1.l1c();
    Companion_getInstance_0();
    if (elementsCount <= 64) {
      var tmp = this;
      var tmp_0;
      Companion_getInstance_0();
      if (elementsCount === 64) {
        tmp_0 = new Long(0, 0);
      } else {
        tmp_0 = (new Long(-1, -1)).g6(elementsCount);
      }
      tmp.u1j_1 = tmp_0;
      this.v1j_1 = Companion_getInstance_3().r1j_1;
    } else {
      this.u1j_1 = new Long(0, 0);
      this.v1j_1 = prepareHighMarksArray(this, elementsCount);
    }
  }
  ElementMarker.prototype.w1j = function (index) {
    Companion_getInstance_0();
    if (index < 64) {
      this.u1j_1 = this.u1j_1.ig((new Long(1, 0)).g6(index));
    } else {
      markHigh(this, index);
    }
  };
  ElementMarker.prototype.x1j = function () {
    var elementsCount = this.s1j_1.l1c();
    while (!this.u1j_1.equals(new Long(-1, -1))) {
      var index = countTrailingZeroBits(this.u1j_1.hg());
      this.u1j_1 = this.u1j_1.ig((new Long(1, 0)).g6(index));
      if (this.t1j_1(this.s1j_1, index)) {
        return index;
      }
    }
    Companion_getInstance_0();
    if (elementsCount > 64) {
      return nextUnmarkedHighIndex(this);
    }
    Companion_getInstance_2();
    return -1;
  };
  ElementMarker.$metadata$ = classMeta('ElementMarker');
  function InlinePrimitiveDescriptor(name, primitiveSerializer) {
    return new InlineClassDescriptor(name, new InlinePrimitiveDescriptor$1(primitiveSerializer));
  }
  function InlineClassDescriptor(name, generatedSerializer) {
    PluginGeneratedSerialDescriptor.call(this, name, generatedSerializer, 1);
    this.k1k_1 = true;
  }
  InlineClassDescriptor.prototype.m1c = function () {
    return this.k1k_1;
  };
  InlineClassDescriptor.prototype.hashCode = function () {
    return imul(PluginGeneratedSerialDescriptor.prototype.hashCode.call(this), 31);
  };
  InlineClassDescriptor.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof InlineClassDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.j1c() === other.j1c())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      {
        var tmp0__anonymous__q1qw7t = other;
        tmp$ret$1 = tmp0__anonymous__q1qw7t.k1k_1 ? contentEquals(this.x1k(), tmp0__anonymous__q1qw7t.x1k()) : false;
      }
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.l1c() === other.l1c())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.l1c();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.p1c(index).j1c() === other.p1c(index).j1c())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.p1c(index).n1c(), other.p1c(index).n1c())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  InlineClassDescriptor.$metadata$ = classMeta('InlineClassDescriptor', undefined, undefined, undefined, undefined, PluginGeneratedSerialDescriptor.prototype);
  function InlinePrimitiveDescriptor$1($primitiveSerializer) {
    this.z1k_1 = $primitiveSerializer;
  }
  InlinePrimitiveDescriptor$1.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = [this.z1k_1];
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  InlinePrimitiveDescriptor$1.prototype.i1b = function () {
    throw IllegalStateException_init_$Create$('unsupported');
  };
  InlinePrimitiveDescriptor$1.prototype.j1b = function (encoder, value) {
    {
      throw IllegalStateException_init_$Create$('unsupported');
    }
  };
  InlinePrimitiveDescriptor$1.prototype.k1b = function (decoder) {
    {
      throw IllegalStateException_init_$Create$('unsupported');
    }
  };
  InlinePrimitiveDescriptor$1.$metadata$ = classMeta(undefined, [GeneratedSerializer]);
  function jsonCachedSerialNames(_this__u8e3s4) {
    return cachedSerialNames(_this__u8e3s4);
  }
  function NullableSerializer(serializer) {
    this.c1l_1 = serializer;
    this.d1l_1 = new SerialDescriptorForNullable(this.c1l_1.i1b());
  }
  NullableSerializer.prototype.i1b = function () {
    return this.d1l_1;
  };
  NullableSerializer.prototype.e1l = function (encoder, value) {
    if (!(value == null)) {
      encoder.t1f();
      encoder.q1f(this.c1l_1, value);
    } else {
      encoder.v1e();
    }
  };
  NullableSerializer.prototype.j1b = function (encoder, value) {
    return this.e1l(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  NullableSerializer.prototype.k1b = function (decoder) {
    return decoder.o1d() ? decoder.b1e(this.c1l_1) : decoder.p1d();
  };
  NullableSerializer.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof NullableSerializer)
      other;
    else
      THROW_CCE();
    if (!equals(this.c1l_1, other.c1l_1))
      return false;
    return true;
  };
  NullableSerializer.prototype.hashCode = function () {
    return hashCode(this.c1l_1);
  };
  NullableSerializer.$metadata$ = classMeta('NullableSerializer', [KSerializer]);
  function SerialDescriptorForNullable(original) {
    this.t1c_1 = original;
    this.u1c_1 = this.t1c_1.j1c() + '?';
    this.v1c_1 = cachedSerialNames(this.t1c_1);
  }
  SerialDescriptorForNullable.prototype.k1c = function () {
    return this.t1c_1.k1c();
  };
  SerialDescriptorForNullable.prototype.l1c = function () {
    return this.t1c_1.l1c();
  };
  SerialDescriptorForNullable.prototype.m1c = function () {
    return this.t1c_1.m1c();
  };
  SerialDescriptorForNullable.prototype.n1c = function () {
    return this.t1c_1.n1c();
  };
  SerialDescriptorForNullable.prototype.o1c = function (index) {
    return this.t1c_1.o1c(index);
  };
  SerialDescriptorForNullable.prototype.p1c = function (index) {
    return this.t1c_1.p1c(index);
  };
  SerialDescriptorForNullable.prototype.q1c = function (name) {
    return this.t1c_1.q1c(name);
  };
  SerialDescriptorForNullable.prototype.r1c = function (index) {
    return this.t1c_1.r1c(index);
  };
  SerialDescriptorForNullable.prototype.s1c = function (index) {
    return this.t1c_1.s1c(index);
  };
  SerialDescriptorForNullable.prototype.j1c = function () {
    return this.u1c_1;
  };
  SerialDescriptorForNullable.prototype.m1d = function () {
    return this.v1c_1;
  };
  SerialDescriptorForNullable.prototype.f1c = function () {
    return true;
  };
  SerialDescriptorForNullable.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SerialDescriptorForNullable))
      return false;
    if (!equals(this.t1c_1, other.t1c_1))
      return false;
    return true;
  };
  SerialDescriptorForNullable.prototype.toString = function () {
    return '' + this.t1c_1 + '?';
  };
  SerialDescriptorForNullable.prototype.hashCode = function () {
    return imul(hashCode(this.t1c_1), 31);
  };
  SerialDescriptorForNullable.$metadata$ = classMeta('SerialDescriptorForNullable', [SerialDescriptor, CachedNames]);
  function ObjectSerializer$descriptor$delegate$lambda$lambda(this$0) {
    return function ($this$buildSerialDescriptor) {
      $this$buildSerialDescriptor.n1b_1 = this$0.g1l_1;
      return Unit_getInstance();
    };
  }
  function ObjectSerializer$descriptor$delegate$lambda($serialName, this$0) {
    return function () {
      var tmp = OBJECT_getInstance();
      return buildSerialDescriptor$default($serialName, tmp, [], ObjectSerializer$descriptor$delegate$lambda$lambda(this$0), 4, null);
    };
  }
  function ObjectSerializer(serialName, objectInstance) {
    this.f1l_1 = objectInstance;
    this.g1l_1 = emptyList();
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.h1l_1 = lazy(tmp_0, ObjectSerializer$descriptor$delegate$lambda(serialName, this));
  }
  ObjectSerializer.prototype.i1b = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = descriptor$factory_0();
      tmp$ret$0 = this.h1l_1.l1();
    }
    return tmp$ret$0;
  };
  ObjectSerializer.prototype.j1b = function (encoder, value) {
    encoder.c1e(this.i1b()).d1e(this.i1b());
  };
  ObjectSerializer.prototype.k1b = function (decoder) {
    var tmp$ret$1;
    {
      var tmp0_decodeStructure = this.i1b();
      var composite = decoder.c1e(tmp0_decodeStructure);
      var tmp$ret$0;
      $l$block: {
        var index = composite.r1e(this.i1b());
        Companion_getInstance_2();
        if (index === -1) {
          tmp$ret$0 = Unit_getInstance();
          break $l$block;
        } else {
          throw SerializationException_init_$Create$('Unexpected index ' + index);
        }
      }
      var result = tmp$ret$0;
      composite.d1e(tmp0_decodeStructure);
      tmp$ret$1 = result;
    }
    return this.f1l_1;
  };
  ObjectSerializer.$metadata$ = classMeta('ObjectSerializer', [KSerializer]);
  function descriptor$factory_0() {
    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
      return receiver.i1b();
    }, null);
  }
  function get_EMPTY_DESCRIPTOR_ARRAY() {
    init_properties_Platform_common_kt_9ujmfm();
    return EMPTY_DESCRIPTOR_ARRAY;
  }
  var EMPTY_DESCRIPTOR_ARRAY;
  function cast(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    return isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
  }
  function compactArray(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    var tmp$ret$2;
    {
      {
      }
      var tmp;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          {
          }
          tmp$ret$0 = _this__u8e3s4 == null ? true : _this__u8e3s4.i();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      if (!tmp$ret$1) {
        tmp = _this__u8e3s4;
      } else {
        tmp = null;
      }
      tmp$ret$2 = tmp;
    }
    var tmp0_safe_receiver = tmp$ret$2;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$3;
      {
        tmp$ret$3 = copyToArray(tmp0_safe_receiver);
      }
      tmp_0 = tmp$ret$3;
    }
    var tmp1_elvis_lhs = tmp_0;
    return tmp1_elvis_lhs == null ? get_EMPTY_DESCRIPTOR_ARRAY() : tmp1_elvis_lhs;
  }
  function elementsHashCodeBy(_this__u8e3s4, selector) {
    init_properties_Platform_common_kt_9ujmfm();
    var tmp$ret$2;
    {
      var accumulator = 1;
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          var tmp0__anonymous__q1qw7t = accumulator;
          var tmp = imul(31, tmp0__anonymous__q1qw7t);
          var tmp$ret$0;
          {
            var tmp0_hashCode = selector(element);
            var tmp0_safe_receiver = tmp0_hashCode;
            var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
            tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
          }
          tmp$ret$1 = tmp + tmp$ret$0 | 0;
        }
        accumulator = tmp$ret$1;
      }
      tmp$ret$2 = accumulator;
    }
    return tmp$ret$2;
  }
  function kclass(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    var t = _this__u8e3s4.gd();
    var tmp;
    if (!(t == null) ? isInterface(t, KClass) : false) {
      tmp = t;
    } else {
      if (!(t == null) ? isInterface(t, KTypeParameter) : false) {
        var tmp0_error = 'Captured type paramerer ' + t + ' from generic non-reified function. ' + ('Such functionality cannot be supported as ' + t + ' is erased, either specify serializer explicitly or make ') + ('calling function inline with reified ' + t);
        throw IllegalStateException_init_$Create$(toString(tmp0_error));
      } else {
        var tmp1_error = 'Only KClass supported as classifier, got ' + t;
        throw IllegalStateException_init_$Create$(toString(tmp1_error));
      }
    }
    var tmp_0 = tmp;
    return isInterface(tmp_0, KClass) ? tmp_0 : THROW_CCE();
  }
  function cachedSerialNames(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    if (isInterface(_this__u8e3s4, CachedNames))
      return _this__u8e3s4.m1d();
    var result = HashSet_init_$Create$_1(_this__u8e3s4.l1c());
    var inductionVariable = 0;
    var last = _this__u8e3s4.l1c();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_plusAssign = _this__u8e3s4.r1c(i);
          result.c(tmp0_plusAssign);
        }
      }
       while (inductionVariable < last);
    return result;
  }
  function cast_0(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    return isInterface(_this__u8e3s4, SerializationStrategy) ? _this__u8e3s4 : THROW_CCE();
  }
  var properties_initialized_Platform_common_kt_i7q4ty;
  function init_properties_Platform_common_kt_9ujmfm() {
    if (properties_initialized_Platform_common_kt_i7q4ty) {
    } else {
      properties_initialized_Platform_common_kt_i7q4ty = true;
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = [];
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      EMPTY_DESCRIPTOR_ARRAY = tmp$ret$2;
    }
  }
  function throwMissingFieldException(seen, goldenMask, descriptor) {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    var missingFields = tmp$ret$0;
    var missingFieldsBits = goldenMask & ~seen;
    var inductionVariable = 0;
    if (inductionVariable < 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!((missingFieldsBits & 1) === 0)) {
          {
            var tmp0_plusAssign = descriptor.r1c(i);
            missingFields.c(tmp0_plusAssign);
          }
        }
        missingFieldsBits = missingFieldsBits >>> 1 | 0;
      }
       while (inductionVariable < 32);
    throw MissingFieldException_init_$Create$(missingFields, descriptor.j1c());
  }
  function hashCodeImpl(_this__u8e3s4, typeParams) {
    var result = getStringHashCode(_this__u8e3s4.j1c());
    result = imul(31, result) + contentHashCode(typeParams) | 0;
    var elementDescriptors = get_elementDescriptors(_this__u8e3s4);
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var accumulator = 1;
        var tmp0_iterator = elementDescriptors.d();
        while (tmp0_iterator.e()) {
          var element = tmp0_iterator.f();
          var tmp$ret$2;
          {
            var tmp0__anonymous__q1qw7t = accumulator;
            var tmp = imul(31, tmp0__anonymous__q1qw7t);
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                tmp$ret$0 = element.j1c();
              }
              var tmp0_hashCode = tmp$ret$0;
              var tmp0_safe_receiver = tmp0_hashCode;
              var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
              tmp$ret$1 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
            }
            tmp$ret$2 = tmp + tmp$ret$1 | 0;
          }
          accumulator = tmp$ret$2;
        }
        tmp$ret$3 = accumulator;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var namesHash = tmp$ret$4;
    var tmp$ret$9;
    {
      var tmp$ret$8;
      {
        var accumulator_0 = 1;
        var tmp0_iterator_0 = elementDescriptors.d();
        while (tmp0_iterator_0.e()) {
          var element_0 = tmp0_iterator_0.f();
          var tmp$ret$7;
          {
            var tmp0__anonymous__q1qw7t_0 = accumulator_0;
            var tmp_0 = imul(31, tmp0__anonymous__q1qw7t_0);
            var tmp$ret$6;
            {
              var tmp$ret$5;
              {
                tmp$ret$5 = element_0.n1c();
              }
              var tmp0_hashCode_0 = tmp$ret$5;
              var tmp0_safe_receiver_0 = tmp0_hashCode_0;
              var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
              tmp$ret$6 = tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0;
            }
            tmp$ret$7 = tmp_0 + tmp$ret$6 | 0;
          }
          accumulator_0 = tmp$ret$7;
        }
        tmp$ret$8 = accumulator_0;
      }
      tmp$ret$9 = tmp$ret$8;
    }
    var kindHash = tmp$ret$9;
    result = imul(31, result) + namesHash | 0;
    result = imul(31, result) + kindHash | 0;
    return result;
  }
  function _get_childSerializers__7vnyfa($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = childSerializers$factory();
      tmp$ret$0 = $this.u1k_1.l1();
    }
    return tmp$ret$0;
  }
  function _get__hashCode__tgwhef_0($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = _hashCode$factory_0();
      tmp$ret$0 = $this.w1k_1.l1();
    }
    return tmp$ret$0;
  }
  function buildIndices($this) {
    var indices = HashMap_init_$Create$();
    var inductionVariable = 0;
    var last = $this.p1k_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = $this.p1k_1[i];
          indices.a(tmp0_set, i);
        }
      }
       while (inductionVariable <= last);
    return indices;
  }
  function PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.m1k_1;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.a1l();
      return tmp1_elvis_lhs == null ? get_EMPTY_SERIALIZER_ARRAY() : tmp1_elvis_lhs;
    };
  }
  function PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.m1k_1;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.b1l();
      var tmp;
      if (tmp1_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp0_mapTo = ArrayList_init_$Create$(tmp1_safe_receiver.length);
            var tmp0_iterator = arrayIterator(tmp1_safe_receiver);
            while (tmp0_iterator.e()) {
              var item = tmp0_iterator.f();
              var tmp$ret$0;
              {
                tmp$ret$0 = item.i1b();
              }
              tmp0_mapTo.c(tmp$ret$0);
            }
            tmp$ret$1 = tmp0_mapTo;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp = tmp$ret$2;
      }
      return compactArray(tmp);
    };
  }
  function PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.x1k());
    };
  }
  function PluginGeneratedSerialDescriptor$toString$lambda(this$0) {
    return function (i) {
      return this$0.r1c(i) + ': ' + this$0.p1c(i).j1c();
    };
  }
  function PluginGeneratedSerialDescriptor(serialName, generatedSerializer, elementsCount) {
    this.l1k_1 = serialName;
    this.m1k_1 = generatedSerializer;
    this.n1k_1 = elementsCount;
    this.o1k_1 = -1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.n1k_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = '[UNINITIALIZED]';
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.p1k_1 = tmp_2;
    var tmp_4 = this;
    var tmp$ret$2;
    {
      var tmp0_arrayOfNulls = this.n1k_1;
      tmp$ret$2 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    }
    tmp_4.q1k_1 = tmp$ret$2;
    this.r1k_1 = null;
    this.s1k_1 = booleanArray(this.n1k_1);
    this.t1k_1 = emptyMap();
    var tmp_5 = this;
    var tmp_6 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp_5.u1k_1 = lazy(tmp_6, PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this));
    var tmp_7 = this;
    var tmp_8 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp_7.v1k_1 = lazy(tmp_8, PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this));
    var tmp_9 = this;
    var tmp_10 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp_9.w1k_1 = lazy(tmp_10, PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this));
  }
  PluginGeneratedSerialDescriptor.prototype.j1c = function () {
    return this.l1k_1;
  };
  PluginGeneratedSerialDescriptor.prototype.l1c = function () {
    return this.n1k_1;
  };
  PluginGeneratedSerialDescriptor.prototype.n1c = function () {
    return CLASS_getInstance();
  };
  PluginGeneratedSerialDescriptor.prototype.k1c = function () {
    var tmp0_elvis_lhs = this.r1k_1;
    return tmp0_elvis_lhs == null ? emptyList() : tmp0_elvis_lhs;
  };
  PluginGeneratedSerialDescriptor.prototype.m1d = function () {
    return this.t1k_1.w1();
  };
  PluginGeneratedSerialDescriptor.prototype.x1k = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = typeParameterDescriptors$factory();
      tmp$ret$0 = this.v1k_1.l1();
    }
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.y1k = function (name, isOptional) {
    var tmp0_this = this;
    tmp0_this.o1k_1 = tmp0_this.o1k_1 + 1 | 0;
    this.p1k_1[tmp0_this.o1k_1] = name;
    this.s1k_1[this.o1k_1] = isOptional;
    this.q1k_1[this.o1k_1] = null;
    if (this.o1k_1 === (this.n1k_1 - 1 | 0)) {
      this.t1k_1 = buildIndices(this);
    }
  };
  PluginGeneratedSerialDescriptor.prototype.p1c = function (index) {
    return getChecked(_get_childSerializers__7vnyfa(this), index).i1b();
  };
  PluginGeneratedSerialDescriptor.prototype.s1c = function (index) {
    return getChecked_0(this.s1k_1, index);
  };
  PluginGeneratedSerialDescriptor.prototype.o1c = function (index) {
    var tmp0_elvis_lhs = getChecked(this.q1k_1, index);
    return tmp0_elvis_lhs == null ? emptyList() : tmp0_elvis_lhs;
  };
  PluginGeneratedSerialDescriptor.prototype.r1c = function (index) {
    return getChecked(this.p1k_1, index);
  };
  PluginGeneratedSerialDescriptor.prototype.q1c = function (name) {
    var tmp0_elvis_lhs = this.t1k_1.v1(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_2();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  PluginGeneratedSerialDescriptor.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof PluginGeneratedSerialDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.j1c() === other.j1c())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      {
        var tmp0__anonymous__q1qw7t = other;
        tmp$ret$1 = contentEquals(this.x1k(), tmp0__anonymous__q1qw7t.x1k());
      }
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.l1c() === other.l1c())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.l1c();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.p1c(index).j1c() === other.p1c(index).j1c())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.p1c(index).n1c(), other.p1c(index).n1c())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.hashCode = function () {
    return _get__hashCode__tgwhef_0(this);
  };
  PluginGeneratedSerialDescriptor.prototype.toString = function () {
    var tmp = until(0, this.n1k_1);
    var tmp_0 = this.j1c() + '(';
    return joinToString$default(tmp, ', ', tmp_0, ')', 0, null, PluginGeneratedSerialDescriptor$toString$lambda(this), 24, null);
  };
  PluginGeneratedSerialDescriptor.$metadata$ = classMeta('PluginGeneratedSerialDescriptor', [SerialDescriptor, CachedNames]);
  function childSerializers$factory() {
    return getPropertyCallableRef('childSerializers', 1, KProperty1, function (receiver) {
      return _get_childSerializers__7vnyfa(receiver);
    }, null);
  }
  function typeParameterDescriptors$factory() {
    return getPropertyCallableRef('typeParameterDescriptors', 1, KProperty1, function (receiver) {
      return receiver.x1k();
    }, null);
  }
  function _hashCode$factory_0() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef_0(receiver);
    }, null);
  }
  function get_EMPTY_SERIALIZER_ARRAY() {
    init_properties_PluginHelperInterfaces_kt_tblf27();
    return EMPTY_SERIALIZER_ARRAY;
  }
  var EMPTY_SERIALIZER_ARRAY;
  function GeneratedSerializer() {
  }
  GeneratedSerializer.$metadata$ = interfaceMeta('GeneratedSerializer', [KSerializer]);
  function SerializerFactory() {
  }
  SerializerFactory.$metadata$ = interfaceMeta('SerializerFactory');
  var properties_initialized_PluginHelperInterfaces_kt_ap8in1;
  function init_properties_PluginHelperInterfaces_kt_tblf27() {
    if (properties_initialized_PluginHelperInterfaces_kt_ap8in1) {
    } else {
      properties_initialized_PluginHelperInterfaces_kt_ap8in1 = true;
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = [];
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      EMPTY_SERIALIZER_ARRAY = tmp$ret$2;
    }
  }
  function CharArraySerializer_0() {
    CharArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_2(Companion_getInstance_1()));
  }
  CharArraySerializer_0.prototype.l1l = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  CharArraySerializer_0.prototype.l1h = function (_this__u8e3s4) {
    return this.l1l((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  CharArraySerializer_0.prototype.m1l = function (_this__u8e3s4) {
    return new CharArrayBuilder(_this__u8e3s4);
  };
  CharArraySerializer_0.prototype.g1h = function (_this__u8e3s4) {
    return this.m1l((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  CharArraySerializer_0.prototype.f1h = function () {
    return charArray(0);
  };
  CharArraySerializer_0.prototype.n1l = function (decoder, index, builder, checkIndex) {
    builder.q1l(decoder.l1e(this.i1b(), index));
  };
  CharArraySerializer_0.prototype.h1h = function (decoder, index, builder, checkIndex) {
    return this.n1l(decoder, index, builder instanceof CharArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  CharArraySerializer_0.prototype.r1l = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.n1f(this.i1b(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  CharArraySerializer_0.prototype.j1h = function (encoder, content, size) {
    return this.r1l(encoder, (!(content == null) ? isCharArray(content) : false) ? content : THROW_CCE(), size);
  };
  CharArraySerializer_0.$metadata$ = objectMeta('CharArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var CharArraySerializer_instance;
  function CharArraySerializer_getInstance() {
    if (CharArraySerializer_instance == null)
      new CharArraySerializer_0();
    return CharArraySerializer_instance;
  }
  function DoubleArraySerializer_0() {
    DoubleArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_3(DoubleCompanionObject_getInstance()));
  }
  DoubleArraySerializer_0.prototype.u1l = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  DoubleArraySerializer_0.prototype.l1h = function (_this__u8e3s4) {
    return this.u1l((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  DoubleArraySerializer_0.prototype.v1l = function (_this__u8e3s4) {
    return new DoubleArrayBuilder(_this__u8e3s4);
  };
  DoubleArraySerializer_0.prototype.g1h = function (_this__u8e3s4) {
    return this.v1l((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  DoubleArraySerializer_0.prototype.f1h = function () {
    return new Float64Array(0);
  };
  DoubleArraySerializer_0.prototype.w1l = function (decoder, index, builder, checkIndex) {
    builder.z1l(decoder.k1e(this.i1b(), index));
  };
  DoubleArraySerializer_0.prototype.h1h = function (decoder, index, builder, checkIndex) {
    return this.w1l(decoder, index, builder instanceof DoubleArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  DoubleArraySerializer_0.prototype.a1m = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.m1f(this.i1b(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  DoubleArraySerializer_0.prototype.j1h = function (encoder, content, size) {
    return this.a1m(encoder, (!(content == null) ? isDoubleArray(content) : false) ? content : THROW_CCE(), size);
  };
  DoubleArraySerializer_0.$metadata$ = objectMeta('DoubleArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var DoubleArraySerializer_instance;
  function DoubleArraySerializer_getInstance() {
    if (DoubleArraySerializer_instance == null)
      new DoubleArraySerializer_0();
    return DoubleArraySerializer_instance;
  }
  function FloatArraySerializer_0() {
    FloatArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_4(FloatCompanionObject_getInstance()));
  }
  FloatArraySerializer_0.prototype.d1m = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  FloatArraySerializer_0.prototype.l1h = function (_this__u8e3s4) {
    return this.d1m((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  FloatArraySerializer_0.prototype.e1m = function (_this__u8e3s4) {
    return new FloatArrayBuilder(_this__u8e3s4);
  };
  FloatArraySerializer_0.prototype.g1h = function (_this__u8e3s4) {
    return this.e1m((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  FloatArraySerializer_0.prototype.f1h = function () {
    return new Float32Array(0);
  };
  FloatArraySerializer_0.prototype.f1m = function (decoder, index, builder, checkIndex) {
    builder.i1m(decoder.j1e(this.i1b(), index));
  };
  FloatArraySerializer_0.prototype.h1h = function (decoder, index, builder, checkIndex) {
    return this.f1m(decoder, index, builder instanceof FloatArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  FloatArraySerializer_0.prototype.j1m = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.l1f(this.i1b(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  FloatArraySerializer_0.prototype.j1h = function (encoder, content, size) {
    return this.j1m(encoder, (!(content == null) ? isFloatArray(content) : false) ? content : THROW_CCE(), size);
  };
  FloatArraySerializer_0.$metadata$ = objectMeta('FloatArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var FloatArraySerializer_instance;
  function FloatArraySerializer_getInstance() {
    if (FloatArraySerializer_instance == null)
      new FloatArraySerializer_0();
    return FloatArraySerializer_instance;
  }
  function LongArraySerializer_0() {
    LongArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_5(Companion_getInstance_0()));
  }
  LongArraySerializer_0.prototype.m1m = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  LongArraySerializer_0.prototype.l1h = function (_this__u8e3s4) {
    return this.m1m((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LongArraySerializer_0.prototype.n1m = function (_this__u8e3s4) {
    return new LongArrayBuilder(_this__u8e3s4);
  };
  LongArraySerializer_0.prototype.g1h = function (_this__u8e3s4) {
    return this.n1m((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LongArraySerializer_0.prototype.f1h = function () {
    return longArray(0);
  };
  LongArraySerializer_0.prototype.o1m = function (decoder, index, builder, checkIndex) {
    builder.r1m(decoder.i1e(this.i1b(), index));
  };
  LongArraySerializer_0.prototype.h1h = function (decoder, index, builder, checkIndex) {
    return this.o1m(decoder, index, builder instanceof LongArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  LongArraySerializer_0.prototype.s1m = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.k1f(this.i1b(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  LongArraySerializer_0.prototype.j1h = function (encoder, content, size) {
    return this.s1m(encoder, (!(content == null) ? isLongArray(content) : false) ? content : THROW_CCE(), size);
  };
  LongArraySerializer_0.$metadata$ = objectMeta('LongArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var LongArraySerializer_instance;
  function LongArraySerializer_getInstance() {
    if (LongArraySerializer_instance == null)
      new LongArraySerializer_0();
    return LongArraySerializer_instance;
  }
  function IntArraySerializer_0() {
    IntArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_6(IntCompanionObject_getInstance()));
  }
  IntArraySerializer_0.prototype.v1m = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  IntArraySerializer_0.prototype.l1h = function (_this__u8e3s4) {
    return this.v1m((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  IntArraySerializer_0.prototype.w1m = function (_this__u8e3s4) {
    return new IntArrayBuilder(_this__u8e3s4);
  };
  IntArraySerializer_0.prototype.g1h = function (_this__u8e3s4) {
    return this.w1m((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  IntArraySerializer_0.prototype.f1h = function () {
    return new Int32Array(0);
  };
  IntArraySerializer_0.prototype.x1m = function (decoder, index, builder, checkIndex) {
    builder.a1n(decoder.h1e(this.i1b(), index));
  };
  IntArraySerializer_0.prototype.h1h = function (decoder, index, builder, checkIndex) {
    return this.x1m(decoder, index, builder instanceof IntArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  IntArraySerializer_0.prototype.b1n = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.j1f(this.i1b(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  IntArraySerializer_0.prototype.j1h = function (encoder, content, size) {
    return this.b1n(encoder, (!(content == null) ? isIntArray(content) : false) ? content : THROW_CCE(), size);
  };
  IntArraySerializer_0.$metadata$ = objectMeta('IntArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var IntArraySerializer_instance;
  function IntArraySerializer_getInstance() {
    if (IntArraySerializer_instance == null)
      new IntArraySerializer_0();
    return IntArraySerializer_instance;
  }
  function ShortArraySerializer_0() {
    ShortArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_7(ShortCompanionObject_getInstance()));
  }
  ShortArraySerializer_0.prototype.e1n = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  ShortArraySerializer_0.prototype.l1h = function (_this__u8e3s4) {
    return this.e1n((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ShortArraySerializer_0.prototype.f1n = function (_this__u8e3s4) {
    return new ShortArrayBuilder(_this__u8e3s4);
  };
  ShortArraySerializer_0.prototype.g1h = function (_this__u8e3s4) {
    return this.f1n((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ShortArraySerializer_0.prototype.f1h = function () {
    return new Int16Array(0);
  };
  ShortArraySerializer_0.prototype.g1n = function (decoder, index, builder, checkIndex) {
    builder.j1n(decoder.g1e(this.i1b(), index));
  };
  ShortArraySerializer_0.prototype.h1h = function (decoder, index, builder, checkIndex) {
    return this.g1n(decoder, index, builder instanceof ShortArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  ShortArraySerializer_0.prototype.k1n = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.i1f(this.i1b(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  ShortArraySerializer_0.prototype.j1h = function (encoder, content, size) {
    return this.k1n(encoder, (!(content == null) ? isShortArray(content) : false) ? content : THROW_CCE(), size);
  };
  ShortArraySerializer_0.$metadata$ = objectMeta('ShortArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var ShortArraySerializer_instance;
  function ShortArraySerializer_getInstance() {
    if (ShortArraySerializer_instance == null)
      new ShortArraySerializer_0();
    return ShortArraySerializer_instance;
  }
  function ByteArraySerializer_0() {
    ByteArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_8(ByteCompanionObject_getInstance()));
  }
  ByteArraySerializer_0.prototype.n1n = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  ByteArraySerializer_0.prototype.l1h = function (_this__u8e3s4) {
    return this.n1n((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ByteArraySerializer_0.prototype.o1n = function (_this__u8e3s4) {
    return new ByteArrayBuilder(_this__u8e3s4);
  };
  ByteArraySerializer_0.prototype.g1h = function (_this__u8e3s4) {
    return this.o1n((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ByteArraySerializer_0.prototype.f1h = function () {
    return new Int8Array(0);
  };
  ByteArraySerializer_0.prototype.p1n = function (decoder, index, builder, checkIndex) {
    builder.s1n(decoder.f1e(this.i1b(), index));
  };
  ByteArraySerializer_0.prototype.h1h = function (decoder, index, builder, checkIndex) {
    return this.p1n(decoder, index, builder instanceof ByteArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  ByteArraySerializer_0.prototype.t1n = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.h1f(this.i1b(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  ByteArraySerializer_0.prototype.j1h = function (encoder, content, size) {
    return this.t1n(encoder, (!(content == null) ? isByteArray(content) : false) ? content : THROW_CCE(), size);
  };
  ByteArraySerializer_0.$metadata$ = objectMeta('ByteArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var ByteArraySerializer_instance;
  function ByteArraySerializer_getInstance() {
    if (ByteArraySerializer_instance == null)
      new ByteArraySerializer_0();
    return ByteArraySerializer_instance;
  }
  function BooleanArraySerializer_0() {
    BooleanArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_9(BooleanCompanionObject_getInstance()));
  }
  BooleanArraySerializer_0.prototype.w1n = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  BooleanArraySerializer_0.prototype.l1h = function (_this__u8e3s4) {
    return this.w1n((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  BooleanArraySerializer_0.prototype.x1n = function (_this__u8e3s4) {
    return new BooleanArrayBuilder(_this__u8e3s4);
  };
  BooleanArraySerializer_0.prototype.g1h = function (_this__u8e3s4) {
    return this.x1n((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  BooleanArraySerializer_0.prototype.f1h = function () {
    return booleanArray(0);
  };
  BooleanArraySerializer_0.prototype.y1n = function (decoder, index, builder, checkIndex) {
    builder.b1o(decoder.e1e(this.i1b(), index));
  };
  BooleanArraySerializer_0.prototype.h1h = function (decoder, index, builder, checkIndex) {
    return this.y1n(decoder, index, builder instanceof BooleanArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  BooleanArraySerializer_0.prototype.c1o = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.g1f(this.i1b(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  BooleanArraySerializer_0.prototype.j1h = function (encoder, content, size) {
    return this.c1o(encoder, (!(content == null) ? isBooleanArray(content) : false) ? content : THROW_CCE(), size);
  };
  BooleanArraySerializer_0.$metadata$ = objectMeta('BooleanArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var BooleanArraySerializer_instance;
  function BooleanArraySerializer_getInstance() {
    if (BooleanArraySerializer_instance == null)
      new BooleanArraySerializer_0();
    return BooleanArraySerializer_instance;
  }
  function CharArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.o1l_1 = bufferWithData;
    this.p1l_1 = bufferWithData.length;
    this.eb(10);
  }
  CharArrayBuilder.prototype.y1g = function () {
    return this.p1l_1;
  };
  CharArrayBuilder.prototype.eb = function (requiredCapacity) {
    if (this.o1l_1.length < requiredCapacity)
      this.o1l_1 = copyOf(this.o1l_1, coerceAtLeast(requiredCapacity, imul(this.o1l_1.length, 2)));
  };
  CharArrayBuilder.prototype.q1l = function (c) {
    this.q1h(0, 1, null);
    var tmp = this.o1l_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.p1l_1;
    tmp0_this.p1l_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  CharArrayBuilder.prototype.x2 = function () {
    return copyOf(this.o1l_1, this.p1l_1);
  };
  CharArrayBuilder.$metadata$ = classMeta('CharArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function DoubleArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.x1l_1 = bufferWithData;
    this.y1l_1 = bufferWithData.length;
    this.eb(10);
  }
  DoubleArrayBuilder.prototype.y1g = function () {
    return this.y1l_1;
  };
  DoubleArrayBuilder.prototype.eb = function (requiredCapacity) {
    if (this.x1l_1.length < requiredCapacity)
      this.x1l_1 = copyOf_0(this.x1l_1, coerceAtLeast(requiredCapacity, imul(this.x1l_1.length, 2)));
  };
  DoubleArrayBuilder.prototype.z1l = function (c) {
    this.q1h(0, 1, null);
    var tmp = this.x1l_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.y1l_1;
    tmp0_this.y1l_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  DoubleArrayBuilder.prototype.x2 = function () {
    return copyOf_0(this.x1l_1, this.y1l_1);
  };
  DoubleArrayBuilder.$metadata$ = classMeta('DoubleArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function FloatArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.g1m_1 = bufferWithData;
    this.h1m_1 = bufferWithData.length;
    this.eb(10);
  }
  FloatArrayBuilder.prototype.y1g = function () {
    return this.h1m_1;
  };
  FloatArrayBuilder.prototype.eb = function (requiredCapacity) {
    if (this.g1m_1.length < requiredCapacity)
      this.g1m_1 = copyOf_1(this.g1m_1, coerceAtLeast(requiredCapacity, imul(this.g1m_1.length, 2)));
  };
  FloatArrayBuilder.prototype.i1m = function (c) {
    this.q1h(0, 1, null);
    var tmp = this.g1m_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.h1m_1;
    tmp0_this.h1m_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  FloatArrayBuilder.prototype.x2 = function () {
    return copyOf_1(this.g1m_1, this.h1m_1);
  };
  FloatArrayBuilder.$metadata$ = classMeta('FloatArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function LongArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.p1m_1 = bufferWithData;
    this.q1m_1 = bufferWithData.length;
    this.eb(10);
  }
  LongArrayBuilder.prototype.y1g = function () {
    return this.q1m_1;
  };
  LongArrayBuilder.prototype.eb = function (requiredCapacity) {
    if (this.p1m_1.length < requiredCapacity)
      this.p1m_1 = copyOf_2(this.p1m_1, coerceAtLeast(requiredCapacity, imul(this.p1m_1.length, 2)));
  };
  LongArrayBuilder.prototype.r1m = function (c) {
    this.q1h(0, 1, null);
    var tmp = this.p1m_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.q1m_1;
    tmp0_this.q1m_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  LongArrayBuilder.prototype.x2 = function () {
    return copyOf_2(this.p1m_1, this.q1m_1);
  };
  LongArrayBuilder.$metadata$ = classMeta('LongArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function IntArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.y1m_1 = bufferWithData;
    this.z1m_1 = bufferWithData.length;
    this.eb(10);
  }
  IntArrayBuilder.prototype.y1g = function () {
    return this.z1m_1;
  };
  IntArrayBuilder.prototype.eb = function (requiredCapacity) {
    if (this.y1m_1.length < requiredCapacity)
      this.y1m_1 = copyOf_3(this.y1m_1, coerceAtLeast(requiredCapacity, imul(this.y1m_1.length, 2)));
  };
  IntArrayBuilder.prototype.a1n = function (c) {
    this.q1h(0, 1, null);
    var tmp = this.y1m_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.z1m_1;
    tmp0_this.z1m_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  IntArrayBuilder.prototype.x2 = function () {
    return copyOf_3(this.y1m_1, this.z1m_1);
  };
  IntArrayBuilder.$metadata$ = classMeta('IntArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function ShortArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.h1n_1 = bufferWithData;
    this.i1n_1 = bufferWithData.length;
    this.eb(10);
  }
  ShortArrayBuilder.prototype.y1g = function () {
    return this.i1n_1;
  };
  ShortArrayBuilder.prototype.eb = function (requiredCapacity) {
    if (this.h1n_1.length < requiredCapacity)
      this.h1n_1 = copyOf_4(this.h1n_1, coerceAtLeast(requiredCapacity, imul(this.h1n_1.length, 2)));
  };
  ShortArrayBuilder.prototype.j1n = function (c) {
    this.q1h(0, 1, null);
    var tmp = this.h1n_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.i1n_1;
    tmp0_this.i1n_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  ShortArrayBuilder.prototype.x2 = function () {
    return copyOf_4(this.h1n_1, this.i1n_1);
  };
  ShortArrayBuilder.$metadata$ = classMeta('ShortArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function ByteArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.q1n_1 = bufferWithData;
    this.r1n_1 = bufferWithData.length;
    this.eb(10);
  }
  ByteArrayBuilder.prototype.y1g = function () {
    return this.r1n_1;
  };
  ByteArrayBuilder.prototype.eb = function (requiredCapacity) {
    if (this.q1n_1.length < requiredCapacity)
      this.q1n_1 = copyOf_5(this.q1n_1, coerceAtLeast(requiredCapacity, imul(this.q1n_1.length, 2)));
  };
  ByteArrayBuilder.prototype.s1n = function (c) {
    this.q1h(0, 1, null);
    var tmp = this.q1n_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.r1n_1;
    tmp0_this.r1n_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  ByteArrayBuilder.prototype.x2 = function () {
    return copyOf_5(this.q1n_1, this.r1n_1);
  };
  ByteArrayBuilder.$metadata$ = classMeta('ByteArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function BooleanArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.z1n_1 = bufferWithData;
    this.a1o_1 = bufferWithData.length;
    this.eb(10);
  }
  BooleanArrayBuilder.prototype.y1g = function () {
    return this.a1o_1;
  };
  BooleanArrayBuilder.prototype.eb = function (requiredCapacity) {
    if (this.z1n_1.length < requiredCapacity)
      this.z1n_1 = copyOf_6(this.z1n_1, coerceAtLeast(requiredCapacity, imul(this.z1n_1.length, 2)));
  };
  BooleanArrayBuilder.prototype.b1o = function (c) {
    this.q1h(0, 1, null);
    var tmp = this.z1n_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.a1o_1;
    tmp0_this.a1o_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  BooleanArrayBuilder.prototype.x2 = function () {
    return copyOf_6(this.z1n_1, this.a1o_1);
  };
  BooleanArrayBuilder.$metadata$ = classMeta('BooleanArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function get_BUILTIN_SERIALIZERS() {
    init_properties_Primitives_kt_u7dn2q();
    return BUILTIN_SERIALIZERS;
  }
  var BUILTIN_SERIALIZERS;
  function StringSerializer() {
    StringSerializer_instance = this;
    this.d1o_1 = new PrimitiveSerialDescriptor_0('kotlin.String', STRING_getInstance());
  }
  StringSerializer.prototype.i1b = function () {
    return this.d1o_1;
  };
  StringSerializer.prototype.e1o = function (encoder, value) {
    return encoder.e1f(value);
  };
  StringSerializer.prototype.j1b = function (encoder, value) {
    return this.e1o(encoder, (!(value == null) ? typeof value === 'string' : false) ? value : THROW_CCE());
  };
  StringSerializer.prototype.k1b = function (decoder) {
    return decoder.y1d();
  };
  StringSerializer.$metadata$ = objectMeta('StringSerializer', [KSerializer]);
  var StringSerializer_instance;
  function StringSerializer_getInstance() {
    if (StringSerializer_instance == null)
      new StringSerializer();
    return StringSerializer_instance;
  }
  function CharSerializer() {
    CharSerializer_instance = this;
    this.f1o_1 = new PrimitiveSerialDescriptor_0('kotlin.Char', CHAR_getInstance());
  }
  CharSerializer.prototype.i1b = function () {
    return this.f1o_1;
  };
  CharSerializer.prototype.g1o = function (encoder, value) {
    return encoder.d1f(value);
  };
  CharSerializer.prototype.j1b = function (encoder, value) {
    return this.g1o(encoder, value instanceof Char ? value.x_1 : THROW_CCE());
  };
  CharSerializer.prototype.h1o = function (decoder) {
    return decoder.x1d();
  };
  CharSerializer.prototype.k1b = function (decoder) {
    return new Char(this.h1o(decoder));
  };
  CharSerializer.$metadata$ = objectMeta('CharSerializer', [KSerializer]);
  var CharSerializer_instance;
  function CharSerializer_getInstance() {
    if (CharSerializer_instance == null)
      new CharSerializer();
    return CharSerializer_instance;
  }
  function DoubleSerializer() {
    DoubleSerializer_instance = this;
    this.i1o_1 = new PrimitiveSerialDescriptor_0('kotlin.Double', DOUBLE_getInstance());
  }
  DoubleSerializer.prototype.i1b = function () {
    return this.i1o_1;
  };
  DoubleSerializer.prototype.j1o = function (encoder, value) {
    return encoder.c1f(value);
  };
  DoubleSerializer.prototype.j1b = function (encoder, value) {
    return this.j1o(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  DoubleSerializer.prototype.k1b = function (decoder) {
    return decoder.w1d();
  };
  DoubleSerializer.$metadata$ = objectMeta('DoubleSerializer', [KSerializer]);
  var DoubleSerializer_instance;
  function DoubleSerializer_getInstance() {
    if (DoubleSerializer_instance == null)
      new DoubleSerializer();
    return DoubleSerializer_instance;
  }
  function FloatSerializer() {
    FloatSerializer_instance = this;
    this.k1o_1 = new PrimitiveSerialDescriptor_0('kotlin.Float', FLOAT_getInstance());
  }
  FloatSerializer.prototype.i1b = function () {
    return this.k1o_1;
  };
  FloatSerializer.prototype.l1o = function (encoder, value) {
    return encoder.b1f(value);
  };
  FloatSerializer.prototype.j1b = function (encoder, value) {
    return this.l1o(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  FloatSerializer.prototype.k1b = function (decoder) {
    return decoder.v1d();
  };
  FloatSerializer.$metadata$ = objectMeta('FloatSerializer', [KSerializer]);
  var FloatSerializer_instance;
  function FloatSerializer_getInstance() {
    if (FloatSerializer_instance == null)
      new FloatSerializer();
    return FloatSerializer_instance;
  }
  function LongSerializer() {
    LongSerializer_instance = this;
    this.m1o_1 = new PrimitiveSerialDescriptor_0('kotlin.Long', LONG_getInstance());
  }
  LongSerializer.prototype.i1b = function () {
    return this.m1o_1;
  };
  LongSerializer.prototype.n1o = function (encoder, value) {
    return encoder.a1f(value);
  };
  LongSerializer.prototype.j1b = function (encoder, value) {
    return this.n1o(encoder, value instanceof Long ? value : THROW_CCE());
  };
  LongSerializer.prototype.k1b = function (decoder) {
    return decoder.u1d();
  };
  LongSerializer.$metadata$ = objectMeta('LongSerializer', [KSerializer]);
  var LongSerializer_instance;
  function LongSerializer_getInstance() {
    if (LongSerializer_instance == null)
      new LongSerializer();
    return LongSerializer_instance;
  }
  function IntSerializer() {
    IntSerializer_instance = this;
    this.o1o_1 = new PrimitiveSerialDescriptor_0('kotlin.Int', INT_getInstance());
  }
  IntSerializer.prototype.i1b = function () {
    return this.o1o_1;
  };
  IntSerializer.prototype.p1o = function (encoder, value) {
    return encoder.z1e(value);
  };
  IntSerializer.prototype.j1b = function (encoder, value) {
    return this.p1o(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  IntSerializer.prototype.k1b = function (decoder) {
    return decoder.t1d();
  };
  IntSerializer.$metadata$ = objectMeta('IntSerializer', [KSerializer]);
  var IntSerializer_instance;
  function IntSerializer_getInstance() {
    if (IntSerializer_instance == null)
      new IntSerializer();
    return IntSerializer_instance;
  }
  function ShortSerializer() {
    ShortSerializer_instance = this;
    this.q1o_1 = new PrimitiveSerialDescriptor_0('kotlin.Short', SHORT_getInstance());
  }
  ShortSerializer.prototype.i1b = function () {
    return this.q1o_1;
  };
  ShortSerializer.prototype.r1o = function (encoder, value) {
    return encoder.y1e(value);
  };
  ShortSerializer.prototype.j1b = function (encoder, value) {
    return this.r1o(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  ShortSerializer.prototype.k1b = function (decoder) {
    return decoder.s1d();
  };
  ShortSerializer.$metadata$ = objectMeta('ShortSerializer', [KSerializer]);
  var ShortSerializer_instance;
  function ShortSerializer_getInstance() {
    if (ShortSerializer_instance == null)
      new ShortSerializer();
    return ShortSerializer_instance;
  }
  function ByteSerializer() {
    ByteSerializer_instance = this;
    this.s1o_1 = new PrimitiveSerialDescriptor_0('kotlin.Byte', BYTE_getInstance());
  }
  ByteSerializer.prototype.i1b = function () {
    return this.s1o_1;
  };
  ByteSerializer.prototype.t1o = function (encoder, value) {
    return encoder.x1e(value);
  };
  ByteSerializer.prototype.j1b = function (encoder, value) {
    return this.t1o(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  ByteSerializer.prototype.k1b = function (decoder) {
    return decoder.r1d();
  };
  ByteSerializer.$metadata$ = objectMeta('ByteSerializer', [KSerializer]);
  var ByteSerializer_instance;
  function ByteSerializer_getInstance() {
    if (ByteSerializer_instance == null)
      new ByteSerializer();
    return ByteSerializer_instance;
  }
  function BooleanSerializer() {
    BooleanSerializer_instance = this;
    this.u1o_1 = new PrimitiveSerialDescriptor_0('kotlin.Boolean', BOOLEAN_getInstance());
  }
  BooleanSerializer.prototype.i1b = function () {
    return this.u1o_1;
  };
  BooleanSerializer.prototype.v1o = function (encoder, value) {
    return encoder.w1e(value);
  };
  BooleanSerializer.prototype.j1b = function (encoder, value) {
    return this.v1o(encoder, (!(value == null) ? typeof value === 'boolean' : false) ? value : THROW_CCE());
  };
  BooleanSerializer.prototype.k1b = function (decoder) {
    return decoder.q1d();
  };
  BooleanSerializer.$metadata$ = objectMeta('BooleanSerializer', [KSerializer]);
  var BooleanSerializer_instance;
  function BooleanSerializer_getInstance() {
    if (BooleanSerializer_instance == null)
      new BooleanSerializer();
    return BooleanSerializer_instance;
  }
  function UnitSerializer() {
    UnitSerializer_instance = this;
    this.w1o_1 = new ObjectSerializer('kotlin.Unit', Unit_getInstance());
  }
  UnitSerializer.prototype.i1b = function () {
    return this.w1o_1.i1b();
  };
  UnitSerializer.prototype.x1o = function (decoder) {
    this.w1o_1.k1b(decoder);
  };
  UnitSerializer.prototype.k1b = function (decoder) {
    this.x1o(decoder);
    return Unit_getInstance();
  };
  UnitSerializer.prototype.y1o = function (encoder, value) {
    this.w1o_1.j1b(encoder, Unit_getInstance());
  };
  UnitSerializer.prototype.j1b = function (encoder, value) {
    return this.y1o(encoder, value instanceof Unit ? value : THROW_CCE());
  };
  UnitSerializer.$metadata$ = objectMeta('UnitSerializer', [KSerializer]);
  var UnitSerializer_instance;
  function UnitSerializer_getInstance() {
    if (UnitSerializer_instance == null)
      new UnitSerializer();
    return UnitSerializer_instance;
  }
  function error($this) {
    throw IllegalStateException_init_$Create$('Primitive descriptor does not have elements');
  }
  function PrimitiveSerialDescriptor_0(serialName, kind) {
    this.z1o_1 = serialName;
    this.a1p_1 = kind;
  }
  PrimitiveSerialDescriptor_0.prototype.j1c = function () {
    return this.z1o_1;
  };
  PrimitiveSerialDescriptor_0.prototype.n1c = function () {
    return this.a1p_1;
  };
  PrimitiveSerialDescriptor_0.prototype.l1c = function () {
    return 0;
  };
  PrimitiveSerialDescriptor_0.prototype.r1c = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.q1c = function (name) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.s1c = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.p1c = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.o1c = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.toString = function () {
    return 'PrimitiveDescriptor(' + this.z1o_1 + ')';
  };
  PrimitiveSerialDescriptor_0.$metadata$ = classMeta('PrimitiveSerialDescriptor', [SerialDescriptor]);
  function builtinSerializerOrNull(_this__u8e3s4) {
    init_properties_Primitives_kt_u7dn2q();
    var tmp = get_BUILTIN_SERIALIZERS().v1(_this__u8e3s4);
    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : THROW_CCE();
  }
  function PrimitiveDescriptorSafe(serialName, kind) {
    init_properties_Primitives_kt_u7dn2q();
    checkName(serialName);
    return new PrimitiveSerialDescriptor_0(serialName, kind);
  }
  function checkName(serialName) {
    init_properties_Primitives_kt_u7dn2q();
    var keys = get_BUILTIN_SERIALIZERS().w1();
    var tmp0_iterator = keys.d();
    while (tmp0_iterator.e()) {
      var primitive = tmp0_iterator.f();
      var simpleName = capitalize(ensureNotNull(primitive.xc()));
      var qualifiedName = 'kotlin.' + simpleName;
      if (equals_0(serialName, qualifiedName, true) ? true : equals_0(serialName, simpleName, true)) {
        throw IllegalArgumentException_init_$Create$(trimIndent('\n                The name of serial descriptor should uniquely identify associated serializer.\n                For serial name ' + serialName + ' there already exist ' + capitalize(simpleName) + 'Serializer.\n                Please refer to SerialDescriptor documentation for additional information.\n            '));
      }
    }
  }
  function capitalize(_this__u8e3s4) {
    init_properties_Primitives_kt_u7dn2q();
    var tmp$ret$4;
    {
      var tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = charSequenceLength(_this__u8e3s4) > 0;
      }
      if (tmp$ret$0) {
        var tmp$ret$1;
        {
          var tmp0__anonymous__q1qw7t = charSequenceGet(_this__u8e3s4, 0);
          tmp$ret$1 = isLowerCase(tmp0__anonymous__q1qw7t) ? titlecase(tmp0__anonymous__q1qw7t) : toString_0(tmp0__anonymous__q1qw7t);
        }
        var tmp_0 = toString(tmp$ret$1);
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            tmp$ret$2 = _this__u8e3s4;
          }
          tmp$ret$3 = tmp$ret$2.substring(1);
        }
        tmp = tmp_0 + tmp$ret$3;
      } else {
        tmp = _this__u8e3s4;
      }
      tmp$ret$4 = tmp;
    }
    return tmp$ret$4;
  }
  var properties_initialized_Primitives_kt_6dpii6;
  function init_properties_Primitives_kt_u7dn2q() {
    if (properties_initialized_Primitives_kt_6dpii6) {
    } else {
      properties_initialized_Primitives_kt_6dpii6 = true;
      BUILTIN_SERIALIZERS = mapOf([to(PrimitiveClasses_getInstance().qe(), serializer_1(StringCompanionObject_getInstance())), to(getKClass(Char), serializer_2(Companion_getInstance_1())), to(PrimitiveClasses_getInstance().te(), CharArraySerializer()), to(PrimitiveClasses_getInstance().oe(), serializer_3(DoubleCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().ze(), DoubleArraySerializer()), to(PrimitiveClasses_getInstance().ne(), serializer_4(FloatCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().ye(), FloatArraySerializer()), to(getKClass(Long), serializer_5(Companion_getInstance_0())), to(PrimitiveClasses_getInstance().xe(), LongArraySerializer()), to(PrimitiveClasses_getInstance().me(), serializer_6(IntCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().we(), IntArraySerializer()), to(PrimitiveClasses_getInstance().le(), serializer_7(ShortCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().ve(), ShortArraySerializer()), to(PrimitiveClasses_getInstance().ke(), serializer_8(ByteCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().ue(), ByteArraySerializer()), to(PrimitiveClasses_getInstance().je(), serializer_9(BooleanCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().se(), BooleanArraySerializer()), to(getKClass(Unit), serializer_10(Unit_getInstance())), to(getKClass(Duration), serializer_11(Companion_getInstance()))]);
    }
  }
  function NamedValueDecoder() {
    TaggedDecoder.call(this);
  }
  NamedValueDecoder.prototype.d1p = function (_this__u8e3s4, index) {
    return this.f1p(this.e1p(_this__u8e3s4, index));
  };
  NamedValueDecoder.prototype.f1p = function (nestedName) {
    var tmp0_elvis_lhs = this.i1p();
    return this.j1p(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
  };
  NamedValueDecoder.prototype.e1p = function (desc, index) {
    return desc.r1c(index);
  };
  NamedValueDecoder.prototype.j1p = function (parentName, childName) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(parentName) === 0;
    }
    if (tmp$ret$0) {
      tmp = childName;
    } else {
      tmp = parentName + '.' + childName;
    }
    return tmp;
  };
  NamedValueDecoder.$metadata$ = classMeta('NamedValueDecoder', undefined, undefined, undefined, undefined, TaggedDecoder.prototype);
  function tagBlock($this, tag, block) {
    $this.w1p(tag);
    var r = block();
    if (!$this.h1p_1) {
      $this.x1p();
    }
    $this.h1p_1 = false;
    return r;
  }
  function TaggedDecoder$decodeSerializableElement$lambda(this$0, $deserializer, $previousValue) {
    return function () {
      return this$0.a1e($deserializer, $previousValue);
    };
  }
  function TaggedDecoder$decodeNullableSerializableElement$lambda(this$0, $deserializer, $previousValue) {
    return function () {
      return this$0.o1d() ? this$0.a1e($deserializer, $previousValue) : this$0.p1d();
    };
  }
  function TaggedDecoder() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.g1p_1 = tmp$ret$0;
    this.h1p_1 = false;
  }
  TaggedDecoder.prototype.b1c = function () {
    return EmptySerializersModule_0();
  };
  TaggedDecoder.prototype.k1p = function (tag) {
    throw SerializationException_init_$Create$('' + getKClassFromExpression(this) + " can't retrieve untyped values");
  };
  TaggedDecoder.prototype.l1p = function (tag) {
    return true;
  };
  TaggedDecoder.prototype.m1p = function (tag) {
    var tmp = this.k1p(tag);
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.n1p = function (tag) {
    var tmp = this.k1p(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.o1p = function (tag) {
    var tmp = this.k1p(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.p1p = function (tag) {
    var tmp = this.k1p(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.q1p = function (tag) {
    var tmp = this.k1p(tag);
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.r1p = function (tag) {
    var tmp = this.k1p(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.s1p = function (tag) {
    var tmp = this.k1p(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.t1p = function (tag) {
    var tmp = this.k1p(tag);
    return tmp instanceof Char ? tmp.x_1 : THROW_CCE();
  };
  TaggedDecoder.prototype.u1p = function (tag) {
    var tmp = this.k1p(tag);
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.v1p = function (tag, inlineDescriptor) {
    var tmp$ret$0;
    {
      {
      }
      {
        this.w1p(tag);
      }
      tmp$ret$0 = this;
    }
    return tmp$ret$0;
  };
  TaggedDecoder.prototype.a1e = function (deserializer, previousValue) {
    return this.b1e(deserializer);
  };
  TaggedDecoder.prototype.z1d = function (descriptor) {
    return this.v1p(this.x1p(), descriptor);
  };
  TaggedDecoder.prototype.o1d = function () {
    var tmp0_elvis_lhs = this.i1p();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var currentTag = tmp;
    return this.l1p(currentTag);
  };
  TaggedDecoder.prototype.p1d = function () {
    return null;
  };
  TaggedDecoder.prototype.q1d = function () {
    return this.m1p(this.x1p());
  };
  TaggedDecoder.prototype.r1d = function () {
    return this.n1p(this.x1p());
  };
  TaggedDecoder.prototype.s1d = function () {
    return this.o1p(this.x1p());
  };
  TaggedDecoder.prototype.t1d = function () {
    return this.p1p(this.x1p());
  };
  TaggedDecoder.prototype.u1d = function () {
    return this.q1p(this.x1p());
  };
  TaggedDecoder.prototype.v1d = function () {
    return this.r1p(this.x1p());
  };
  TaggedDecoder.prototype.w1d = function () {
    return this.s1p(this.x1p());
  };
  TaggedDecoder.prototype.x1d = function () {
    return this.t1p(this.x1p());
  };
  TaggedDecoder.prototype.y1d = function () {
    return this.u1p(this.x1p());
  };
  TaggedDecoder.prototype.c1e = function (descriptor) {
    return this;
  };
  TaggedDecoder.prototype.d1e = function (descriptor) {
  };
  TaggedDecoder.prototype.e1e = function (descriptor, index) {
    return this.m1p(this.d1p(descriptor, index));
  };
  TaggedDecoder.prototype.f1e = function (descriptor, index) {
    return this.n1p(this.d1p(descriptor, index));
  };
  TaggedDecoder.prototype.g1e = function (descriptor, index) {
    return this.o1p(this.d1p(descriptor, index));
  };
  TaggedDecoder.prototype.h1e = function (descriptor, index) {
    return this.p1p(this.d1p(descriptor, index));
  };
  TaggedDecoder.prototype.i1e = function (descriptor, index) {
    return this.q1p(this.d1p(descriptor, index));
  };
  TaggedDecoder.prototype.j1e = function (descriptor, index) {
    return this.r1p(this.d1p(descriptor, index));
  };
  TaggedDecoder.prototype.k1e = function (descriptor, index) {
    return this.s1p(this.d1p(descriptor, index));
  };
  TaggedDecoder.prototype.l1e = function (descriptor, index) {
    return this.t1p(this.d1p(descriptor, index));
  };
  TaggedDecoder.prototype.m1e = function (descriptor, index) {
    return this.u1p(this.d1p(descriptor, index));
  };
  TaggedDecoder.prototype.n1e = function (descriptor, index, deserializer, previousValue) {
    var tmp = this.d1p(descriptor, index);
    return tagBlock(this, tmp, TaggedDecoder$decodeSerializableElement$lambda(this, deserializer, previousValue));
  };
  TaggedDecoder.prototype.p1e = function (descriptor, index, deserializer, previousValue) {
    var tmp = this.d1p(descriptor, index);
    return tagBlock(this, tmp, TaggedDecoder$decodeNullableSerializableElement$lambda(this, deserializer, previousValue));
  };
  TaggedDecoder.prototype.i1p = function () {
    return lastOrNull(this.g1p_1);
  };
  TaggedDecoder.prototype.w1p = function (name) {
    this.g1p_1.c(name);
  };
  TaggedDecoder.prototype.x1p = function () {
    var r = this.g1p_1.f3(get_lastIndex_0(this.g1p_1));
    this.h1p_1 = true;
    return r;
  };
  TaggedDecoder.$metadata$ = classMeta('TaggedDecoder', [Decoder, CompositeDecoder]);
  function get_NULL() {
    init_properties_Tuples_kt_v8bvox();
    return NULL;
  }
  var NULL;
  function MapEntry(key, value) {
    this.y1p_1 = key;
    this.z1p_1 = value;
  }
  MapEntry.prototype.j1 = function () {
    return this.y1p_1;
  };
  MapEntry.prototype.l1 = function () {
    return this.z1p_1;
  };
  MapEntry.prototype.toString = function () {
    return 'MapEntry(key=' + this.y1p_1 + ', value=' + this.z1p_1 + ')';
  };
  MapEntry.prototype.hashCode = function () {
    var result = this.y1p_1 == null ? 0 : hashCode(this.y1p_1);
    result = imul(result, 31) + (this.z1p_1 == null ? 0 : hashCode(this.z1p_1)) | 0;
    return result;
  };
  MapEntry.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapEntry))
      return false;
    var tmp0_other_with_cast = other instanceof MapEntry ? other : THROW_CCE();
    if (!equals(this.y1p_1, tmp0_other_with_cast.y1p_1))
      return false;
    if (!equals(this.z1p_1, tmp0_other_with_cast.z1p_1))
      return false;
    return true;
  };
  MapEntry.$metadata$ = classMeta('MapEntry', [Entry]);
  function MapEntrySerializer$descriptor$lambda($keySerializer, $valueSerializer) {
    return function ($this$buildSerialDescriptor) {
      var tmp = $keySerializer.i1b();
      $this$buildSerialDescriptor.t1b('key', tmp, null, false, 12, null);
      var tmp_0 = $valueSerializer.i1b();
      $this$buildSerialDescriptor.t1b('value', tmp_0, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function MapEntrySerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    var tmp_0 = MAP_getInstance();
    tmp.c1q_1 = buildSerialDescriptor$default('kotlin.collections.Map.Entry', tmp_0, [], MapEntrySerializer$descriptor$lambda(keySerializer, valueSerializer), 4, null);
  }
  MapEntrySerializer_0.prototype.i1b = function () {
    return this.c1q_1;
  };
  MapEntrySerializer_0.prototype.d1q = function (_this__u8e3s4) {
    return _this__u8e3s4.j1();
  };
  MapEntrySerializer_0.prototype.e1q = function (_this__u8e3s4) {
    return this.d1q((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Entry) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  MapEntrySerializer_0.prototype.f1q = function (_this__u8e3s4) {
    return _this__u8e3s4.l1();
  };
  MapEntrySerializer_0.prototype.g1q = function (_this__u8e3s4) {
    return this.f1q((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Entry) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  MapEntrySerializer_0.prototype.h1q = function (key, value) {
    return new MapEntry(key, value);
  };
  MapEntrySerializer_0.$metadata$ = classMeta('MapEntrySerializer', undefined, undefined, undefined, undefined, KeyValueSerializer.prototype);
  function PairSerializer$descriptor$lambda($keySerializer, $valueSerializer) {
    return function ($this$buildClassSerialDescriptor) {
      var tmp = $keySerializer.i1b();
      $this$buildClassSerialDescriptor.t1b('first', tmp, null, false, 12, null);
      var tmp_0 = $valueSerializer.i1b();
      $this$buildClassSerialDescriptor.t1b('second', tmp_0, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function PairSerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    tmp.n1q_1 = buildClassSerialDescriptor$default('kotlin.Pair', [], PairSerializer$descriptor$lambda(keySerializer, valueSerializer), 2, null);
  }
  PairSerializer_0.prototype.i1b = function () {
    return this.n1q_1;
  };
  PairSerializer_0.prototype.o1q = function (_this__u8e3s4) {
    return _this__u8e3s4.b3_1;
  };
  PairSerializer_0.prototype.e1q = function (_this__u8e3s4) {
    return this.o1q(_this__u8e3s4 instanceof Pair ? _this__u8e3s4 : THROW_CCE());
  };
  PairSerializer_0.prototype.p1q = function (_this__u8e3s4) {
    return _this__u8e3s4.c3_1;
  };
  PairSerializer_0.prototype.g1q = function (_this__u8e3s4) {
    return this.p1q(_this__u8e3s4 instanceof Pair ? _this__u8e3s4 : THROW_CCE());
  };
  PairSerializer_0.prototype.h1q = function (key, value) {
    return to(key, value);
  };
  PairSerializer_0.$metadata$ = classMeta('PairSerializer', undefined, undefined, undefined, undefined, KeyValueSerializer.prototype);
  function decodeSequentially_1($this, composite) {
    var a = composite.o1e($this.t1q_1, 0, $this.q1q_1, null, 8, null);
    var b = composite.o1e($this.t1q_1, 1, $this.r1q_1, null, 8, null);
    var c = composite.o1e($this.t1q_1, 2, $this.s1q_1, null, 8, null);
    composite.d1e($this.t1q_1);
    return new Triple(a, b, c);
  }
  function decodeStructure_0($this, composite) {
    var a = get_NULL();
    var b = get_NULL();
    var c = get_NULL();
    mainLoop: while (true) {
      var index = composite.r1e($this.t1q_1);
      Companion_getInstance_2();
      if (index === -1) {
        break mainLoop;
      } else {
        if (index === 0) {
          a = composite.o1e($this.t1q_1, 0, $this.q1q_1, null, 8, null);
        } else {
          if (index === 1) {
            b = composite.o1e($this.t1q_1, 1, $this.r1q_1, null, 8, null);
          } else {
            if (index === 2) {
              c = composite.o1e($this.t1q_1, 2, $this.s1q_1, null, 8, null);
            } else {
              throw SerializationException_init_$Create$('Unexpected index ' + index);
            }
          }
        }
      }
    }
    composite.d1e($this.t1q_1);
    if (a === get_NULL())
      throw SerializationException_init_$Create$("Element 'first' is missing");
    if (b === get_NULL())
      throw SerializationException_init_$Create$("Element 'second' is missing");
    if (c === get_NULL())
      throw SerializationException_init_$Create$("Element 'third' is missing");
    var tmp = (a == null ? true : isObject(a)) ? a : THROW_CCE();
    var tmp_0 = (b == null ? true : isObject(b)) ? b : THROW_CCE();
    return new Triple(tmp, tmp_0, (c == null ? true : isObject(c)) ? c : THROW_CCE());
  }
  function TripleSerializer$descriptor$lambda(this$0) {
    return function ($this$buildClassSerialDescriptor) {
      var tmp = this$0.q1q_1.i1b();
      $this$buildClassSerialDescriptor.t1b('first', tmp, null, false, 12, null);
      var tmp_0 = this$0.r1q_1.i1b();
      $this$buildClassSerialDescriptor.t1b('second', tmp_0, null, false, 12, null);
      var tmp_1 = this$0.s1q_1.i1b();
      $this$buildClassSerialDescriptor.t1b('third', tmp_1, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function TripleSerializer_0(aSerializer, bSerializer, cSerializer) {
    this.q1q_1 = aSerializer;
    this.r1q_1 = bSerializer;
    this.s1q_1 = cSerializer;
    var tmp = this;
    tmp.t1q_1 = buildClassSerialDescriptor$default('kotlin.Triple', [], TripleSerializer$descriptor$lambda(this), 2, null);
  }
  TripleSerializer_0.prototype.i1b = function () {
    return this.t1q_1;
  };
  TripleSerializer_0.prototype.u1q = function (encoder, value) {
    var structuredEncoder = encoder.c1e(this.t1q_1);
    structuredEncoder.p1f(this.t1q_1, 0, this.q1q_1, value.a7_1);
    structuredEncoder.p1f(this.t1q_1, 1, this.r1q_1, value.b7_1);
    structuredEncoder.p1f(this.t1q_1, 2, this.s1q_1, value.c7_1);
    structuredEncoder.d1e(this.t1q_1);
  };
  TripleSerializer_0.prototype.j1b = function (encoder, value) {
    return this.u1q(encoder, value instanceof Triple ? value : THROW_CCE());
  };
  TripleSerializer_0.prototype.k1b = function (decoder) {
    var composite = decoder.c1e(this.t1q_1);
    if (composite.q1e()) {
      return decodeSequentially_1(this, composite);
    }
    return decodeStructure_0(this, composite);
  };
  TripleSerializer_0.$metadata$ = classMeta('TripleSerializer', [KSerializer]);
  function KeyValueSerializer(keySerializer, valueSerializer) {
    this.i1q_1 = keySerializer;
    this.j1q_1 = valueSerializer;
  }
  KeyValueSerializer.prototype.k1q = function (encoder, value) {
    var structuredEncoder = encoder.c1e(this.i1b());
    structuredEncoder.p1f(this.i1b(), 0, this.i1q_1, this.e1q(value));
    structuredEncoder.p1f(this.i1b(), 1, this.j1q_1, this.g1q(value));
    structuredEncoder.d1e(this.i1b());
  };
  KeyValueSerializer.prototype.j1b = function (encoder, value) {
    return this.k1q(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  KeyValueSerializer.prototype.k1b = function (decoder) {
    var composite = decoder.c1e(this.i1b());
    if (composite.q1e()) {
      var tmp = this.i1b();
      var key = composite.o1e(tmp, 0, this.i1q_1, null, 8, null);
      var tmp_0 = this.i1b();
      var value = composite.o1e(tmp_0, 1, this.j1q_1, null, 8, null);
      return this.h1q(key, value);
    }
    var key_0 = get_NULL();
    var value_0 = get_NULL();
    mainLoop: while (true) {
      var idx = composite.r1e(this.i1b());
      Companion_getInstance_2();
      if (idx === -1) {
        break mainLoop;
      } else {
        if (idx === 0) {
          var tmp_1 = this.i1b();
          key_0 = composite.o1e(tmp_1, 0, this.i1q_1, null, 8, null);
        } else {
          if (idx === 1) {
            var tmp_2 = this.i1b();
            value_0 = composite.o1e(tmp_2, 1, this.j1q_1, null, 8, null);
          } else {
            throw SerializationException_init_$Create$('Invalid index: ' + idx);
          }
        }
      }
    }
    composite.d1e(this.i1b());
    if (key_0 === get_NULL())
      throw SerializationException_init_$Create$("Element 'key' is missing");
    if (value_0 === get_NULL())
      throw SerializationException_init_$Create$("Element 'value' is missing");
    var tmp_3 = (key_0 == null ? true : isObject(key_0)) ? key_0 : THROW_CCE();
    return this.h1q(tmp_3, (value_0 == null ? true : isObject(value_0)) ? value_0 : THROW_CCE());
  };
  KeyValueSerializer.$metadata$ = classMeta('KeyValueSerializer', [KSerializer]);
  var properties_initialized_Tuples_kt_3vs7ar;
  function init_properties_Tuples_kt_v8bvox() {
    if (properties_initialized_Tuples_kt_3vs7ar) {
    } else {
      properties_initialized_Tuples_kt_3vs7ar = true;
      NULL = new Object();
    }
  }
  function UIntSerializer() {
    UIntSerializer_instance = this;
    this.v1q_1 = InlinePrimitiveDescriptor('kotlin.UInt', serializer_6(IntCompanionObject_getInstance()));
  }
  UIntSerializer.prototype.i1b = function () {
    return this.v1q_1;
  };
  UIntSerializer.prototype.w1q = function (encoder, value) {
    var tmp = encoder.f1f(this.v1q_1);
    var tmp$ret$0;
    {
      tmp$ret$0 = _UInt___get_data__impl__f0vqqw(value);
    }
    tmp.z1e(tmp$ret$0);
  };
  UIntSerializer.prototype.j1b = function (encoder, value) {
    return this.w1q(encoder, value instanceof UInt ? value.n7_1 : THROW_CCE());
  };
  UIntSerializer.prototype.x1q = function (decoder) {
    var tmp$ret$0;
    {
      var tmp0_toUInt = decoder.z1d(this.v1q_1).t1d();
      tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp0_toUInt);
    }
    return tmp$ret$0;
  };
  UIntSerializer.prototype.k1b = function (decoder) {
    return new UInt(this.x1q(decoder));
  };
  UIntSerializer.$metadata$ = objectMeta('UIntSerializer', [KSerializer]);
  var UIntSerializer_instance;
  function UIntSerializer_getInstance() {
    if (UIntSerializer_instance == null)
      new UIntSerializer();
    return UIntSerializer_instance;
  }
  function ULongSerializer() {
    ULongSerializer_instance = this;
    this.y1q_1 = InlinePrimitiveDescriptor('kotlin.ULong', serializer_5(Companion_getInstance_0()));
  }
  ULongSerializer.prototype.i1b = function () {
    return this.y1q_1;
  };
  ULongSerializer.prototype.z1q = function (encoder, value) {
    var tmp = encoder.f1f(this.y1q_1);
    var tmp$ret$0;
    {
      tmp$ret$0 = _ULong___get_data__impl__fggpzb(value);
    }
    tmp.a1f(tmp$ret$0);
  };
  ULongSerializer.prototype.j1b = function (encoder, value) {
    return this.z1q(encoder, value instanceof ULong ? value.u7_1 : THROW_CCE());
  };
  ULongSerializer.prototype.a1r = function (decoder) {
    var tmp$ret$0;
    {
      var tmp0_toULong = decoder.z1d(this.y1q_1).u1d();
      tmp$ret$0 = _ULong___init__impl__c78o9k(tmp0_toULong);
    }
    return tmp$ret$0;
  };
  ULongSerializer.prototype.k1b = function (decoder) {
    return new ULong(this.a1r(decoder));
  };
  ULongSerializer.$metadata$ = objectMeta('ULongSerializer', [KSerializer]);
  var ULongSerializer_instance;
  function ULongSerializer_getInstance() {
    if (ULongSerializer_instance == null)
      new ULongSerializer();
    return ULongSerializer_instance;
  }
  function UByteSerializer() {
    UByteSerializer_instance = this;
    this.b1r_1 = InlinePrimitiveDescriptor('kotlin.UByte', serializer_8(ByteCompanionObject_getInstance()));
  }
  UByteSerializer.prototype.i1b = function () {
    return this.b1r_1;
  };
  UByteSerializer.prototype.c1r = function (encoder, value) {
    var tmp = encoder.f1f(this.b1r_1);
    var tmp$ret$0;
    {
      tmp$ret$0 = _UByte___get_data__impl__jof9qr(value);
    }
    tmp.x1e(tmp$ret$0);
  };
  UByteSerializer.prototype.j1b = function (encoder, value) {
    return this.c1r(encoder, value instanceof UByte ? value.h7_1 : THROW_CCE());
  };
  UByteSerializer.prototype.d1r = function (decoder) {
    var tmp$ret$0;
    {
      var tmp0_toUByte = decoder.z1d(this.b1r_1).r1d();
      tmp$ret$0 = _UByte___init__impl__g9hnc4(tmp0_toUByte);
    }
    return tmp$ret$0;
  };
  UByteSerializer.prototype.k1b = function (decoder) {
    return new UByte(this.d1r(decoder));
  };
  UByteSerializer.$metadata$ = objectMeta('UByteSerializer', [KSerializer]);
  var UByteSerializer_instance;
  function UByteSerializer_getInstance() {
    if (UByteSerializer_instance == null)
      new UByteSerializer();
    return UByteSerializer_instance;
  }
  function UShortSerializer() {
    UShortSerializer_instance = this;
    this.e1r_1 = InlinePrimitiveDescriptor('kotlin.UShort', serializer_7(ShortCompanionObject_getInstance()));
  }
  UShortSerializer.prototype.i1b = function () {
    return this.e1r_1;
  };
  UShortSerializer.prototype.f1r = function (encoder, value) {
    var tmp = encoder.f1f(this.e1r_1);
    var tmp$ret$0;
    {
      tmp$ret$0 = _UShort___get_data__impl__g0245(value);
    }
    tmp.y1e(tmp$ret$0);
  };
  UShortSerializer.prototype.j1b = function (encoder, value) {
    return this.f1r(encoder, value instanceof UShort ? value.a8_1 : THROW_CCE());
  };
  UShortSerializer.prototype.g1r = function (decoder) {
    var tmp$ret$0;
    {
      var tmp0_toUShort = decoder.z1d(this.e1r_1).s1d();
      tmp$ret$0 = _UShort___init__impl__jigrne(tmp0_toUShort);
    }
    return tmp$ret$0;
  };
  UShortSerializer.prototype.k1b = function (decoder) {
    return new UShort(this.g1r(decoder));
  };
  UShortSerializer.$metadata$ = objectMeta('UShortSerializer', [KSerializer]);
  var UShortSerializer_instance;
  function UShortSerializer_getInstance() {
    if (UShortSerializer_instance == null)
      new UShortSerializer();
    return UShortSerializer_instance;
  }
  function get_EmptySerializersModuleLegacyJs() {
    init_properties_SerializersModule_kt_swldyf();
    return EmptySerializersModule;
  }
  var EmptySerializersModule;
  function SerializersModule() {
  }
  SerializersModule.prototype.d1c = function (kClass, typeArgumentsSerializers, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      typeArgumentsSerializers = emptyList();
    return $handler == null ? this.e1c(kClass, typeArgumentsSerializers) : $handler(kClass, typeArgumentsSerializers);
  };
  SerializersModule.$metadata$ = classMeta('SerializersModule');
  function SerialModuleImpl(class2ContextualFactory, polyBase2Serializers, polyBase2DefaultSerializerProvider, polyBase2NamedSerializers, polyBase2DefaultDeserializerProvider) {
    SerializersModule.call(this);
    this.i1r_1 = class2ContextualFactory;
    this.j1r_1 = polyBase2Serializers;
    this.k1r_1 = polyBase2DefaultSerializerProvider;
    this.l1r_1 = polyBase2NamedSerializers;
    this.m1r_1 = polyBase2DefaultDeserializerProvider;
  }
  SerialModuleImpl.prototype.a1g = function (baseClass, value) {
    if (!isInstanceOf(value, baseClass))
      return null;
    var tmp0_safe_receiver = this.j1r_1.v1(baseClass);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.v1(getKClassFromExpression(value));
    var registered = (!(tmp == null) ? isInterface(tmp, SerializationStrategy) : false) ? tmp : null;
    if (!(registered == null))
      return registered;
    var tmp_0 = this.k1r_1.v1(baseClass);
    var tmp1_safe_receiver = (!(tmp_0 == null) ? typeof tmp_0 === 'function' : false) ? tmp_0 : null;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(value);
  };
  SerialModuleImpl.prototype.z1f = function (baseClass, serializedClassName) {
    var tmp0_safe_receiver = this.l1r_1.v1(baseClass);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        tmp$ret$0 = ((!(tmp0_safe_receiver == null) ? isInterface(tmp0_safe_receiver, Map) : false) ? tmp0_safe_receiver : THROW_CCE()).v1(serializedClassName);
      }
      tmp = tmp$ret$0;
    }
    var tmp_0 = tmp;
    var registered = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    if (!(registered == null))
      return registered;
    var tmp_1 = this.m1r_1.v1(baseClass);
    var tmp1_safe_receiver = (!(tmp_1 == null) ? typeof tmp_1 === 'function' : false) ? tmp_1 : null;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(serializedClassName);
  };
  SerialModuleImpl.prototype.e1c = function (kClass, typeArgumentsSerializers) {
    var tmp0_safe_receiver = this.i1r_1.v1(kClass);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n1r(typeArgumentsSerializers);
    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : null;
  };
  SerialModuleImpl.prototype.h1r = function (collector) {
    {
      var tmp0_forEach = this.i1r_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_forEach.j().d();
      }
      var tmp0_iterator = tmp$ret$0;
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        {
          var tmp$ret$1;
          {
            tmp$ret$1 = element.j1();
          }
          var kclass = tmp$ret$1;
          var tmp$ret$2;
          {
            tmp$ret$2 = element.l1();
          }
          var serial = tmp$ret$2;
          var tmp0_subject = serial;
          if (tmp0_subject instanceof Argless) {
            var tmp = isInterface(kclass, KClass) ? kclass : THROW_CCE();
            var tmp_0 = serial.q1r_1;
            collector.r1r(tmp, isInterface(tmp_0, KSerializer) ? tmp_0 : THROW_CCE());
          } else {
            if (tmp0_subject instanceof WithTypeArguments)
              collector.p1r(kclass, serial.o1r_1);
          }
        }
      }
    }
    {
      var tmp1_forEach = this.j1r_1;
      var tmp$ret$3;
      {
        tmp$ret$3 = tmp1_forEach.j().d();
      }
      var tmp0_iterator_0 = tmp$ret$3;
      while (tmp0_iterator_0.e()) {
        var element_0 = tmp0_iterator_0.f();
        {
          var tmp$ret$4;
          {
            tmp$ret$4 = element_0.j1();
          }
          var baseClass = tmp$ret$4;
          var tmp$ret$5;
          {
            tmp$ret$5 = element_0.l1();
          }
          var classMap = tmp$ret$5;
          {
            var tmp$ret$6;
            {
              tmp$ret$6 = classMap.j().d();
            }
            var tmp0_iterator_1 = tmp$ret$6;
            while (tmp0_iterator_1.e()) {
              var element_1 = tmp0_iterator_1.f();
              {
                var tmp$ret$7;
                {
                  tmp$ret$7 = element_1.j1();
                }
                var actualClass = tmp$ret$7;
                var tmp$ret$8;
                {
                  tmp$ret$8 = element_1.l1();
                }
                var serializer = tmp$ret$8;
                var tmp_1 = isInterface(baseClass, KClass) ? baseClass : THROW_CCE();
                var tmp_2 = isInterface(actualClass, KClass) ? actualClass : THROW_CCE();
                var tmp$ret$9;
                {
                  tmp$ret$9 = isInterface(serializer, KSerializer) ? serializer : THROW_CCE();
                }
                collector.s1r(tmp_1, tmp_2, tmp$ret$9);
              }
            }
          }
        }
      }
    }
    {
      var tmp2_forEach = this.k1r_1;
      var tmp$ret$10;
      {
        tmp$ret$10 = tmp2_forEach.j().d();
      }
      var tmp0_iterator_2 = tmp$ret$10;
      while (tmp0_iterator_2.e()) {
        var element_2 = tmp0_iterator_2.f();
        {
          var tmp$ret$11;
          {
            tmp$ret$11 = element_2.j1();
          }
          var baseClass_0 = tmp$ret$11;
          var tmp$ret$12;
          {
            tmp$ret$12 = element_2.l1();
          }
          var provider = tmp$ret$12;
          var tmp_3 = isInterface(baseClass_0, KClass) ? baseClass_0 : THROW_CCE();
          collector.t1r(tmp_3, typeof provider === 'function' ? provider : THROW_CCE());
        }
      }
    }
    {
      var tmp3_forEach = this.m1r_1;
      var tmp$ret$13;
      {
        tmp$ret$13 = tmp3_forEach.j().d();
      }
      var tmp0_iterator_3 = tmp$ret$13;
      while (tmp0_iterator_3.e()) {
        var element_3 = tmp0_iterator_3.f();
        {
          var tmp$ret$14;
          {
            tmp$ret$14 = element_3.j1();
          }
          var baseClass_1 = tmp$ret$14;
          var tmp$ret$15;
          {
            tmp$ret$15 = element_3.l1();
          }
          var provider_0 = tmp$ret$15;
          var tmp_4 = isInterface(baseClass_1, KClass) ? baseClass_1 : THROW_CCE();
          collector.u1r(tmp_4, typeof provider_0 === 'function' ? provider_0 : THROW_CCE());
        }
      }
    }
  };
  SerialModuleImpl.$metadata$ = classMeta('SerialModuleImpl', undefined, undefined, undefined, undefined, SerializersModule.prototype);
  function Argless() {
  }
  Argless.prototype.v1r = function () {
    return this.q1r_1;
  };
  Argless.$metadata$ = classMeta('Argless', undefined, undefined, undefined, undefined, ContextualProvider.prototype);
  function WithTypeArguments() {
  }
  WithTypeArguments.prototype.w1r = function () {
    return this.o1r_1;
  };
  WithTypeArguments.$metadata$ = classMeta('WithTypeArguments', undefined, undefined, undefined, undefined, ContextualProvider.prototype);
  function ContextualProvider() {
  }
  ContextualProvider.$metadata$ = classMeta('ContextualProvider');
  var properties_initialized_SerializersModule_kt_fjigjn;
  function init_properties_SerializersModule_kt_swldyf() {
    if (properties_initialized_SerializersModule_kt_fjigjn) {
    } else {
      properties_initialized_SerializersModule_kt_fjigjn = true;
      EmptySerializersModule = new SerialModuleImpl(emptyMap(), emptyMap(), emptyMap(), emptyMap(), emptyMap());
    }
  }
  function EmptySerializersModule_0() {
    return get_EmptySerializersModuleLegacyJs();
  }
  function SerializersModuleCollector$contextual$lambda($serializer) {
    return function (it) {
      return $serializer;
    };
  }
  function SerializersModuleCollector() {
  }
  SerializersModuleCollector.$metadata$ = interfaceMeta('SerializersModuleCollector');
  function SerializableWith(serializer) {
    this.x1r_1 = serializer;
  }
  SerializableWith.prototype.equals = function (other) {
    if (!(other instanceof SerializableWith))
      return false;
    var tmp0_other_with_cast = other instanceof SerializableWith ? other : THROW_CCE();
    if (!this.x1r_1.equals(tmp0_other_with_cast.x1r_1))
      return false;
    return true;
  };
  SerializableWith.prototype.hashCode = function () {
    return imul(getStringHashCode('serializer'), 127) ^ this.x1r_1.hashCode();
  };
  SerializableWith.prototype.toString = function () {
    return '@kotlinx.serialization.SerializableWith(serializer=' + this.x1r_1 + ')';
  };
  SerializableWith.$metadata$ = classMeta('SerializableWith', [Annotation], 0);
  function isInstanceOf(_this__u8e3s4, kclass) {
    return kclass.yc(_this__u8e3s4);
  }
  function toNativeArrayImpl(_this__u8e3s4, eClass) {
    var tmp$ret$0;
    {
      tmp$ret$0 = copyToArray(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  function getChecked(_this__u8e3s4, index) {
    if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' out of bounds ' + get_indices(_this__u8e3s4));
    return _this__u8e3s4[index];
  }
  function getChecked_0(_this__u8e3s4, index) {
    if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' out of bounds ' + get_indices_0(_this__u8e3s4));
    return _this__u8e3s4[index];
  }
  function platformSpecificSerializerNotRegistered(_this__u8e3s4) {
    throw SerializationException_init_$Create$("Serializer for class '" + _this__u8e3s4.xc() + "' is not found.\n" + 'Mark the class as @Serializable or provide the serializer explicitly.\n' + 'On Kotlin/JS explicitly declared serializer should be used for interfaces and enums without @Serializable annotation');
  }
  function compiledSerializerImpl(_this__u8e3s4) {
    var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(_this__u8e3s4, []);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = get_js(_this__u8e3s4);
        tmp$ret$0 = tmp0_asDynamic;
      }
      var tmp0_safe_receiver = tmp$ret$0.Companion;
      var tmp_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.serializer();
      tmp = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function isReferenceArray(rootClass) {
    return rootClass.equals(PrimitiveClasses_getInstance().pe());
  }
  function constructSerializerForGivenTypeArgs(_this__u8e3s4, args) {
    var tmp;
    try {
      var tmp$ret$0;
      {
        tmp$ret$0 = findAssociatedObject(_this__u8e3s4, getKClass(SerializableWith));
      }
      var assocObject = tmp$ret$0;
      var tmp_0;
      if (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) {
        tmp_0 = (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) ? assocObject : THROW_CCE();
      } else {
        if (!(assocObject == null) ? isInterface(assocObject, SerializerFactory) : false) {
          var tmp_1 = assocObject.i1l(args.slice());
          tmp_0 = isInterface(tmp_1, KSerializer) ? tmp_1 : THROW_CCE();
        } else {
          if (get_isInterface(_this__u8e3s4)) {
            tmp_0 = new PolymorphicSerializer(_this__u8e3s4);
          } else {
            tmp_0 = null;
          }
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      {
        tmp_2 = null;
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function get_isInterface(_this__u8e3s4) {
    var tmp$ret$0;
    {
      var tmp0_asDynamic = get_js(_this__u8e3s4);
      tmp$ret$0 = tmp0_asDynamic;
    }
    var tmp0_safe_receiver = tmp$ret$0.$metadata$;
    return (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.kind) == 'interface';
  }
  //region block: post-declaration
  SerialDescriptorImpl.prototype.f1c = get_isNullable;
  SerialDescriptorImpl.prototype.m1c = get_isInline;
  AbstractDecoder.prototype.o1e = decodeSerializableElement$default;
  AbstractDecoder.prototype.b1e = decodeSerializableValue;
  AbstractDecoder.prototype.q1e = decodeSequentially;
  AbstractDecoder.prototype.s1e = decodeCollectionSize;
  AbstractEncoder.prototype.t1f = encodeNotNullMark;
  AbstractEncoder.prototype.u1f = beginCollection;
  AbstractEncoder.prototype.q1f = encodeSerializableValue;
  AbstractEncoder.prototype.s1f = encodeNullableSerializableValue;
  AbstractEncoder.prototype.v1f = shouldEncodeElementDefault;
  ListLikeDescriptor.prototype.f1c = get_isNullable;
  ListLikeDescriptor.prototype.m1c = get_isInline;
  ListLikeDescriptor.prototype.k1c = get_annotations;
  PrimitiveArrayDescriptor.prototype.f1c = get_isNullable;
  PrimitiveArrayDescriptor.prototype.m1c = get_isInline;
  PrimitiveArrayDescriptor.prototype.k1c = get_annotations;
  ArrayClassDesc.prototype.f1c = get_isNullable;
  ArrayClassDesc.prototype.m1c = get_isInline;
  ArrayClassDesc.prototype.k1c = get_annotations;
  MapLikeDescriptor.prototype.f1c = get_isNullable;
  MapLikeDescriptor.prototype.m1c = get_isInline;
  MapLikeDescriptor.prototype.k1c = get_annotations;
  HashMapClassDesc.prototype.f1c = get_isNullable;
  HashMapClassDesc.prototype.m1c = get_isInline;
  HashMapClassDesc.prototype.k1c = get_annotations;
  LinkedHashMapClassDesc.prototype.f1c = get_isNullable;
  LinkedHashMapClassDesc.prototype.m1c = get_isInline;
  LinkedHashMapClassDesc.prototype.k1c = get_annotations;
  ArrayListClassDesc.prototype.f1c = get_isNullable;
  ArrayListClassDesc.prototype.m1c = get_isInline;
  ArrayListClassDesc.prototype.k1c = get_annotations;
  HashSetClassDesc.prototype.f1c = get_isNullable;
  HashSetClassDesc.prototype.m1c = get_isInline;
  HashSetClassDesc.prototype.k1c = get_annotations;
  LinkedHashSetClassDesc.prototype.f1c = get_isNullable;
  LinkedHashSetClassDesc.prototype.m1c = get_isInline;
  LinkedHashSetClassDesc.prototype.k1c = get_annotations;
  PluginGeneratedSerialDescriptor.prototype.f1c = get_isNullable;
  PluginGeneratedSerialDescriptor.prototype.m1c = get_isInline;
  InlineClassDescriptor.prototype.f1c = get_isNullable;
  InlinePrimitiveDescriptor$1.prototype.b1l = typeParametersSerializers;
  PrimitiveSerialDescriptor_0.prototype.f1c = get_isNullable;
  PrimitiveSerialDescriptor_0.prototype.m1c = get_isInline;
  PrimitiveSerialDescriptor_0.prototype.k1c = get_annotations;
  TaggedDecoder.prototype.o1e = decodeSerializableElement$default;
  TaggedDecoder.prototype.b1e = decodeSerializableValue;
  TaggedDecoder.prototype.q1e = decodeSequentially;
  TaggedDecoder.prototype.s1e = decodeCollectionSize;
  NamedValueDecoder.prototype.b1e = decodeSerializableValue;
  NamedValueDecoder.prototype.o1e = decodeSerializableElement$default;
  NamedValueDecoder.prototype.q1e = decodeSequentially;
  NamedValueDecoder.prototype.s1e = decodeCollectionSize;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = buildSerialDescriptor$default;
  _.$_$.b = decodeSerializableElement$default;
  _.$_$.c = SerializationException_init_$Init$;
  _.$_$.d = UnknownFieldException_init_$Create$;
  _.$_$.e = SEALED_getInstance;
  _.$_$.f = STRING_getInstance;
  _.$_$.g = CONTEXTUAL_getInstance;
  _.$_$.h = ENUM_getInstance;
  _.$_$.i = LIST_getInstance;
  _.$_$.j = MAP_getInstance;
  _.$_$.k = Companion_getInstance_2;
  _.$_$.l = BooleanSerializer_getInstance;
  _.$_$.m = IntSerializer_getInstance;
  _.$_$.n = LongSerializer_getInstance;
  _.$_$.o = StringSerializer_getInstance;
  _.$_$.p = ListSerializer;
  _.$_$.q = MapSerializer;
  _.$_$.r = get_nullable;
  _.$_$.s = serializer_1;
  _.$_$.t = serializer_15;
  _.$_$.u = serializer_12;
  _.$_$.v = serializer_14;
  _.$_$.w = serializer_13;
  _.$_$.x = PolymorphicKind;
  _.$_$.y = PrimitiveKind;
  _.$_$.z = PrimitiveSerialDescriptor;
  _.$_$.a1 = get_annotations;
  _.$_$.b1 = get_isInline;
  _.$_$.c1 = get_isNullable;
  _.$_$.d1 = SerialDescriptor;
  _.$_$.e1 = ENUM;
  _.$_$.f1 = getContextualDescriptor;
  _.$_$.g1 = AbstractDecoder;
  _.$_$.h1 = AbstractEncoder;
  _.$_$.i1 = decodeCollectionSize;
  _.$_$.j1 = decodeSequentially;
  _.$_$.k1 = CompositeDecoder;
  _.$_$.l1 = CompositeEncoder;
  _.$_$.m1 = decodeSerializableValue;
  _.$_$.n1 = Decoder;
  _.$_$.o1 = beginCollection;
  _.$_$.p1 = encodeNotNullMark;
  _.$_$.q1 = encodeNullableSerializableValue;
  _.$_$.r1 = Encoder;
  _.$_$.s1 = AbstractPolymorphicSerializer;
  _.$_$.t1 = ArrayListSerializer;
  _.$_$.u1 = ElementMarker;
  _.$_$.v1 = typeParametersSerializers;
  _.$_$.w1 = GeneratedSerializer;
  _.$_$.x1 = LinkedHashMapSerializer;
  _.$_$.y1 = LinkedHashSetSerializer;
  _.$_$.z1 = NamedValueDecoder;
  _.$_$.a2 = PluginGeneratedSerialDescriptor;
  _.$_$.b2 = SerializerFactory;
  _.$_$.c2 = jsonCachedSerialNames;
  _.$_$.d2 = throwMissingFieldException;
  _.$_$.e2 = EmptySerializersModule_0;
  _.$_$.f2 = contextual;
  _.$_$.g2 = SerializersModuleCollector;
  _.$_$.h2 = DeserializationStrategy;
  _.$_$.i2 = KSerializer;
  _.$_$.j2 = MissingFieldException;
  _.$_$.k2 = SealedClassSerializer;
  _.$_$.l2 = SerializationException;
  _.$_$.m2 = StringFormat;
  _.$_$.n2 = findPolymorphicSerializer;
  _.$_$.o2 = serializer_0;
  _.$_$.p2 = serializer;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(737)));

//# sourceMappingURL=kotlinx-serialization-kotlinx-serialization-core-js-ir.js.map

/***/ }),

/***/ 596:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var EmptySerializersModule = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e2;
  var objectMeta = kotlin_kotlin.$_$.r7;
  var StringFormat = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m2;
  var classMeta = kotlin_kotlin.$_$.u6;
  var Unit_getInstance = kotlin_kotlin.$_$.m3;
  var toString = kotlin_kotlin.$_$.v7;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var charSequenceGet = kotlin_kotlin.$_$.r6;
  var Char = kotlin_kotlin.$_$.y8;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.b2;
  var equals = kotlin_kotlin.$_$.w6;
  var Annotation = kotlin_kotlin.$_$.x8;
  var Decoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n1;
  var CompositeDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k1;
  var interfaceMeta = kotlin_kotlin.$_$.b7;
  var hashCode = kotlin_kotlin.$_$.a7;
  var joinToString$default = kotlin_kotlin.$_$.i;
  var List = kotlin_kotlin.$_$.v3;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.i1;
  var THROW_CCE = kotlin_kotlin.$_$.k9;
  var Map = kotlin_kotlin.$_$.x3;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var getStringHashCode = kotlin_kotlin.$_$.z6;
  var LazyThreadSafetyMode_PUBLICATION_getInstance = kotlin_kotlin.$_$.f;
  var lazy = kotlin_kotlin.$_$.aa;
  var SerializerFactory = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b2;
  var toInt = kotlin_kotlin.$_$.n8;
  var toLong = kotlin_kotlin.$_$.p8;
  var toDouble = kotlin_kotlin.$_$.l8;
  var toLongOrNull = kotlin_kotlin.$_$.o8;
  var toDoubleOrNull = kotlin_kotlin.$_$.k8;
  var SEALED_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e;
  var buildSerialDescriptor$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i2;
  var ListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p;
  var SerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d1;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.c3;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s;
  var MapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q;
  var STRING_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f;
  var ENUM_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h;
  var PrimitiveSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z;
  var toULongOrNull = kotlin_kotlin.$_$.s8;
  var Companion_getInstance = kotlin_kotlin.$_$.k3;
  var serializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.p2;
  var ULong = kotlin_kotlin.$_$.o9;
  var isInterface = kotlin_kotlin.$_$.j7;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.p1;
  var lazy_0 = kotlin_kotlin.$_$.ba;
  var get_isNullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c1;
  var get_isInline = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b1;
  var get_annotations = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a1;
  var KProperty1 = kotlin_kotlin.$_$.b8;
  var getPropertyCallableRef = kotlin_kotlin.$_$.y6;
  var Encoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r1;
  var CompositeEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l1;
  var toLong_0 = kotlin_kotlin.$_$.t7;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.l2;
  var UInt__toString_impl_dbgl21 = kotlin_kotlin.$_$.n2;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.o2;
  var ULong__toString_impl_f9au7k = kotlin_kotlin.$_$.q2;
  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.i2;
  var UByte__toString_impl_v72jg = kotlin_kotlin.$_$.k2;
  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.r2;
  var UShort__toString_impl_edaoee = kotlin_kotlin.$_$.t2;
  var ElementMarker = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u1;
  var captureStack = kotlin_kotlin.$_$.p6;
  var SerializationException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l2;
  var SerializationException_init_$Init$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c;
  var charSequenceLength = kotlin_kotlin.$_$.s6;
  var charSequenceSubSequence = kotlin_kotlin.$_$.t6;
  var coerceAtLeast = kotlin_kotlin.$_$.w7;
  var coerceAtMost = kotlin_kotlin.$_$.x7;
  var Companion_getInstance_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.p;
  var singleOrNull = kotlin_kotlin.$_$.i5;
  var arrayIterator = kotlin_kotlin.$_$.n6;
  var ensureNotNull = kotlin_kotlin.$_$.w9;
  var emptyMap = kotlin_kotlin.$_$.s4;
  var getValue = kotlin_kotlin.$_$.v4;
  var copyOf = kotlin_kotlin.$_$.o4;
  var copyOf_0 = kotlin_kotlin.$_$.p4;
  var fillArrayVal = kotlin_kotlin.$_$.x6;
  var LIST_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.y;
  var DeepRecursiveFunction = kotlin_kotlin.$_$.a9;
  var invoke = kotlin_kotlin.$_$.x9;
  var CoroutineImpl = kotlin_kotlin.$_$.h6;
  var DeepRecursiveScope = kotlin_kotlin.$_$.b9;
  var Unit = kotlin_kotlin.$_$.q9;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.s5;
  var SuspendFunction2 = kotlin_kotlin.$_$.j6;
  var AbstractPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s1;
  var getKClass = kotlin_kotlin.$_$.e;
  var DeserializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h2;
  var isObject = kotlin_kotlin.$_$.l7;
  var findPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n2;
  var SealedClassSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k2;
  var jsonCachedSerialNames = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c2;
  var ENUM = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e1;
  var PrimitiveKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y;
  var PolymorphicKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x;
  var CONTEXTUAL_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g;
  var MAP_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j;
  var contextual = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f2;
  var SerializersModuleCollector = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g2;
  var AbstractDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g1;
  var plus = kotlin_kotlin.$_$.da;
  var MissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j2;
  var decodeSerializableElement$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b;
  var IllegalArgumentException = kotlin_kotlin.$_$.e9;
  var isFinite = kotlin_kotlin.$_$.z9;
  var isFinite_0 = kotlin_kotlin.$_$.y9;
  var decodeSequentially = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j1;
  var decodeCollectionSize = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i1;
  var toUInt = kotlin_kotlin.$_$.r8;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.m2;
  var toULong = kotlin_kotlin.$_$.t8;
  var toUByte = kotlin_kotlin.$_$.q8;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.j2;
  var toUShort = kotlin_kotlin.$_$.u8;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.s2;
  var decodeSerializableValue = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m1;
  var AbstractEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h1;
  var toString_0 = kotlin_kotlin.$_$.e2;
  var encodeNotNullMark = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p1;
  var beginCollection = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o1;
  var encodeNullableSerializableValue = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q1;
  var Companion_getInstance_1 = kotlin_kotlin.$_$.j3;
  var serializer_1 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u;
  var Companion_getInstance_2 = kotlin_kotlin.$_$.i3;
  var serializer_2 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v;
  var Companion_getInstance_3 = kotlin_kotlin.$_$.l3;
  var serializer_3 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t;
  var setOf = kotlin_kotlin.$_$.h5;
  var numberToChar = kotlin_kotlin.$_$.p7;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.d2;
  var equals_0 = kotlin_kotlin.$_$.f8;
  var toByte = kotlin_kotlin.$_$.s7;
  var NamedValueDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z1;
  var IllegalArgumentException_init_$Create$_0 = kotlin_kotlin.$_$.k1;
  var ByteCompanionObject_getInstance = kotlin_kotlin.$_$.x2;
  var ShortCompanionObject_getInstance = kotlin_kotlin.$_$.b3;
  var toShort = kotlin_kotlin.$_$.u7;
  var single = kotlin_kotlin.$_$.i8;
  var emptySet = kotlin_kotlin.$_$.t4;
  var plus_0 = kotlin_kotlin.$_$.f5;
  var toList = kotlin_kotlin.$_$.m5;
  var Enum = kotlin_kotlin.$_$.c9;
  var getContextualDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f1;
  var last = kotlin_kotlin.$_$.b5;
  var removeLast = kotlin_kotlin.$_$.g5;
  var lastIndexOf$default = kotlin_kotlin.$_$.m;
  var Long = kotlin_kotlin.$_$.g9;
  var Char__minus_impl_a2frrh = kotlin_kotlin.$_$.c2;
  var Companion_getInstance_4 = kotlin_kotlin.$_$.g3;
  var charArray = kotlin_kotlin.$_$.q6;
  var indexOf$default = kotlin_kotlin.$_$.l;
  var StringBuilder_init_$Create$_0 = kotlin_kotlin.$_$.h1;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.r;
  //endregion
  //region block: pre-declaration
  Default.prototype = Object.create(Json.prototype);
  Default.prototype.constructor = Default;
  JsonImpl.prototype = Object.create(Json.prototype);
  JsonImpl.prototype.constructor = JsonImpl;
  JsonArray.prototype = Object.create(JsonElement.prototype);
  JsonArray.prototype.constructor = JsonArray;
  JsonObject.prototype = Object.create(JsonElement.prototype);
  JsonObject.prototype.constructor = JsonObject;
  JsonPrimitive.prototype = Object.create(JsonElement.prototype);
  JsonPrimitive.prototype.constructor = JsonPrimitive;
  JsonLiteral.prototype = Object.create(JsonPrimitive.prototype);
  JsonLiteral.prototype.constructor = JsonLiteral;
  JsonNull.prototype = Object.create(JsonPrimitive.prototype);
  JsonNull.prototype.constructor = JsonNull;
  ComposerForUnsignedNumbers.prototype = Object.create(Composer.prototype);
  ComposerForUnsignedNumbers.prototype.constructor = ComposerForUnsignedNumbers;
  ComposerWithPrettyPrint.prototype = Object.create(Composer.prototype);
  ComposerWithPrettyPrint.prototype.constructor = ComposerWithPrettyPrint;
  JsonException.prototype = Object.create(SerializationException.prototype);
  JsonException.prototype.constructor = JsonException;
  JsonEncodingException.prototype = Object.create(JsonException.prototype);
  JsonEncodingException.prototype.constructor = JsonEncodingException;
  JsonDecodingException.prototype = Object.create(JsonException.prototype);
  JsonDecodingException.prototype.constructor = JsonDecodingException;
  JsonTreeReader$readDeepRecursive$slambda.prototype = Object.create(CoroutineImpl.prototype);
  JsonTreeReader$readDeepRecursive$slambda.prototype.constructor = JsonTreeReader$readDeepRecursive$slambda;
  $readObjectCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $readObjectCOROUTINE$0.prototype.constructor = $readObjectCOROUTINE$0;
  StreamingJsonDecoder.prototype = Object.create(AbstractDecoder.prototype);
  StreamingJsonDecoder.prototype.constructor = StreamingJsonDecoder;
  JsonDecoderForUnsignedTypes.prototype = Object.create(AbstractDecoder.prototype);
  JsonDecoderForUnsignedTypes.prototype.constructor = JsonDecoderForUnsignedTypes;
  StreamingJsonEncoder.prototype = Object.create(AbstractEncoder.prototype);
  StreamingJsonEncoder.prototype.constructor = StreamingJsonEncoder;
  AbstractJsonTreeDecoder.prototype = Object.create(NamedValueDecoder.prototype);
  AbstractJsonTreeDecoder.prototype.constructor = AbstractJsonTreeDecoder;
  JsonTreeDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonTreeDecoder.prototype.constructor = JsonTreeDecoder;
  JsonTreeListDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonTreeListDecoder.prototype.constructor = JsonTreeListDecoder;
  JsonTreeMapDecoder.prototype = Object.create(JsonTreeDecoder.prototype);
  JsonTreeMapDecoder.prototype.constructor = JsonTreeMapDecoder;
  WriteMode.prototype = Object.create(Enum.prototype);
  WriteMode.prototype.constructor = WriteMode;
  StringJsonLexer.prototype = Object.create(AbstractJsonLexer.prototype);
  StringJsonLexer.prototype.constructor = StringJsonLexer;
  //endregion
  function Default() {
    Default_instance = this;
    Json.call(this, JsonConfiguration_init_$Create$(false, false, false, false, false, false, null, false, false, null, false, false, 4095, null), EmptySerializersModule());
  }
  Default.$metadata$ = objectMeta('Default', undefined, undefined, undefined, undefined, Json.prototype);
  var Default_instance;
  function Default_getInstance() {
    if (Default_instance == null)
      new Default();
    return Default_instance;
  }
  function Json(configuration, serializersModule) {
    Default_getInstance();
    this.y1r_1 = configuration;
    this.z1r_1 = serializersModule;
    this.a1s_1 = new DescriptorSchemaCache();
  }
  Json.prototype.b1s = function () {
    return this.y1r_1;
  };
  Json.prototype.b1c = function () {
    return this.z1r_1;
  };
  Json.prototype.c1s = function (serializer, value) {
    var result = new JsonToStringWriter();
    try {
      encodeByWriter(this, result, serializer, value);
      return result.toString();
    }finally {
      result.un();
    }
  };
  Json.prototype.a1c = function (deserializer, string) {
    var lexer = new StringJsonLexer(string);
    var input = new StreamingJsonDecoder(this, WriteMode_OBJ_getInstance(), lexer, deserializer.i1b(), null);
    var result = input.b1e(deserializer);
    lexer.q1s();
    return result;
  };
  Json.$metadata$ = classMeta('Json', [StringFormat]);
  function Json_0(from, builderAction) {
    var builder = new JsonBuilder(from);
    builderAction(builder);
    var conf = builder.x2();
    return new JsonImpl(conf, builder.d1t_1);
  }
  function Json$default(from, builderAction, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      from = Default_getInstance();
    return Json_0(from, builderAction);
  }
  function JsonBuilder(json) {
    this.r1s_1 = json.y1r_1.e1t_1;
    this.s1s_1 = json.y1r_1.j1t_1;
    this.t1s_1 = json.y1r_1.f1t_1;
    this.u1s_1 = json.y1r_1.g1t_1;
    this.v1s_1 = json.y1r_1.h1t_1;
    this.w1s_1 = json.y1r_1.i1t_1;
    this.x1s_1 = json.y1r_1.k1t_1;
    this.y1s_1 = json.y1r_1.l1t_1;
    this.z1s_1 = json.y1r_1.m1t_1;
    this.a1t_1 = json.y1r_1.n1t_1;
    this.b1t_1 = json.y1r_1.o1t_1;
    this.c1t_1 = json.y1r_1.p1t_1;
    this.d1t_1 = json.b1c();
  }
  JsonBuilder.prototype.q1t = function () {
    return this.x1s_1;
  };
  JsonBuilder.prototype.x2 = function () {
    if (this.z1s_1) {
      var tmp0_require = this.a1t_1 === 'type';
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Class discriminator should not be specified when array polymorphism is specified';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    if (!this.w1s_1) {
      {
        var tmp1_require = this.x1s_1 === '    ';
        {
        }
        if (!tmp1_require) {
          var tmp$ret$1;
          {
            tmp$ret$1 = 'Indent should not be specified when default printing mode is used';
          }
          var message_0 = tmp$ret$1;
          throw IllegalArgumentException_init_$Create$(toString(message_0));
        }
      }
    } else if (!(this.x1s_1 === '    ')) {
      var tmp$ret$3;
      $l$block: {
        var tmp2_all = this.x1s_1;
        var indexedObject = tmp2_all;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = charSequenceGet(indexedObject, inductionVariable);
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$2;
          {
            tmp$ret$2 = ((equals(new Char(element), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(element), new Char(_Char___init__impl__6a9atx(9)))) ? true : equals(new Char(element), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(element), new Char(_Char___init__impl__6a9atx(10)));
          }
          if (!tmp$ret$2) {
            tmp$ret$3 = false;
            break $l$block;
          }
        }
        tmp$ret$3 = true;
      }
      var allWhitespaces = tmp$ret$3;
      {
        {
        }
        if (!allWhitespaces) {
          var tmp$ret$4;
          {
            tmp$ret$4 = 'Only whitespace, tab, newline and carriage return are allowed as pretty print symbols. Had ' + this.x1s_1;
          }
          var message_1 = tmp$ret$4;
          throw IllegalArgumentException_init_$Create$(toString(message_1));
        }
      }
    }
    return new JsonConfiguration(this.r1s_1, this.t1s_1, this.u1s_1, this.v1s_1, this.w1s_1, this.s1s_1, this.x1s_1, this.y1s_1, this.z1s_1, this.a1t_1, this.b1t_1, this.c1t_1);
  };
  JsonBuilder.$metadata$ = classMeta('JsonBuilder');
  function validateConfiguration($this) {
    if (equals($this.b1c(), EmptySerializersModule()))
      return Unit_getInstance();
    var collector = new PolymorphismValidator($this.b1s().m1t_1, $this.b1s().n1t_1);
    $this.b1c().h1r(collector);
  }
  function JsonImpl(configuration, module_0) {
    Json.call(this, configuration, module_0);
    validateConfiguration(this);
  }
  JsonImpl.$metadata$ = classMeta('JsonImpl', undefined, undefined, undefined, undefined, Json.prototype);
  function JsonClassDiscriminator() {
  }
  JsonClassDiscriminator.$metadata$ = classMeta('JsonClassDiscriminator', [Annotation]);
  function JsonNames() {
  }
  JsonNames.$metadata$ = classMeta('JsonNames', [Annotation]);
  function JsonConfiguration_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      encodeDefaults = false;
    if (!(($mask0 & 2) === 0))
      ignoreUnknownKeys = false;
    if (!(($mask0 & 4) === 0))
      isLenient = false;
    if (!(($mask0 & 8) === 0))
      allowStructuredMapKeys = false;
    if (!(($mask0 & 16) === 0))
      prettyPrint = false;
    if (!(($mask0 & 32) === 0))
      explicitNulls = true;
    if (!(($mask0 & 64) === 0))
      prettyPrintIndent = '    ';
    if (!(($mask0 & 128) === 0))
      coerceInputValues = false;
    if (!(($mask0 & 256) === 0))
      useArrayPolymorphism = false;
    if (!(($mask0 & 512) === 0))
      classDiscriminator = 'type';
    if (!(($mask0 & 1024) === 0))
      allowSpecialFloatingPointValues = false;
    if (!(($mask0 & 2048) === 0))
      useAlternativeNames = true;
    JsonConfiguration.call($this, encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames);
    return $this;
  }
  function JsonConfiguration_init_$Create$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, $mask0, $marker) {
    return JsonConfiguration_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, $mask0, $marker, Object.create(JsonConfiguration.prototype));
  }
  function JsonConfiguration(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames) {
    this.e1t_1 = encodeDefaults;
    this.f1t_1 = ignoreUnknownKeys;
    this.g1t_1 = isLenient;
    this.h1t_1 = allowStructuredMapKeys;
    this.i1t_1 = prettyPrint;
    this.j1t_1 = explicitNulls;
    this.k1t_1 = prettyPrintIndent;
    this.l1t_1 = coerceInputValues;
    this.m1t_1 = useArrayPolymorphism;
    this.n1t_1 = classDiscriminator;
    this.o1t_1 = allowSpecialFloatingPointValues;
    this.p1t_1 = useAlternativeNames;
  }
  JsonConfiguration.prototype.r1t = function () {
    return this.g1t_1;
  };
  JsonConfiguration.prototype.q1t = function () {
    return this.k1t_1;
  };
  JsonConfiguration.prototype.toString = function () {
    return 'JsonConfiguration(encodeDefaults=' + this.e1t_1 + ', ignoreUnknownKeys=' + this.f1t_1 + ', isLenient=' + this.g1t_1 + ', ' + ('allowStructuredMapKeys=' + this.h1t_1 + ', prettyPrint=' + this.i1t_1 + ', explicitNulls=' + this.j1t_1 + ', ') + ("prettyPrintIndent='" + this.k1t_1 + "', coerceInputValues=" + this.l1t_1 + ', useArrayPolymorphism=' + this.m1t_1 + ', ') + ("classDiscriminator='" + this.n1t_1 + "', allowSpecialFloatingPointValues=" + this.o1t_1 + ')');
  };
  JsonConfiguration.$metadata$ = classMeta('JsonConfiguration');
  function JsonDecoder() {
  }
  JsonDecoder.$metadata$ = interfaceMeta('JsonDecoder', [Decoder, CompositeDecoder]);
  function Companion() {
    Companion_instance = this;
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_5() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function JsonElement() {
    Companion_getInstance_5();
  }
  JsonElement.$metadata$ = classMeta('JsonElement', undefined, undefined, {0: JsonElementSerializer_getInstance});
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_6() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function JsonArray(content) {
    Companion_getInstance_6();
    JsonElement.call(this);
    this.u1t_1 = content;
  }
  JsonArray.prototype.g = function () {
    return this.u1t_1.g();
  };
  JsonArray.prototype.v1t = function (elements) {
    return this.u1t_1.b1(elements);
  };
  JsonArray.prototype.b1 = function (elements) {
    return this.v1t(elements);
  };
  JsonArray.prototype.h = function (index) {
    return this.u1t_1.h(index);
  };
  JsonArray.prototype.i = function () {
    return this.u1t_1.i();
  };
  JsonArray.prototype.d = function () {
    return this.u1t_1.d();
  };
  JsonArray.prototype.equals = function (other) {
    return equals(this.u1t_1, other);
  };
  JsonArray.prototype.hashCode = function () {
    return hashCode(this.u1t_1);
  };
  JsonArray.prototype.toString = function () {
    return joinToString$default(this.u1t_1, ',', '[', ']', 0, null, null, 56, null);
  };
  JsonArray.$metadata$ = classMeta('JsonArray', [List], undefined, {0: JsonArraySerializer_getInstance}, undefined, JsonElement.prototype);
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_7() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function JsonObject$toString$lambda() {
    return function (_name_for_destructuring_parameter_0__wldtmu) {
      var tmp$ret$0;
      {
        tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.j1();
      }
      var k = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = _name_for_destructuring_parameter_0__wldtmu.l1();
      }
      var v = tmp$ret$1;
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp0_apply = StringBuilder_init_$Create$();
          {
          }
          {
            printQuoted(tmp0_apply, k);
            tmp0_apply.v4(_Char___init__impl__6a9atx(58));
            tmp0_apply.a6(v);
          }
          tmp$ret$2 = tmp0_apply;
        }
        tmp$ret$3 = tmp$ret$2.toString();
      }
      return tmp$ret$3;
    };
  }
  function JsonObject(content) {
    Companion_getInstance_7();
    JsonElement.call(this);
    this.w1t_1 = content;
  }
  JsonObject.prototype.j = function () {
    return this.w1t_1.j();
  };
  JsonObject.prototype.w1 = function () {
    return this.w1t_1.w1();
  };
  JsonObject.prototype.g = function () {
    return this.w1t_1.g();
  };
  JsonObject.prototype.x1t = function (key) {
    return this.w1t_1.s1(key);
  };
  JsonObject.prototype.s1 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.x1t((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  JsonObject.prototype.y1t = function (key) {
    return this.w1t_1.v1(key);
  };
  JsonObject.prototype.v1 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.y1t((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  JsonObject.prototype.i = function () {
    return this.w1t_1.i();
  };
  JsonObject.prototype.equals = function (other) {
    return equals(this.w1t_1, other);
  };
  JsonObject.prototype.hashCode = function () {
    return hashCode(this.w1t_1);
  };
  JsonObject.prototype.toString = function () {
    var tmp = this.w1t_1.j();
    return joinToString$default(tmp, ',', '{', '}', 0, null, JsonObject$toString$lambda(), 24, null);
  };
  JsonObject.$metadata$ = classMeta('JsonObject', [Map], undefined, {0: JsonObjectSerializer_getInstance}, undefined, JsonElement.prototype);
  function Companion_2() {
    Companion_instance_2 = this;
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_8() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function JsonPrimitive() {
    Companion_getInstance_8();
    JsonElement.call(this);
  }
  JsonPrimitive.prototype.toString = function () {
    return this.z1t();
  };
  JsonPrimitive.$metadata$ = classMeta('JsonPrimitive', undefined, undefined, {0: JsonPrimitiveSerializer_getInstance}, undefined, JsonElement.prototype);
  function JsonLiteral(body, isString) {
    JsonPrimitive.call(this);
    this.a1u_1 = isString;
    this.b1u_1 = toString(body);
  }
  JsonLiteral.prototype.z1t = function () {
    return this.b1u_1;
  };
  JsonLiteral.prototype.toString = function () {
    var tmp;
    if (this.a1u_1) {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var tmp0_apply = StringBuilder_init_$Create$();
          {
          }
          {
            printQuoted(tmp0_apply, this.b1u_1);
          }
          tmp$ret$0 = tmp0_apply;
        }
        tmp$ret$1 = tmp$ret$0.toString();
      }
      tmp = tmp$ret$1;
    } else {
      tmp = this.b1u_1;
    }
    return tmp;
  };
  JsonLiteral.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof JsonLiteral)
      other;
    else
      THROW_CCE();
    if (!(this.a1u_1 === other.a1u_1))
      return false;
    if (!(this.b1u_1 === other.b1u_1))
      return false;
    return true;
  };
  JsonLiteral.prototype.hashCode = function () {
    var result = this.a1u_1 | 0;
    result = imul(31, result) + getStringHashCode(this.b1u_1) | 0;
    return result;
  };
  JsonLiteral.$metadata$ = classMeta('JsonLiteral', undefined, undefined, undefined, undefined, JsonPrimitive.prototype);
  function JsonNull$$cachedSerializer$delegate$_anonymous__7w2ks1() {
    return function () {
      return JsonNullSerializer_getInstance();
    };
  }
  function JsonNull() {
    JsonNull_instance = this;
    JsonPrimitive.call(this);
    this.c1u_1 = 'null';
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.d1u_1 = lazy(tmp_0, JsonNull$$cachedSerializer$delegate$_anonymous__7w2ks1());
  }
  JsonNull.prototype.z1t = function () {
    return this.c1u_1;
  };
  JsonNull.prototype.e1u = function () {
    return this.d1u_1.l1();
  };
  JsonNull.prototype.i1l = function (typeParamsSerializers) {
    return this.e1u();
  };
  JsonNull.$metadata$ = objectMeta('JsonNull', [SerializerFactory], undefined, {0: JsonNullSerializer_getInstance}, undefined, JsonPrimitive.prototype);
  var JsonNull_instance;
  function JsonNull_getInstance() {
    if (JsonNull_instance == null)
      new JsonNull();
    return JsonNull_instance;
  }
  function JsonPrimitive_0(value) {
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, true);
  }
  function get_booleanOrNull(_this__u8e3s4) {
    return toBooleanStrictOrNull(_this__u8e3s4.z1t());
  }
  function get_int(_this__u8e3s4) {
    return toInt(_this__u8e3s4.z1t());
  }
  function get_long(_this__u8e3s4) {
    return toLong(_this__u8e3s4.z1t());
  }
  function get_float(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp0_toFloat = _this__u8e3s4.z1t();
      var tmp$ret$1;
      {
        var tmp0_unsafeCast = toDouble(tmp0_toFloat);
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_unsafeCast;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  }
  function get_double(_this__u8e3s4) {
    return toDouble(_this__u8e3s4.z1t());
  }
  function get_contentOrNull(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4 instanceof JsonNull) {
      tmp = null;
    } else {
      tmp = _this__u8e3s4.z1t();
    }
    return tmp;
  }
  function get_longOrNull(_this__u8e3s4) {
    return toLongOrNull(_this__u8e3s4.z1t());
  }
  function get_doubleOrNull(_this__u8e3s4) {
    return toDoubleOrNull(_this__u8e3s4.z1t());
  }
  function get_jsonPrimitive(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonPrimitive ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      error(_this__u8e3s4, 'JsonPrimitive');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function error(_this__u8e3s4, element) {
    throw IllegalArgumentException_init_$Create$('Element ' + getKClassFromExpression(_this__u8e3s4) + ' is not a ' + element);
  }
  function JsonElementSerializer$descriptor$lambda$lambda() {
    return function () {
      return JsonPrimitiveSerializer_getInstance().f1u_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_0() {
    return function () {
      return JsonNullSerializer_getInstance().g1u_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_1() {
    return function () {
      return JsonLiteralSerializer_getInstance().h1u_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_2() {
    return function () {
      return JsonObjectSerializer_getInstance().i1u_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_3() {
    return function () {
      return JsonArraySerializer_getInstance().j1u_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda() {
    return function ($this$buildSerialDescriptor) {
      var tmp = defer(JsonElementSerializer$descriptor$lambda$lambda());
      $this$buildSerialDescriptor.t1b('JsonPrimitive', tmp, null, false, 12, null);
      var tmp_0 = defer(JsonElementSerializer$descriptor$lambda$lambda_0());
      $this$buildSerialDescriptor.t1b('JsonNull', tmp_0, null, false, 12, null);
      var tmp_1 = defer(JsonElementSerializer$descriptor$lambda$lambda_1());
      $this$buildSerialDescriptor.t1b('JsonLiteral', tmp_1, null, false, 12, null);
      var tmp_2 = defer(JsonElementSerializer$descriptor$lambda$lambda_2());
      $this$buildSerialDescriptor.t1b('JsonObject', tmp_2, null, false, 12, null);
      var tmp_3 = defer(JsonElementSerializer$descriptor$lambda$lambda_3());
      $this$buildSerialDescriptor.t1b('JsonArray', tmp_3, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function JsonElementSerializer() {
    JsonElementSerializer_instance = this;
    var tmp = this;
    var tmp_0 = SEALED_getInstance();
    tmp.k1u_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonElement', tmp_0, [], JsonElementSerializer$descriptor$lambda(), 4, null);
  }
  JsonElementSerializer.prototype.i1b = function () {
    return this.k1u_1;
  };
  JsonElementSerializer.prototype.l1u = function (encoder, value) {
    verify(encoder);
    var tmp0_subject = value;
    if (tmp0_subject instanceof JsonPrimitive)
      encoder.q1f(JsonPrimitiveSerializer_getInstance(), value);
    else {
      if (tmp0_subject instanceof JsonObject)
        encoder.q1f(JsonObjectSerializer_getInstance(), value);
      else {
        if (tmp0_subject instanceof JsonArray)
          encoder.q1f(JsonArraySerializer_getInstance(), value);
      }
    }
  };
  JsonElementSerializer.prototype.j1b = function (encoder, value) {
    return this.l1u(encoder, value instanceof JsonElement ? value : THROW_CCE());
  };
  JsonElementSerializer.prototype.k1b = function (decoder) {
    var input = asJsonDecoder(decoder);
    return input.t1t();
  };
  JsonElementSerializer.$metadata$ = objectMeta('JsonElementSerializer', [KSerializer]);
  var JsonElementSerializer_instance;
  function JsonElementSerializer_getInstance() {
    if (JsonElementSerializer_instance == null)
      new JsonElementSerializer();
    return JsonElementSerializer_instance;
  }
  function JsonArrayDescriptor() {
    JsonArrayDescriptor_instance = this;
    this.m1u_1 = ListSerializer(JsonElementSerializer_getInstance()).i1b();
    this.n1u_1 = 'kotlinx.serialization.json.JsonArray';
  }
  JsonArrayDescriptor.prototype.k1c = function () {
    return this.m1u_1.k1c();
  };
  JsonArrayDescriptor.prototype.l1c = function () {
    return this.m1u_1.l1c();
  };
  JsonArrayDescriptor.prototype.m1c = function () {
    return this.m1u_1.m1c();
  };
  JsonArrayDescriptor.prototype.f1c = function () {
    return this.m1u_1.f1c();
  };
  JsonArrayDescriptor.prototype.n1c = function () {
    return this.m1u_1.n1c();
  };
  JsonArrayDescriptor.prototype.o1c = function (index) {
    return this.m1u_1.o1c(index);
  };
  JsonArrayDescriptor.prototype.p1c = function (index) {
    return this.m1u_1.p1c(index);
  };
  JsonArrayDescriptor.prototype.q1c = function (name) {
    return this.m1u_1.q1c(name);
  };
  JsonArrayDescriptor.prototype.r1c = function (index) {
    return this.m1u_1.r1c(index);
  };
  JsonArrayDescriptor.prototype.s1c = function (index) {
    return this.m1u_1.s1c(index);
  };
  JsonArrayDescriptor.prototype.j1c = function () {
    return this.n1u_1;
  };
  JsonArrayDescriptor.$metadata$ = objectMeta('JsonArrayDescriptor', [SerialDescriptor]);
  var JsonArrayDescriptor_instance;
  function JsonArrayDescriptor_getInstance() {
    if (JsonArrayDescriptor_instance == null)
      new JsonArrayDescriptor();
    return JsonArrayDescriptor_instance;
  }
  function JsonArraySerializer() {
    JsonArraySerializer_instance = this;
    this.j1u_1 = JsonArrayDescriptor_getInstance();
  }
  JsonArraySerializer.prototype.i1b = function () {
    return this.j1u_1;
  };
  JsonArraySerializer.prototype.o1u = function (encoder, value) {
    verify(encoder);
    ListSerializer(JsonElementSerializer_getInstance()).j1b(encoder, value);
  };
  JsonArraySerializer.prototype.j1b = function (encoder, value) {
    return this.o1u(encoder, value instanceof JsonArray ? value : THROW_CCE());
  };
  JsonArraySerializer.prototype.k1b = function (decoder) {
    verify_0(decoder);
    return new JsonArray(ListSerializer(JsonElementSerializer_getInstance()).k1b(decoder));
  };
  JsonArraySerializer.$metadata$ = objectMeta('JsonArraySerializer', [KSerializer]);
  var JsonArraySerializer_instance;
  function JsonArraySerializer_getInstance() {
    if (JsonArraySerializer_instance == null)
      new JsonArraySerializer();
    return JsonArraySerializer_instance;
  }
  function JsonObjectDescriptor() {
    JsonObjectDescriptor_instance = this;
    this.p1u_1 = MapSerializer(serializer(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).i1b();
    this.q1u_1 = 'kotlinx.serialization.json.JsonObject';
  }
  JsonObjectDescriptor.prototype.k1c = function () {
    return this.p1u_1.k1c();
  };
  JsonObjectDescriptor.prototype.l1c = function () {
    return this.p1u_1.l1c();
  };
  JsonObjectDescriptor.prototype.m1c = function () {
    return this.p1u_1.m1c();
  };
  JsonObjectDescriptor.prototype.f1c = function () {
    return this.p1u_1.f1c();
  };
  JsonObjectDescriptor.prototype.n1c = function () {
    return this.p1u_1.n1c();
  };
  JsonObjectDescriptor.prototype.o1c = function (index) {
    return this.p1u_1.o1c(index);
  };
  JsonObjectDescriptor.prototype.p1c = function (index) {
    return this.p1u_1.p1c(index);
  };
  JsonObjectDescriptor.prototype.q1c = function (name) {
    return this.p1u_1.q1c(name);
  };
  JsonObjectDescriptor.prototype.r1c = function (index) {
    return this.p1u_1.r1c(index);
  };
  JsonObjectDescriptor.prototype.s1c = function (index) {
    return this.p1u_1.s1c(index);
  };
  JsonObjectDescriptor.prototype.j1c = function () {
    return this.q1u_1;
  };
  JsonObjectDescriptor.$metadata$ = objectMeta('JsonObjectDescriptor', [SerialDescriptor]);
  var JsonObjectDescriptor_instance;
  function JsonObjectDescriptor_getInstance() {
    if (JsonObjectDescriptor_instance == null)
      new JsonObjectDescriptor();
    return JsonObjectDescriptor_instance;
  }
  function JsonObjectSerializer() {
    JsonObjectSerializer_instance = this;
    this.i1u_1 = JsonObjectDescriptor_getInstance();
  }
  JsonObjectSerializer.prototype.i1b = function () {
    return this.i1u_1;
  };
  JsonObjectSerializer.prototype.r1u = function (encoder, value) {
    verify(encoder);
    MapSerializer(serializer(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).j1b(encoder, value);
  };
  JsonObjectSerializer.prototype.j1b = function (encoder, value) {
    return this.r1u(encoder, value instanceof JsonObject ? value : THROW_CCE());
  };
  JsonObjectSerializer.prototype.k1b = function (decoder) {
    verify_0(decoder);
    return new JsonObject(MapSerializer(serializer(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).k1b(decoder));
  };
  JsonObjectSerializer.$metadata$ = objectMeta('JsonObjectSerializer', [KSerializer]);
  var JsonObjectSerializer_instance;
  function JsonObjectSerializer_getInstance() {
    if (JsonObjectSerializer_instance == null)
      new JsonObjectSerializer();
    return JsonObjectSerializer_instance;
  }
  function JsonPrimitiveSerializer() {
    JsonPrimitiveSerializer_instance = this;
    var tmp = this;
    var tmp_0 = STRING_getInstance();
    tmp.f1u_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonPrimitive', tmp_0, [], null, 12, null);
  }
  JsonPrimitiveSerializer.prototype.i1b = function () {
    return this.f1u_1;
  };
  JsonPrimitiveSerializer.prototype.s1u = function (encoder, value) {
    verify(encoder);
    var tmp;
    if (value instanceof JsonNull) {
      tmp = encoder.q1f(JsonNullSerializer_getInstance(), JsonNull_getInstance());
    } else {
      var tmp_0 = JsonLiteralSerializer_getInstance();
      tmp = encoder.q1f(tmp_0, value instanceof JsonLiteral ? value : THROW_CCE());
    }
    return tmp;
  };
  JsonPrimitiveSerializer.prototype.j1b = function (encoder, value) {
    return this.s1u(encoder, value instanceof JsonPrimitive ? value : THROW_CCE());
  };
  JsonPrimitiveSerializer.prototype.k1b = function (decoder) {
    var result = asJsonDecoder(decoder).t1t();
    if (!(result instanceof JsonPrimitive))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonPrimitive, had ' + getKClassFromExpression(result), toString(result));
    return result;
  };
  JsonPrimitiveSerializer.$metadata$ = objectMeta('JsonPrimitiveSerializer', [KSerializer]);
  var JsonPrimitiveSerializer_instance;
  function JsonPrimitiveSerializer_getInstance() {
    if (JsonPrimitiveSerializer_instance == null)
      new JsonPrimitiveSerializer();
    return JsonPrimitiveSerializer_instance;
  }
  function JsonNullSerializer() {
    JsonNullSerializer_instance = this;
    var tmp = this;
    var tmp_0 = ENUM_getInstance();
    tmp.g1u_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonNull', tmp_0, [], null, 12, null);
  }
  JsonNullSerializer.prototype.i1b = function () {
    return this.g1u_1;
  };
  JsonNullSerializer.prototype.t1u = function (encoder, value) {
    verify(encoder);
    encoder.v1e();
  };
  JsonNullSerializer.prototype.j1b = function (encoder, value) {
    return this.t1u(encoder, value instanceof JsonNull ? value : THROW_CCE());
  };
  JsonNullSerializer.prototype.k1b = function (decoder) {
    verify_0(decoder);
    if (decoder.o1d()) {
      throw new JsonDecodingException("Expected 'null' literal");
    }
    decoder.p1d();
    return JsonNull_getInstance();
  };
  JsonNullSerializer.$metadata$ = objectMeta('JsonNullSerializer', [KSerializer]);
  var JsonNullSerializer_instance;
  function JsonNullSerializer_getInstance() {
    if (JsonNullSerializer_instance == null)
      new JsonNullSerializer();
    return JsonNullSerializer_instance;
  }
  function defer(deferred) {
    return new defer$1(deferred);
  }
  function JsonLiteralSerializer() {
    JsonLiteralSerializer_instance = this;
    this.h1u_1 = PrimitiveSerialDescriptor('kotlinx.serialization.json.JsonLiteral', STRING_getInstance());
  }
  JsonLiteralSerializer.prototype.i1b = function () {
    return this.h1u_1;
  };
  JsonLiteralSerializer.prototype.u1u = function (encoder, value) {
    verify(encoder);
    if (value.a1u_1) {
      return encoder.e1f(value.b1u_1);
    }
    var tmp0_safe_receiver = get_longOrNull(value);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return encoder.a1f(tmp0_safe_receiver);
      }
    }
    var tmp1_safe_receiver = toULongOrNull(value.b1u_1);
    var tmp = tmp1_safe_receiver;
    if ((tmp == null ? null : new ULong(tmp)) == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        var tmp_0 = encoder.f1f(serializer_0(Companion_getInstance()).i1b());
        var tmp$ret$1;
        {
          tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp1_safe_receiver);
        }
        tmp_0.a1f(tmp$ret$1);
        return Unit_getInstance();
      }
    }
    var tmp2_safe_receiver = get_doubleOrNull(value);
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp$ret$3;
      {
        {
        }
        return encoder.c1f(tmp2_safe_receiver);
      }
    }
    var tmp3_safe_receiver = get_booleanOrNull(value);
    if (tmp3_safe_receiver == null)
      null;
    else {
      var tmp$ret$4;
      {
        {
        }
        return encoder.w1e(tmp3_safe_receiver);
      }
    }
    encoder.e1f(value.b1u_1);
  };
  JsonLiteralSerializer.prototype.j1b = function (encoder, value) {
    return this.u1u(encoder, value instanceof JsonLiteral ? value : THROW_CCE());
  };
  JsonLiteralSerializer.prototype.k1b = function (decoder) {
    var result = asJsonDecoder(decoder).t1t();
    if (!(result instanceof JsonLiteral))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonLiteral, had ' + getKClassFromExpression(result), toString(result));
    return result;
  };
  JsonLiteralSerializer.$metadata$ = objectMeta('JsonLiteralSerializer', [KSerializer]);
  var JsonLiteralSerializer_instance;
  function JsonLiteralSerializer_getInstance() {
    if (JsonLiteralSerializer_instance == null)
      new JsonLiteralSerializer();
    return JsonLiteralSerializer_instance;
  }
  function verify(encoder) {
    asJsonEncoder(encoder);
  }
  function asJsonDecoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonDecoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Decoder to be JsonDecoder, got ' + getKClassFromExpression(_this__u8e3s4)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function verify_0(decoder) {
    asJsonDecoder(decoder);
  }
  function asJsonEncoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonEncoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Encoder to be JsonEncoder, got ' + getKClassFromExpression(_this__u8e3s4)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function _get_original__l7ku1m($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = original$factory();
      tmp$ret$0 = $this.v1u_1.l1();
    }
    return tmp$ret$0;
  }
  function defer$1($deferred) {
    this.v1u_1 = lazy_0($deferred);
  }
  defer$1.prototype.j1c = function () {
    return _get_original__l7ku1m(this).j1c();
  };
  defer$1.prototype.n1c = function () {
    return _get_original__l7ku1m(this).n1c();
  };
  defer$1.prototype.l1c = function () {
    return _get_original__l7ku1m(this).l1c();
  };
  defer$1.prototype.r1c = function (index) {
    return _get_original__l7ku1m(this).r1c(index);
  };
  defer$1.prototype.q1c = function (name) {
    return _get_original__l7ku1m(this).q1c(name);
  };
  defer$1.prototype.o1c = function (index) {
    return _get_original__l7ku1m(this).o1c(index);
  };
  defer$1.prototype.p1c = function (index) {
    return _get_original__l7ku1m(this).p1c(index);
  };
  defer$1.prototype.s1c = function (index) {
    return _get_original__l7ku1m(this).s1c(index);
  };
  defer$1.$metadata$ = classMeta(undefined, [SerialDescriptor]);
  function original$factory() {
    return getPropertyCallableRef('original', 1, KProperty1, function (receiver) {
      return _get_original__l7ku1m(receiver);
    }, null);
  }
  function JsonEncoder() {
  }
  JsonEncoder.$metadata$ = interfaceMeta('JsonEncoder', [Encoder, CompositeEncoder]);
  function Composer(writer) {
    this.w1u_1 = writer;
    this.x1u_1 = true;
  }
  Composer.prototype.y1u = function (_set____db54di) {
    this.x1u_1 = _set____db54di;
  };
  Composer.prototype.z1u = function () {
    this.x1u_1 = true;
  };
  Composer.prototype.a1v = function () {
    return Unit_getInstance();
  };
  Composer.prototype.b1v = function () {
    this.x1u_1 = false;
  };
  Composer.prototype.c1v = function () {
    return Unit_getInstance();
  };
  Composer.prototype.d1v = function (v) {
    return this.w1u_1.e1v(v);
  };
  Composer.prototype.f1v = function (v) {
    return this.w1u_1.g1v(v);
  };
  Composer.prototype.h1v = function (v) {
    return this.w1u_1.g1v(v.toString());
  };
  Composer.prototype.i1v = function (v) {
    return this.w1u_1.g1v(v.toString());
  };
  Composer.prototype.j1v = function (v) {
    return this.w1u_1.k1v(toLong_0(v));
  };
  Composer.prototype.l1v = function (v) {
    return this.w1u_1.k1v(toLong_0(v));
  };
  Composer.prototype.m1v = function (v) {
    return this.w1u_1.k1v(toLong_0(v));
  };
  Composer.prototype.n1v = function (v) {
    return this.w1u_1.k1v(v);
  };
  Composer.prototype.o1v = function (v) {
    return this.w1u_1.g1v(v.toString());
  };
  Composer.prototype.p1v = function (value) {
    return this.w1u_1.q1v(value);
  };
  Composer.$metadata$ = classMeta('Composer');
  function Composer_0(sb, json) {
    return json.y1r_1.i1t_1 ? new ComposerWithPrettyPrint(sb, json) : new Composer(sb);
  }
  function ComposerForUnsignedNumbers(writer, forceQuoting) {
    Composer.call(this, writer);
    this.t1v_1 = forceQuoting;
  }
  ComposerForUnsignedNumbers.prototype.m1v = function (v) {
    if (this.t1v_1) {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UInt___init__impl__l7qpdl(v);
      }
      this.p1v(UInt__toString_impl_dbgl21(tmp$ret$0));
    } else {
      var tmp$ret$1;
      {
        tmp$ret$1 = _UInt___init__impl__l7qpdl(v);
      }
      this.f1v(UInt__toString_impl_dbgl21(tmp$ret$1));
    }
  };
  ComposerForUnsignedNumbers.prototype.n1v = function (v) {
    if (this.t1v_1) {
      var tmp$ret$0;
      {
        tmp$ret$0 = _ULong___init__impl__c78o9k(v);
      }
      this.p1v(ULong__toString_impl_f9au7k(tmp$ret$0));
    } else {
      var tmp$ret$1;
      {
        tmp$ret$1 = _ULong___init__impl__c78o9k(v);
      }
      this.f1v(ULong__toString_impl_f9au7k(tmp$ret$1));
    }
  };
  ComposerForUnsignedNumbers.prototype.j1v = function (v) {
    if (this.t1v_1) {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UByte___init__impl__g9hnc4(v);
      }
      this.p1v(UByte__toString_impl_v72jg(tmp$ret$0));
    } else {
      var tmp$ret$1;
      {
        tmp$ret$1 = _UByte___init__impl__g9hnc4(v);
      }
      this.f1v(UByte__toString_impl_v72jg(tmp$ret$1));
    }
  };
  ComposerForUnsignedNumbers.prototype.l1v = function (v) {
    if (this.t1v_1) {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UShort___init__impl__jigrne(v);
      }
      this.p1v(UShort__toString_impl_edaoee(tmp$ret$0));
    } else {
      var tmp$ret$1;
      {
        tmp$ret$1 = _UShort___init__impl__jigrne(v);
      }
      this.f1v(UShort__toString_impl_edaoee(tmp$ret$1));
    }
  };
  ComposerForUnsignedNumbers.$metadata$ = classMeta('ComposerForUnsignedNumbers', undefined, undefined, undefined, undefined, Composer.prototype);
  function ComposerWithPrettyPrint(writer, json) {
    Composer.call(this, writer);
    this.w1v_1 = json;
    this.x1v_1 = 0;
  }
  ComposerWithPrettyPrint.prototype.z1u = function () {
    this.y1u(true);
    var tmp0_this = this;
    var tmp1 = tmp0_this.x1v_1;
    tmp0_this.x1v_1 = tmp1 + 1 | 0;
  };
  ComposerWithPrettyPrint.prototype.a1v = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.x1v_1;
    tmp0_this.x1v_1 = tmp1 - 1 | 0;
  };
  ComposerWithPrettyPrint.prototype.b1v = function () {
    this.y1u(false);
    this.f1v('\n');
    {
      var tmp0_repeat = this.x1v_1;
      {
      }
      var inductionVariable = 0;
      if (inductionVariable < tmp0_repeat)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          {
            this.f1v(this.w1v_1.y1r_1.k1t_1);
          }
        }
         while (inductionVariable < tmp0_repeat);
    }
  };
  ComposerWithPrettyPrint.prototype.c1v = function () {
    this.d1v(_Char___init__impl__6a9atx(32));
  };
  ComposerWithPrettyPrint.$metadata$ = classMeta('ComposerWithPrettyPrint', undefined, undefined, undefined, undefined, Composer.prototype);
  function readIfAbsent($this, descriptor, index) {
    $this.z1v_1 = !descriptor.s1c(index) ? descriptor.p1c(index).f1c() : false;
    return $this.z1v_1;
  }
  function JsonElementMarker$readIfAbsent$ref($boundThis) {
    var l = function (p0, p1) {
      return readIfAbsent($boundThis, p0, p1);
    };
    l.callableName = 'readIfAbsent';
    return l;
  }
  function JsonElementMarker(descriptor) {
    var tmp = this;
    tmp.y1v_1 = new ElementMarker(descriptor, JsonElementMarker$readIfAbsent$ref(this));
    this.z1v_1 = false;
  }
  JsonElementMarker.prototype.w1j = function (index) {
    this.y1v_1.w1j(index);
  };
  JsonElementMarker.prototype.x1j = function () {
    return this.y1v_1.x1j();
  };
  JsonElementMarker.$metadata$ = classMeta('JsonElementMarker');
  function throwInvalidFloatingPointDecoded(_this__u8e3s4, result) {
    var tmp = 'Unexpected special floating-point value ' + toString(result) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification';
    _this__u8e3s4.a1w(tmp, 0, get_specialFlowingValuesHint(), 2, null);
  }
  function JsonEncodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonEncodingException);
  }
  JsonEncodingException.$metadata$ = classMeta('JsonEncodingException', undefined, undefined, undefined, undefined, JsonException.prototype);
  function InvalidKeyKindException(keyDescriptor) {
    return new JsonEncodingException("Value of type '" + keyDescriptor.j1c() + "' can't be used in JSON as a key in the map. " + ("It should have either primitive or enum kind, but its kind is '" + keyDescriptor.n1c() + "'.\n") + get_allowStructuredMapKeysHint());
  }
  function JsonDecodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonDecodingException);
  }
  JsonDecodingException.$metadata$ = classMeta('JsonDecodingException', undefined, undefined, undefined, undefined, JsonException.prototype);
  function JsonDecodingException_0(offset, message, input) {
    return JsonDecodingException_1(offset, message + '\nJSON input: ' + minify(input, offset));
  }
  function InvalidFloatingPointDecoded(value, key, output) {
    return JsonDecodingException_1(-1, unexpectedFpErrorMessage(value, key, output));
  }
  function JsonDecodingException_1(offset, message) {
    return new JsonDecodingException(offset >= 0 ? 'Unexpected JSON token at offset ' + offset + ': ' + message : message);
  }
  function UnknownKeyException(key, input) {
    var tmp = "Encountered unknown key '" + key + "'.\n" + (get_ignoreUnknownKeysHint() + '\n');
    return JsonDecodingException_1(-1, tmp + ('Current input: ' + minify$default(input, 0, 1, null)));
  }
  function InvalidFloatingPointEncoded(value, output) {
    var tmp = 'Unexpected special floating-point value ' + toString(value) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + (get_specialFlowingValuesHint() + '\n');
    return new JsonEncodingException(tmp + ('Current output: ' + minify$default(output, 0, 1, null)));
  }
  function JsonException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, JsonException);
  }
  JsonException.$metadata$ = classMeta('JsonException', undefined, undefined, undefined, undefined, SerializationException.prototype);
  function unexpectedFpErrorMessage(value, key, output) {
    var tmp = 'Unexpected special floating-point value ' + toString(value) + ' with key ' + key + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + (get_specialFlowingValuesHint() + '\n');
    return tmp + ('Current output: ' + minify$default(output, 0, 1, null));
  }
  function minify(_this__u8e3s4, offset) {
    if (charSequenceLength(_this__u8e3s4) < 200)
      return _this__u8e3s4;
    if (offset === -1) {
      var start = charSequenceLength(_this__u8e3s4) - 60 | 0;
      if (start <= 0)
        return _this__u8e3s4;
      var tmp$ret$0;
      {
        var tmp0_substring = charSequenceLength(_this__u8e3s4);
        tmp$ret$0 = toString(charSequenceSubSequence(_this__u8e3s4, start, tmp0_substring));
      }
      return '.....' + tmp$ret$0;
    }
    var start_0 = offset - 30 | 0;
    var end = offset + 30 | 0;
    var prefix = start_0 <= 0 ? '' : '.....';
    var suffix = end >= charSequenceLength(_this__u8e3s4) ? '' : '.....';
    var tmp$ret$1;
    {
      var tmp1_substring = coerceAtLeast(start_0, 0);
      var tmp2_substring = coerceAtMost(end, charSequenceLength(_this__u8e3s4));
      tmp$ret$1 = toString(charSequenceSubSequence(_this__u8e3s4, tmp1_substring, tmp2_substring));
    }
    return prefix + tmp$ret$1 + suffix;
  }
  function minify$default(_this__u8e3s4, offset, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      offset = -1;
    return minify(_this__u8e3s4, offset);
  }
  function get_JsonAlternativeNamesKey() {
    init_properties_JsonNamesMap_kt_1j2xk2();
    return JsonAlternativeNamesKey;
  }
  var JsonAlternativeNamesKey;
  function tryCoerceValue(_this__u8e3s4, elementDescriptor, peekNull, peekString, onEnumCoercing) {
    init_properties_JsonNamesMap_kt_1j2xk2();
    if (!elementDescriptor.f1c() ? peekNull() : false)
      return true;
    if (equals(elementDescriptor.n1c(), ENUM_getInstance())) {
      var tmp0_elvis_lhs = peekString();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var enumValue = tmp;
      var enumIndex = getJsonNameIndex(elementDescriptor, _this__u8e3s4, enumValue);
      Companion_getInstance_0();
      if (enumIndex === -3) {
        onEnumCoercing();
        return true;
      }
    }
    return false;
  }
  function getJsonNameIndex(_this__u8e3s4, json, name) {
    init_properties_JsonNamesMap_kt_1j2xk2();
    var index = _this__u8e3s4.q1c(name);
    Companion_getInstance_0();
    if (!(index === -3))
      return index;
    if (!json.y1r_1.p1t_1)
      return index;
    var tmp = get_schemaCache(json);
    var tmp_0 = get_JsonAlternativeNamesKey();
    var alternativeNamesMap = tmp.c1w(_this__u8e3s4, tmp_0, buildAlternativeNamesMap$ref(_this__u8e3s4));
    var tmp0_elvis_lhs = alternativeNamesMap.v1(name);
    var tmp_1;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_0();
      tmp_1 = -3;
    } else {
      tmp_1 = tmp0_elvis_lhs;
    }
    return tmp_1;
  }
  function buildAlternativeNamesMap(_this__u8e3s4) {
    init_properties_JsonNamesMap_kt_1j2xk2();
    var builder = null;
    var inductionVariable = 0;
    var last = _this__u8e3s4.l1c();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$1;
        {
          var tmp0_filterIsInstance = _this__u8e3s4.o1c(i);
          var tmp$ret$0;
          {
            var tmp0_filterIsInstanceTo = ArrayList_init_$Create$();
            var tmp0_iterator = tmp0_filterIsInstance.d();
            while (tmp0_iterator.e()) {
              var element = tmp0_iterator.f();
              if (element instanceof JsonNames) {
                tmp0_filterIsInstanceTo.c(element);
              }
            }
            tmp$ret$0 = tmp0_filterIsInstanceTo;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        var tmp1_safe_receiver = singleOrNull(tmp$ret$1);
        var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.d1w_1;
        if (tmp2_safe_receiver == null)
          null;
        else {
          {
            var tmp0_iterator_0 = arrayIterator(tmp2_safe_receiver);
            while (tmp0_iterator_0.e()) {
              var element_0 = tmp0_iterator_0.f();
              {
                if (builder == null)
                  builder = createMapForCache(_this__u8e3s4.l1c());
                buildAlternativeNamesMap$putOrThrow(ensureNotNull(builder), _this__u8e3s4, element_0, i);
              }
            }
          }
        }
      }
       while (inductionVariable < last);
    var tmp3_elvis_lhs = builder;
    return tmp3_elvis_lhs == null ? emptyMap() : tmp3_elvis_lhs;
  }
  function buildAlternativeNamesMap$putOrThrow(_this__u8e3s4, $this_buildAlternativeNamesMap, name, index) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).s1(name);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    if (tmp$ret$1) {
      throw new JsonException("The suggested name '" + name + "' for property " + $this_buildAlternativeNamesMap.r1c(index) + ' is already one of the names for property ' + ($this_buildAlternativeNamesMap.r1c(getValue(_this__u8e3s4, name)) + ' in ' + $this_buildAlternativeNamesMap));
    }
    {
      _this__u8e3s4.a(name, index);
    }
  }
  function buildAlternativeNamesMap$ref($boundThis) {
    var l = function () {
      return buildAlternativeNamesMap($boundThis);
    };
    l.callableName = 'buildAlternativeNamesMap';
    return l;
  }
  var properties_initialized_JsonNamesMap_kt_ljpf42;
  function init_properties_JsonNamesMap_kt_1j2xk2() {
    if (properties_initialized_JsonNamesMap_kt_ljpf42) {
    } else {
      properties_initialized_JsonNamesMap_kt_ljpf42 = true;
      JsonAlternativeNamesKey = new Key();
    }
  }
  function Tombstone() {
    Tombstone_instance = this;
  }
  Tombstone.$metadata$ = objectMeta('Tombstone');
  var Tombstone_instance;
  function Tombstone_getInstance() {
    if (Tombstone_instance == null)
      new Tombstone();
    return Tombstone_instance;
  }
  function resize($this) {
    var newSize = imul($this.g1w_1, 2);
    $this.e1w_1 = copyOf($this.e1w_1, newSize);
    $this.f1w_1 = copyOf_0($this.f1w_1, newSize);
  }
  function JsonPath() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(8), null);
    }
    tmp.e1w_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp_1 = 0;
    var tmp_2 = 8;
    var tmp_3 = new Int32Array(tmp_2);
    while (tmp_1 < tmp_2) {
      var tmp_4 = tmp_1;
      var tmp$ret$1;
      {
        tmp$ret$1 = -1;
      }
      tmp_3[tmp_4] = tmp$ret$1;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp_0.f1w_1 = tmp_3;
    this.g1w_1 = -1;
  }
  JsonPath.prototype.h1w = function (sd) {
    var tmp0_this = this;
    tmp0_this.g1w_1 = tmp0_this.g1w_1 + 1 | 0;
    var depth = tmp0_this.g1w_1;
    if (depth === this.e1w_1.length) {
      resize(this);
    }
    this.e1w_1[depth] = sd;
  };
  JsonPath.prototype.i1w = function (index) {
    this.f1w_1[this.g1w_1] = index;
  };
  JsonPath.prototype.j1w = function (key) {
    var tmp;
    if (!(this.f1w_1[this.g1w_1] === -2)) {
      var tmp0_this = this;
      tmp0_this.g1w_1 = tmp0_this.g1w_1 + 1 | 0;
      tmp = tmp0_this.g1w_1 === this.e1w_1.length;
    } else {
      tmp = false;
    }
    if (tmp) {
      resize(this);
    }
    this.e1w_1[this.g1w_1] = key;
    this.f1w_1[this.g1w_1] = -2;
  };
  JsonPath.prototype.k1w = function () {
    if (this.f1w_1[this.g1w_1] === -2) {
      this.e1w_1[this.g1w_1] = Tombstone_getInstance();
    }
  };
  JsonPath.prototype.l1w = function () {
    var depth = this.g1w_1;
    if (this.f1w_1[depth] === -2) {
      this.f1w_1[depth] = -1;
      var tmp0_this = this;
      var tmp1 = tmp0_this.g1w_1;
      tmp0_this.g1w_1 = tmp1 - 1 | 0;
    }
    if (!(this.g1w_1 === -1)) {
      var tmp2_this = this;
      var tmp3 = tmp2_this.g1w_1;
      tmp2_this.g1w_1 = tmp3 - 1 | 0;
    }
  };
  JsonPath.prototype.m1w = function () {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          tmp0_apply.b6('$');
          {
            var tmp0_repeat = this.g1w_1 + 1 | 0;
            {
            }
            var inductionVariable = 0;
            if (inductionVariable < tmp0_repeat)
              do {
                var index = inductionVariable;
                inductionVariable = inductionVariable + 1 | 0;
                {
                  var element = this.e1w_1[index];
                  if (!(element == null) ? isInterface(element, SerialDescriptor) : false) {
                    if (equals(element.n1c(), LIST_getInstance())) {
                      if (!(this.f1w_1[index] === -1)) {
                        tmp0_apply.b6('[');
                        tmp0_apply.a6(this.f1w_1[index]);
                        tmp0_apply.b6(']');
                      }
                    } else {
                      var idx = this.f1w_1[index];
                      if (idx >= 0) {
                        tmp0_apply.b6('.');
                        tmp0_apply.b6(element.r1c(idx));
                      }
                    }
                  } else {
                    if (!(element === Tombstone_getInstance())) {
                      tmp0_apply.b6('[');
                      tmp0_apply.b6("'");
                      tmp0_apply.a6(element);
                      tmp0_apply.b6("'");
                      tmp0_apply.b6(']');
                    }
                  }
                }
              }
               while (inductionVariable < tmp0_repeat);
          }
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  };
  JsonPath.prototype.toString = function () {
    return this.m1w();
  };
  JsonPath.$metadata$ = classMeta('JsonPath');
  function encodeByWriter(_this__u8e3s4, writer, serializer, value) {
    var tmp = WriteMode_OBJ_getInstance();
    var tmp$ret$0;
    {
      var tmp0_arrayOfNulls = values().length;
      tmp$ret$0 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    }
    var encoder = StreamingJsonEncoder_init_$Create$(writer, _this__u8e3s4, tmp, tmp$ret$0);
    encoder.q1f(serializer, value);
  }
  function JsonWriter() {
  }
  JsonWriter.$metadata$ = interfaceMeta('JsonWriter');
  function readObject($this) {
    var tmp$ret$2;
    {
      var lastToken = $this.v1w_1.y1w(get_TC_BEGIN_OBJ());
      if ($this.v1w_1.z1w() === get_TC_COMMA()) {
        $this.v1w_1.a1w('Unexpected leading comma', 0, null, 6, null);
      }
      var tmp$ret$0;
      {
        tmp$ret$0 = LinkedHashMap_init_$Create$();
      }
      var result = tmp$ret$0;
      $l$loop: while ($this.v1w_1.a1x()) {
        var key = $this.w1w_1 ? $this.v1w_1.c1x() : $this.v1w_1.b1x();
        $this.v1w_1.y1w(get_TC_COLON());
        var tmp$ret$1;
        {
          tmp$ret$1 = $this.d1x();
        }
        var element = tmp$ret$1;
        {
          result.a(key, element);
        }
        lastToken = $this.v1w_1.e1x();
        var tmp0_subject = lastToken;
        if (tmp0_subject === get_TC_COMMA())
        ;
        else if (tmp0_subject === get_TC_END_OBJ())
          break $l$loop;
        else {
          $this.v1w_1.a1w('Expected end of the object or comma', 0, null, 6, null);
        }
      }
      if (lastToken === get_TC_BEGIN_OBJ()) {
        $this.v1w_1.y1w(get_TC_END_OBJ());
      } else if (lastToken === get_TC_COMMA()) {
        $this.v1w_1.a1w('Unexpected trailing comma', 0, null, 6, null);
      }
      tmp$ret$2 = new JsonObject(result);
    }
    return tmp$ret$2;
  }
  function readObject_0(_this__u8e3s4, $this, $cont) {
    var tmp = new $readObjectCOROUTINE$0($this, _this__u8e3s4, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  }
  function readArray($this) {
    var lastToken = $this.v1w_1.e1x();
    if ($this.v1w_1.z1w() === get_TC_COMMA()) {
      $this.v1w_1.a1w('Unexpected leading comma', 0, null, 6, null);
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$();
    }
    var result = tmp$ret$0;
    while ($this.v1w_1.a1x()) {
      var element = $this.d1x();
      result.c(element);
      lastToken = $this.v1w_1.e1x();
      if (!(lastToken === get_TC_COMMA())) {
        {
          var tmp0_require = $this.v1w_1;
          var tmp1_require = lastToken === get_TC_END_LIST();
          var tmp2_require = tmp0_require.m1s_1;
          if (!tmp1_require) {
            var tmp$ret$1;
            {
              tmp$ret$1 = 'Expected end of the array or comma';
            }
            var tmp = tmp$ret$1;
            tmp0_require.a1w(tmp, tmp2_require, null, 4, null);
          }
        }
      }
    }
    if (lastToken === get_TC_BEGIN_LIST()) {
      $this.v1w_1.y1w(get_TC_END_LIST());
    } else if (lastToken === get_TC_COMMA()) {
      $this.v1w_1.a1w('Unexpected trailing comma', 0, null, 6, null);
    }
    return new JsonArray(result);
  }
  function readValue($this, isString) {
    var tmp;
    if ($this.w1w_1 ? true : !isString) {
      tmp = $this.v1w_1.c1x();
    } else {
      tmp = $this.v1w_1.b1x();
    }
    var string = tmp;
    if (!isString ? string === get_NULL() : false)
      return JsonNull_getInstance();
    return new JsonLiteral(string, isString);
  }
  function readDeepRecursive($this) {
    return invoke(new DeepRecursiveFunction(JsonTreeReader$readDeepRecursive$slambda_0($this, null)), Unit_getInstance());
  }
  function JsonTreeReader$readDeepRecursive$slambda(this$0, resultContinuation) {
    this.a1y_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  JsonTreeReader$readDeepRecursive$slambda.prototype.f1y = function ($this$$receiver, it, $cont) {
    var tmp = this.g1y($this$$receiver, it, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  JsonTreeReader$readDeepRecursive$slambda.prototype.r6 = function (p1, p2, $cont) {
    var tmp = p1 instanceof DeepRecursiveScope ? p1 : THROW_CCE();
    return this.f1y(tmp, p2 instanceof Unit ? p2 : THROW_CCE(), $cont);
  };
  JsonTreeReader$readDeepRecursive$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 3;
            this.d1y_1 = this.a1y_1.v1w_1.z1w();
            if (this.d1y_1 === get_TC_STRING()) {
              this.e1y_1 = readValue(this.a1y_1, true);
              this.sg_1 = 2;
              continue $sm;
            } else {
              if (this.d1y_1 === get_TC_OTHER()) {
                this.e1y_1 = readValue(this.a1y_1, false);
                this.sg_1 = 2;
                continue $sm;
              } else {
                if (this.d1y_1 === get_TC_BEGIN_OBJ()) {
                  this.sg_1 = 1;
                  suspendResult = readObject_0(this.b1y_1, this.a1y_1, this);
                  if (suspendResult === get_COROUTINE_SUSPENDED()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  if (this.d1y_1 === get_TC_BEGIN_LIST()) {
                    this.e1y_1 = readArray(this.a1y_1);
                    this.sg_1 = 2;
                    continue $sm;
                  } else {
                    var tmp_0 = this;
                    this.a1y_1.v1w_1.a1w("Can't begin reading element, unexpected token", 0, null, 6, null);
                  }
                }
              }
            }

            break;
          case 1:
            this.e1y_1 = suspendResult;
            this.sg_1 = 2;
            continue $sm;
          case 2:
            return this.e1y_1;
          case 3:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 3) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  JsonTreeReader$readDeepRecursive$slambda.prototype.g1y = function ($this$$receiver, it, completion) {
    var i = new JsonTreeReader$readDeepRecursive$slambda(this.a1y_1, completion);
    i.b1y_1 = $this$$receiver;
    i.c1y_1 = it;
    return i;
  };
  JsonTreeReader$readDeepRecursive$slambda.$metadata$ = classMeta('JsonTreeReader$readDeepRecursive$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function JsonTreeReader$readDeepRecursive$slambda_0(this$0, resultContinuation) {
    var i = new JsonTreeReader$readDeepRecursive$slambda(this$0, resultContinuation);
    var l = function ($this$$receiver, it, $cont) {
      return i.f1y($this$$receiver, it, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function $readObjectCOROUTINE$0(_this__u8e3s4, _this__u8e3s4_0, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.n1x_1 = _this__u8e3s4;
    this.o1x_1 = _this__u8e3s4_0;
  }
  $readObjectCOROUTINE$0.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 5;
            this.p1x_1 = this.n1x_1.v1w_1.y1w(get_TC_BEGIN_OBJ());
            if (this.n1x_1.v1w_1.z1w() === get_TC_COMMA()) {
              this.n1x_1.v1w_1.a1w('Unexpected leading comma', 0, null, 6, null);
            }

            var tmp_0 = this;
            tmp_0.q1x_1 = LinkedHashMap_init_$Create$();
            this.sg_1 = 1;
            continue $sm;
          case 1:
            if (!this.n1x_1.v1w_1.a1x()) {
              this.sg_1 = 4;
              continue $sm;
            }

            this.r1x_1 = this.n1x_1.w1w_1 ? this.n1x_1.v1w_1.c1x() : this.n1x_1.v1w_1.b1x();
            this.n1x_1.v1w_1.y1w(get_TC_COLON());
            ;
            this.sg_1 = 2;
            suspendResult = this.o1x_1.j6(Unit_getInstance(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var element = suspendResult;
            this.q1x_1.a(this.r1x_1, element);
            ;
            this.p1x_1 = this.n1x_1.v1w_1.e1x();
            var tmp0_subject = this.p1x_1;
            if (tmp0_subject === get_TC_COMMA()) {
              this.sg_1 = 3;
              continue $sm;
            } else {
              if (tmp0_subject === get_TC_END_OBJ()) {
                this.sg_1 = 4;
                continue $sm;
              } else {
                this.n1x_1.v1w_1.a1w('Expected end of the object or comma', 0, null, 6, null);
              }
            }

            break;
          case 3:
            this.sg_1 = 1;
            continue $sm;
          case 4:
            if (this.p1x_1 === get_TC_BEGIN_OBJ()) {
              this.n1x_1.v1w_1.y1w(get_TC_END_OBJ());
            } else if (this.p1x_1 === get_TC_COMMA()) {
              this.n1x_1.v1w_1.a1w('Unexpected trailing comma', 0, null, 6, null);
            }

            return new JsonObject(this.q1x_1);
          case 5:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 5) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $readObjectCOROUTINE$0.$metadata$ = classMeta('$readObjectCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function JsonTreeReader(configuration, lexer) {
    this.v1w_1 = lexer;
    this.w1w_1 = configuration.g1t_1;
    this.x1w_1 = 0;
  }
  JsonTreeReader.prototype.d1x = function () {
    var token = this.v1w_1.z1w();
    var tmp;
    if (token === get_TC_STRING()) {
      tmp = readValue(this, true);
    } else if (token === get_TC_OTHER()) {
      tmp = readValue(this, false);
    } else if (token === get_TC_BEGIN_OBJ()) {
      var tmp_0;
      var tmp0_this = this;
      tmp0_this.x1w_1 = tmp0_this.x1w_1 + 1 | 0;
      if (tmp0_this.x1w_1 === 200) {
        tmp_0 = readDeepRecursive(this);
      } else {
        tmp_0 = readObject(this);
      }
      var result = tmp_0;
      var tmp1_this = this;
      tmp1_this.x1w_1 = tmp1_this.x1w_1 - 1 | 0;
      tmp = result;
    } else if (token === get_TC_BEGIN_LIST()) {
      tmp = readArray(this);
    } else {
      var tmp_1 = 'Cannot begin reading element, unexpected token: ' + token;
      this.v1w_1.a1w(tmp_1, 0, null, 6, null);
    }
    return tmp;
  };
  JsonTreeReader.$metadata$ = classMeta('JsonTreeReader');
  function classDiscriminator(_this__u8e3s4, json) {
    var tmp0_iterator = _this__u8e3s4.k1c().d();
    while (tmp0_iterator.e()) {
      var annotation = tmp0_iterator.f();
      if (annotation instanceof JsonClassDiscriminator)
        return annotation.h1y_1;
    }
    return json.y1r_1.n1t_1;
  }
  function decodeSerializableValuePolymorphic(_this__u8e3s4, deserializer) {
    var tmp;
    if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
      tmp = true;
    } else {
      tmp = _this__u8e3s4.s1t().y1r_1.m1t_1;
    }
    if (tmp) {
      return deserializer.k1b(_this__u8e3s4);
    }
    var discriminator = classDiscriminator(deserializer.i1b(), _this__u8e3s4.s1t());
    var tmp$ret$0;
    {
      var tmp0_cast = _this__u8e3s4.t1t();
      var tmp1_cast = deserializer.i1b();
      if (!(tmp0_cast instanceof JsonObject)) {
        throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + tmp1_cast.j1c() + ', but had ' + getKClassFromExpression(tmp0_cast));
      }
      tmp$ret$0 = tmp0_cast;
    }
    var jsonTree = tmp$ret$0;
    var tmp0_safe_receiver = jsonTree.y1t(discriminator);
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
    var type = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.z1t();
    var tmp2_elvis_lhs = deserializer.y1b(_this__u8e3s4, type);
    var tmp_0;
    if (tmp2_elvis_lhs == null) {
      throwSerializerNotFound(type, jsonTree);
    } else {
      tmp_0 = tmp2_elvis_lhs;
    }
    var actualSerializer = tmp_0;
    var tmp_1 = _this__u8e3s4.s1t();
    return readPolymorphicJson(tmp_1, discriminator, jsonTree, isInterface(actualSerializer, DeserializationStrategy) ? actualSerializer : THROW_CCE());
  }
  function encodePolymorphically(_this__u8e3s4, serializer, value, ifPolymorphic) {
    var tmp;
    if (!(serializer instanceof AbstractPolymorphicSerializer)) {
      tmp = true;
    } else {
      tmp = _this__u8e3s4.s1t().y1r_1.m1t_1;
    }
    if (tmp) {
      serializer.j1b(_this__u8e3s4, value);
      return Unit_getInstance();
    }
    var casted = serializer instanceof AbstractPolymorphicSerializer ? serializer : THROW_CCE();
    var baseClassDiscriminator = classDiscriminator(serializer.i1b(), _this__u8e3s4.s1t());
    var actualSerializer = findPolymorphicSerializer(casted, _this__u8e3s4, isObject(value) ? value : THROW_CCE());
    validateIfSealed$accessor$1ad0flx(casted, actualSerializer, baseClassDiscriminator);
    checkKind(actualSerializer.i1b().n1c());
    ifPolymorphic(baseClassDiscriminator);
    actualSerializer.j1b(_this__u8e3s4, value);
  }
  function throwSerializerNotFound(type, jsonTree) {
    var suffix = type == null ? "missing class discriminator ('null')" : "class discriminator '" + type + "'";
    throw JsonDecodingException_0(-1, 'Polymorphic serializer was not found for ' + suffix, jsonTree.toString());
  }
  function validateIfSealed(serializer, actualSerializer, classDiscriminator) {
    if (!(serializer instanceof SealedClassSerializer))
      return Unit_getInstance();
    if (jsonCachedSerialNames(actualSerializer.i1b()).a1(classDiscriminator)) {
      var baseName = serializer.i1b().j1c();
      var actualName = actualSerializer.i1b().j1c();
      {
        var tmp0_error = "Sealed class '" + actualName + "' cannot be serialized as base class '" + baseName + "' because" + (" it has property name that conflicts with JSON class discriminator '" + classDiscriminator + "'. ") + 'You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation or fall back to array polymorphism';
        throw IllegalStateException_init_$Create$(toString(tmp0_error));
      }
    }
  }
  function checkKind(kind) {
    if (kind instanceof ENUM) {
      throw IllegalStateException_init_$Create$("Enums cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead");
    }
    if (kind instanceof PrimitiveKind) {
      throw IllegalStateException_init_$Create$("Primitives cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead");
    }
    if (kind instanceof PolymorphicKind) {
      throw IllegalStateException_init_$Create$('Actual serializer for polymorphic cannot be polymorphic itself');
    }
  }
  function validateIfSealed$accessor$1ad0flx(serializer, actualSerializer, classDiscriminator) {
    return validateIfSealed(serializer, actualSerializer, classDiscriminator);
  }
  function checkKind_0($this, descriptor, actualClass) {
    var kind = descriptor.n1c();
    var tmp;
    if (kind instanceof PolymorphicKind) {
      tmp = true;
    } else {
      tmp = equals(kind, CONTEXTUAL_getInstance());
    }
    if (tmp) {
      throw IllegalArgumentException_init_$Create$('Serializer for ' + actualClass.xc() + " can't be registered as a subclass for polymorphic serialization " + ('because its kind ' + kind + ' is not concrete. To work with multiple hierarchies, register it as a base class.'));
    }
    if ($this.i1y_1)
      return Unit_getInstance();
    var tmp_0;
    var tmp_1;
    if (equals(kind, LIST_getInstance()) ? true : equals(kind, MAP_getInstance())) {
      tmp_1 = true;
    } else {
      tmp_1 = kind instanceof PrimitiveKind;
    }
    if (tmp_1) {
      tmp_0 = true;
    } else {
      tmp_0 = kind instanceof ENUM;
    }
    if (tmp_0) {
      throw IllegalArgumentException_init_$Create$('Serializer for ' + actualClass.xc() + ' of kind ' + kind + ' cannot be serialized polymorphically with class discriminator.');
    }
  }
  function checkDiscriminatorCollisions($this, descriptor, actualClass) {
    var inductionVariable = 0;
    var last = descriptor.l1c();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var name = descriptor.r1c(i);
        if (name === $this.j1y_1) {
          throw IllegalArgumentException_init_$Create$('Polymorphic serializer for ' + actualClass + " has property '" + name + "' that conflicts " + 'with JSON class discriminator. You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation ' + 'or fall back to array polymorphism');
        }
      }
       while (inductionVariable < last);
  }
  function PolymorphismValidator(useArrayPolymorphism, discriminator) {
    this.i1y_1 = useArrayPolymorphism;
    this.j1y_1 = discriminator;
  }
  PolymorphismValidator.prototype.p1r = function (kClass, provider) {
  };
  PolymorphismValidator.prototype.s1r = function (baseClass, actualClass, actualSerializer) {
    var descriptor = actualSerializer.i1b();
    checkKind_0(this, descriptor, actualClass);
    if (!this.i1y_1) {
      checkDiscriminatorCollisions(this, descriptor, actualClass);
    }
  };
  PolymorphismValidator.prototype.t1r = function (baseClass, defaultSerializerProvider) {
  };
  PolymorphismValidator.prototype.u1r = function (baseClass, defaultDeserializerProvider) {
  };
  PolymorphismValidator.$metadata$ = classMeta('PolymorphismValidator', [SerializersModuleCollector]);
  function Key() {
  }
  Key.$metadata$ = classMeta('Key');
  function DescriptorSchemaCache() {
    this.b1w_1 = createMapForCache(1);
  }
  DescriptorSchemaCache.prototype.k1y = function (descriptor, key, value) {
    {
      var tmp$ret$1;
      {
        var tmp0_getOrPut = this.b1w_1;
        var value_0 = tmp0_getOrPut.v1(descriptor);
        var tmp;
        if (value_0 == null) {
          var tmp$ret$0;
          {
            tmp$ret$0 = createMapForCache(1);
          }
          var answer = tmp$ret$0;
          tmp0_getOrPut.a(descriptor, answer);
          tmp = answer;
        } else {
          tmp = value_0;
        }
        tmp$ret$1 = tmp;
      }
      var tmp1_set = tmp$ret$1;
      var tmp2_set = key instanceof Key ? key : THROW_CCE();
      var tmp3_set = isObject(value) ? value : THROW_CCE();
      tmp1_set.a(tmp2_set, tmp3_set);
    }
  };
  DescriptorSchemaCache.prototype.c1w = function (descriptor, key, defaultValue) {
    var tmp0_safe_receiver = this.l1y(descriptor, key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return tmp0_safe_receiver;
      }
    }
    var value = defaultValue();
    this.k1y(descriptor, key, value);
    return value;
  };
  DescriptorSchemaCache.prototype.l1y = function (descriptor, key) {
    var tmp0_safe_receiver = this.b1w_1.v1(descriptor);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = tmp0_safe_receiver.v1(key instanceof Key ? key : THROW_CCE());
    }
    var tmp_0 = tmp;
    return isObject(tmp_0) ? tmp_0 : null;
  };
  DescriptorSchemaCache.$metadata$ = classMeta('DescriptorSchemaCache');
  function DiscriminatorHolder(discriminatorToSkip) {
    this.m1y_1 = discriminatorToSkip;
  }
  DiscriminatorHolder.$metadata$ = classMeta('DiscriminatorHolder');
  function trySkip(_this__u8e3s4, $this, unknownKey) {
    if (_this__u8e3s4 == null)
      return false;
    if (_this__u8e3s4.m1y_1 === unknownKey) {
      _this__u8e3s4.m1y_1 = null;
      return true;
    }
    return false;
  }
  function skipLeftoverElements($this, descriptor) {
    $l$loop: while (true) {
      var tmp = $this.r1e(descriptor);
      Companion_getInstance_0();
      if (!!(tmp === -1)) {
        break $l$loop;
      }
    }
  }
  function checkLeadingComma($this) {
    if ($this.g1s_1.z1w() === get_TC_COMMA()) {
      $this.g1s_1.a1w('Unexpected leading comma', 0, null, 6, null);
    }
  }
  function decodeMapIndex($this) {
    var hasComma = false;
    var decodingKey = !(($this.i1s_1 % 2 | 0) === 0);
    if (decodingKey) {
      if (!($this.i1s_1 === -1)) {
        hasComma = $this.g1s_1.o1y();
      }
    } else {
      $this.g1s_1.n1y(get_COLON());
    }
    var tmp;
    if ($this.g1s_1.a1x()) {
      if (decodingKey) {
        if ($this.i1s_1 === -1) {
          var tmp0_require = $this.g1s_1;
          var tmp1_require = !hasComma;
          var tmp2_require = tmp0_require.m1s_1;
          if (!tmp1_require) {
            var tmp$ret$0;
            {
              tmp$ret$0 = 'Unexpected trailing comma';
            }
            var tmp_0 = tmp$ret$0;
            tmp0_require.a1w(tmp_0, tmp2_require, null, 4, null);
          }
        } else {
          var tmp3_require = $this.g1s_1;
          var tmp4_require = hasComma;
          var tmp5_require = tmp3_require.m1s_1;
          if (!tmp4_require) {
            var tmp$ret$1;
            {
              tmp$ret$1 = 'Expected comma after the key-value pair';
            }
            var tmp_1 = tmp$ret$1;
            tmp3_require.a1w(tmp_1, tmp5_require, null, 4, null);
          }
        }
      }
      var tmp0_this = $this;
      tmp0_this.i1s_1 = tmp0_this.i1s_1 + 1 | 0;
      tmp = tmp0_this.i1s_1;
    } else {
      if (hasComma) {
        $this.g1s_1.a1w("Expected '}', but had ',' instead", 0, null, 6, null);
      }
      Companion_getInstance_0();
      tmp = -1;
    }
    return tmp;
  }
  function coerceInputValue($this, descriptor, index) {
    var tmp$ret$1;
    $l$block_1: {
      var tmp0_tryCoerceValue = $this.e1s_1;
      var tmp1_tryCoerceValue = descriptor.p1c(index);
      var tmp;
      if (!tmp1_tryCoerceValue.f1c()) {
        var tmp$ret$0;
        {
          tmp$ret$0 = !$this.g1s_1.p1y();
        }
        tmp = tmp$ret$0;
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$1 = true;
        break $l$block_1;
      }
      if (equals(tmp1_tryCoerceValue.n1c(), ENUM_getInstance())) {
        var tmp$ret$2;
        {
          tmp$ret$2 = $this.g1s_1.q1y($this.k1s_1.g1t_1);
        }
        var tmp0_elvis_lhs = tmp$ret$2;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          tmp$ret$1 = false;
          break $l$block_1;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        var enumValue = tmp_0;
        var enumIndex = getJsonNameIndex(tmp1_tryCoerceValue, tmp0_tryCoerceValue, enumValue);
        Companion_getInstance_0();
        if (enumIndex === -3) {
          {
            $this.g1s_1.b1x();
          }
          tmp$ret$1 = true;
          break $l$block_1;
        }
      }
      tmp$ret$1 = false;
    }
    return tmp$ret$1;
  }
  function decodeObjectIndex($this, descriptor) {
    var hasComma = $this.g1s_1.o1y();
    while ($this.g1s_1.a1x()) {
      hasComma = false;
      var key = decodeStringKey($this);
      $this.g1s_1.n1y(get_COLON());
      var index = getJsonNameIndex(descriptor, $this.e1s_1, key);
      var tmp;
      Companion_getInstance_0();
      if (!(index === -3)) {
        var tmp_0;
        if ($this.k1s_1.l1t_1 ? coerceInputValue($this, descriptor, index) : false) {
          hasComma = $this.g1s_1.o1y();
          tmp_0 = false;
        } else {
          var tmp0_safe_receiver = $this.l1s_1;
          if (tmp0_safe_receiver == null)
            null;
          else {
            tmp0_safe_receiver.w1j(index);
          }
          return index;
        }
        tmp = tmp_0;
      } else {
        tmp = true;
      }
      var isUnknown = tmp;
      if (isUnknown) {
        hasComma = handleUnknown($this, key);
      }
    }
    if (hasComma) {
      $this.g1s_1.a1w('Unexpected trailing comma', 0, null, 6, null);
    }
    var tmp1_safe_receiver = $this.l1s_1;
    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.x1j();
    var tmp_1;
    if (tmp2_elvis_lhs == null) {
      Companion_getInstance_0();
      tmp_1 = -1;
    } else {
      tmp_1 = tmp2_elvis_lhs;
    }
    return tmp_1;
  }
  function handleUnknown($this, key) {
    if ($this.k1s_1.f1t_1 ? true : trySkip($this.j1s_1, $this, key)) {
      $this.g1s_1.s1y($this.k1s_1.g1t_1);
    } else {
      $this.g1s_1.r1y(key);
    }
    return $this.g1s_1.o1y();
  }
  function decodeListIndex($this) {
    var hasComma = $this.g1s_1.o1y();
    var tmp;
    if ($this.g1s_1.a1x()) {
      if (!($this.i1s_1 === -1) ? !hasComma : false) {
        $this.g1s_1.a1w('Expected end of the array or comma', 0, null, 6, null);
      }
      var tmp0_this = $this;
      tmp0_this.i1s_1 = tmp0_this.i1s_1 + 1 | 0;
      tmp = tmp0_this.i1s_1;
    } else {
      if (hasComma) {
        $this.g1s_1.a1w('Unexpected trailing comma', 0, null, 6, null);
      }
      Companion_getInstance_0();
      tmp = -1;
    }
    return tmp;
  }
  function decodeStringKey($this) {
    var tmp;
    if ($this.k1s_1.g1t_1) {
      tmp = $this.g1s_1.u1y();
    } else {
      tmp = $this.g1s_1.t1y();
    }
    return tmp;
  }
  function StreamingJsonDecoder(json, mode, lexer, descriptor, discriminatorHolder) {
    AbstractDecoder.call(this);
    this.e1s_1 = json;
    this.f1s_1 = mode;
    this.g1s_1 = lexer;
    this.h1s_1 = this.e1s_1.b1c();
    this.i1s_1 = -1;
    this.j1s_1 = discriminatorHolder;
    this.k1s_1 = this.e1s_1.y1r_1;
    this.l1s_1 = this.k1s_1.j1t_1 ? null : new JsonElementMarker(descriptor);
  }
  StreamingJsonDecoder.prototype.s1t = function () {
    return this.e1s_1;
  };
  StreamingJsonDecoder.prototype.v1y = function () {
    return this.g1s_1;
  };
  StreamingJsonDecoder.prototype.b1c = function () {
    return this.h1s_1;
  };
  StreamingJsonDecoder.prototype.t1t = function () {
    return (new JsonTreeReader(this.e1s_1.y1r_1, this.g1s_1)).d1x();
  };
  StreamingJsonDecoder.prototype.b1e = function (deserializer) {
    try {
      var tmp;
      if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
        tmp = true;
      } else {
        tmp = this.e1s_1.y1r_1.m1t_1;
      }
      if (tmp) {
        return deserializer.k1b(this);
      }
      var discriminator = classDiscriminator(deserializer.i1b(), this.e1s_1);
      var type = this.g1s_1.w1y(discriminator, this.k1s_1.g1t_1);
      var actualSerializer = null;
      if (!(type == null)) {
        actualSerializer = deserializer.y1b(this, type);
      }
      if (actualSerializer == null) {
        return decodeSerializableValuePolymorphic(this, isInterface(deserializer, DeserializationStrategy) ? deserializer : THROW_CCE());
      }
      this.j1s_1 = new DiscriminatorHolder(discriminator);
      var tmp_0 = actualSerializer.k1b(this);
      var result = isObject(tmp_0) ? tmp_0 : THROW_CCE();
      return result;
    } catch ($p) {
      if ($p instanceof MissingFieldException) {
        throw new MissingFieldException($p.c1c_1, plus($p.message, ' at path: ') + this.g1s_1.n1s_1.m1w(), $p);
      } else {
        throw $p;
      }
    }
  };
  StreamingJsonDecoder.prototype.c1e = function (descriptor) {
    var newMode = switchMode(this.e1s_1, descriptor);
    this.g1s_1.n1s_1.h1w(descriptor);
    this.g1s_1.n1y(newMode.z1y_1);
    checkLeadingComma(this);
    var tmp0_subject = newMode;
    var tmp0 = tmp0_subject.u4();
    var tmp;
    switch (tmp0) {
      case 1:
      case 2:
      case 3:
        tmp = new StreamingJsonDecoder(this.e1s_1, newMode, this.g1s_1, descriptor, this.j1s_1);
        break;
      default:
        var tmp_0;
        if (this.f1s_1.equals(newMode) ? this.e1s_1.y1r_1.j1t_1 : false) {
          tmp_0 = this;
        } else {
          tmp_0 = new StreamingJsonDecoder(this.e1s_1, newMode, this.g1s_1, descriptor, this.j1s_1);
        }

        tmp = tmp_0;
        break;
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.d1e = function (descriptor) {
    if (this.e1s_1.y1r_1.f1t_1 ? descriptor.l1c() === 0 : false) {
      skipLeftoverElements(this, descriptor);
    }
    this.g1s_1.n1y(this.f1s_1.a1z_1);
    this.g1s_1.n1s_1.l1w();
  };
  StreamingJsonDecoder.prototype.o1d = function () {
    var tmp;
    var tmp0_safe_receiver = this.l1s_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.z1v_1;
    if (!(tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs)) {
      tmp = this.g1s_1.p1y();
    } else {
      tmp = false;
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.p1d = function () {
    return null;
  };
  StreamingJsonDecoder.prototype.n1e = function (descriptor, index, deserializer, previousValue) {
    var isMapKey = this.f1s_1.equals(WriteMode_MAP_getInstance()) ? (index & 1) === 0 : false;
    if (isMapKey) {
      this.g1s_1.n1s_1.k1w();
    }
    var value = AbstractDecoder.prototype.n1e.call(this, descriptor, index, deserializer, previousValue);
    if (isMapKey) {
      this.g1s_1.n1s_1.j1w(value);
    }
    return value;
  };
  StreamingJsonDecoder.prototype.r1e = function (descriptor) {
    var tmp0_subject = this.f1s_1;
    var tmp0 = tmp0_subject.u4();
    {
      var index;
      switch (tmp0) {
        case 0:
          index = decodeObjectIndex(this, descriptor);
          break;
        case 2:
          index = decodeMapIndex(this);
          break;
        default:
          index = decodeListIndex(this);
          break;
      }
    }
    if (!this.f1s_1.equals(WriteMode_MAP_getInstance())) {
      this.g1s_1.n1s_1.i1w(index);
    }
    return index;
  };
  StreamingJsonDecoder.prototype.q1d = function () {
    var tmp;
    if (this.k1s_1.g1t_1) {
      tmp = this.g1s_1.c1z();
    } else {
      tmp = this.g1s_1.b1z();
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.r1d = function () {
    var value = this.g1s_1.d1z();
    if (!value.equals(toLong_0(value.jg()))) {
      var tmp = "Failed to parse byte for input '" + toString(value) + "'";
      this.g1s_1.a1w(tmp, 0, null, 6, null);
    }
    return value.jg();
  };
  StreamingJsonDecoder.prototype.s1d = function () {
    var value = this.g1s_1.d1z();
    if (!value.equals(toLong_0(value.kg()))) {
      var tmp = "Failed to parse short for input '" + toString(value) + "'";
      this.g1s_1.a1w(tmp, 0, null, 6, null);
    }
    return value.kg();
  };
  StreamingJsonDecoder.prototype.t1d = function () {
    var value = this.g1s_1.d1z();
    if (!value.equals(toLong_0(value.s5()))) {
      var tmp = "Failed to parse int for input '" + toString(value) + "'";
      this.g1s_1.a1w(tmp, 0, null, 6, null);
    }
    return value.s5();
  };
  StreamingJsonDecoder.prototype.u1d = function () {
    return this.g1s_1.d1z();
  };
  StreamingJsonDecoder.prototype.v1d = function () {
    var tmp$ret$4;
    $l$block: {
      var tmp0_parseString = this.g1s_1;
      var input = tmp0_parseString.c1x();
      try {
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            var tmp$ret$1;
            {
              var tmp0_unsafeCast = toDouble(input);
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0_unsafeCast;
              }
              tmp$ret$1 = tmp$ret$0;
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp$ret$4 = tmp$ret$3;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'float' for input '" + input + "'";
          tmp0_parseString.a1w(tmp, 0, null, 6, null);
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$4;
    var specialFp = this.e1s_1.y1r_1.o1t_1;
    if (specialFp ? true : isFinite(result))
      return result;
    throwInvalidFloatingPointDecoded(this.g1s_1, result);
  };
  StreamingJsonDecoder.prototype.w1d = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_parseString = this.g1s_1;
      var input = tmp0_parseString.c1x();
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = toDouble(input);
        }
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'double' for input '" + input + "'";
          tmp0_parseString.a1w(tmp, 0, null, 6, null);
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.e1s_1.y1r_1.o1t_1;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throwInvalidFloatingPointDecoded(this.g1s_1, result);
  };
  StreamingJsonDecoder.prototype.x1d = function () {
    var string = this.g1s_1.c1x();
    if (!(string.length === 1)) {
      var tmp = "Expected single char, but got '" + string + "'";
      this.g1s_1.a1w(tmp, 0, null, 6, null);
    }
    return charSequenceGet(string, 0);
  };
  StreamingJsonDecoder.prototype.y1d = function () {
    var tmp;
    if (this.k1s_1.g1t_1) {
      tmp = this.g1s_1.u1y();
    } else {
      tmp = this.g1s_1.b1x();
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.z1d = function (descriptor) {
    return get_isUnsignedNumber(descriptor) ? new JsonDecoderForUnsignedTypes(this.g1s_1, this.e1s_1) : AbstractDecoder.prototype.z1d.call(this, descriptor);
  };
  StreamingJsonDecoder.$metadata$ = classMeta('StreamingJsonDecoder', [JsonDecoder], undefined, undefined, undefined, AbstractDecoder.prototype);
  function parseString(_this__u8e3s4, expectedType, block) {
    var input = _this__u8e3s4.c1x();
    try {
      return block(input);
    } catch ($p) {
      if ($p instanceof IllegalArgumentException) {
        var tmp = "Failed to parse type '" + expectedType + "' for input '" + input + "'";
        _this__u8e3s4.a1w(tmp, 0, null, 6, null);
      } else {
        throw $p;
      }
    }
  }
  function JsonDecoderForUnsignedTypes(lexer, json) {
    AbstractDecoder.call(this);
    this.e1z_1 = lexer;
    this.f1z_1 = json.b1c();
  }
  JsonDecoderForUnsignedTypes.prototype.b1c = function () {
    return this.f1z_1;
  };
  JsonDecoderForUnsignedTypes.prototype.r1e = function (descriptor) {
    throw IllegalStateException_init_$Create$('unsupported');
  };
  JsonDecoderForUnsignedTypes.prototype.t1d = function () {
    var tmp$ret$2;
    $l$block: {
      var tmp0_parseString = this.e1z_1;
      var input = tmp0_parseString.c1x();
      try {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_toInt = toUInt(input);
            tmp$ret$0 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'UInt' for input '" + input + "'";
          tmp0_parseString.a1w(tmp, 0, null, 6, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.prototype.u1d = function () {
    var tmp$ret$2;
    $l$block: {
      var tmp0_parseString = this.e1z_1;
      var input = tmp0_parseString.c1x();
      try {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_toLong = toULong(input);
            tmp$ret$0 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'ULong' for input '" + input + "'";
          tmp0_parseString.a1w(tmp, 0, null, 6, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.prototype.r1d = function () {
    var tmp$ret$2;
    $l$block: {
      var tmp0_parseString = this.e1z_1;
      var input = tmp0_parseString.c1x();
      try {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_toByte = toUByte(input);
            tmp$ret$0 = _UByte___get_data__impl__jof9qr(tmp0_toByte);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'UByte' for input '" + input + "'";
          tmp0_parseString.a1w(tmp, 0, null, 6, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.prototype.s1d = function () {
    var tmp$ret$2;
    $l$block: {
      var tmp0_parseString = this.e1z_1;
      var input = tmp0_parseString.c1x();
      try {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_toShort = toUShort(input);
            tmp$ret$0 = _UShort___get_data__impl__g0245(tmp0_toShort);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'UShort' for input '" + input + "'";
          tmp0_parseString.a1w(tmp, 0, null, 6, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.$metadata$ = classMeta('JsonDecoderForUnsignedTypes', undefined, undefined, undefined, undefined, AbstractDecoder.prototype);
  function get_unsignedNumberDescriptors() {
    init_properties_StreamingJsonEncoder_kt_qkpchk();
    return unsignedNumberDescriptors;
  }
  var unsignedNumberDescriptors;
  function StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, $this) {
    StreamingJsonEncoder.call($this, Composer_0(output, json), json, mode, modeReuseCache);
    return $this;
  }
  function StreamingJsonEncoder_init_$Create$(output, json, mode, modeReuseCache) {
    return StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, Object.create(StreamingJsonEncoder.prototype));
  }
  function encodeTypeInfo($this, descriptor) {
    $this.n1w_1.b1v();
    $this.e1f(ensureNotNull($this.u1w_1));
    $this.n1w_1.d1v(get_COLON());
    $this.n1w_1.c1v();
    $this.e1f(descriptor.j1c());
  }
  function composerForUnsignedNumbers($this) {
    var tmp;
    var tmp_0 = $this.n1w_1;
    if (tmp_0 instanceof ComposerForUnsignedNumbers) {
      tmp = $this.n1w_1;
    } else {
      tmp = new ComposerForUnsignedNumbers($this.n1w_1.w1u_1, $this.t1w_1);
    }
    return tmp;
  }
  function StreamingJsonEncoder(composer, json, mode, modeReuseCache) {
    AbstractEncoder.call(this);
    this.n1w_1 = composer;
    this.o1w_1 = json;
    this.p1w_1 = mode;
    this.q1w_1 = modeReuseCache;
    this.r1w_1 = this.o1w_1.b1c();
    this.s1w_1 = this.o1w_1.y1r_1;
    this.t1w_1 = false;
    this.u1w_1 = null;
    var i = this.p1w_1.u4();
    if (!(this.q1w_1 == null)) {
      if (!(this.q1w_1[i] === null) ? true : !(this.q1w_1[i] === this))
        this.q1w_1[i] = this;
    }
  }
  StreamingJsonEncoder.prototype.s1t = function () {
    return this.o1w_1;
  };
  StreamingJsonEncoder.prototype.b1c = function () {
    return this.r1w_1;
  };
  StreamingJsonEncoder.prototype.v1f = function (descriptor, index) {
    return this.s1w_1.e1t_1;
  };
  StreamingJsonEncoder.prototype.q1f = function (serializer, value) {
    var tmp$ret$0;
    $l$block: {
      var tmp;
      if (!(serializer instanceof AbstractPolymorphicSerializer)) {
        tmp = true;
      } else {
        tmp = this.s1t().y1r_1.m1t_1;
      }
      if (tmp) {
        serializer.j1b(this, value);
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      }
      var casted = serializer instanceof AbstractPolymorphicSerializer ? serializer : THROW_CCE();
      var baseClassDiscriminator = classDiscriminator(serializer.i1b(), this.s1t());
      var actualSerializer = findPolymorphicSerializer(casted, this, isObject(value) ? value : THROW_CCE());
      validateIfSealed$accessor$1ad0flx(casted, actualSerializer, baseClassDiscriminator);
      checkKind(actualSerializer.i1b().n1c());
      {
        this.u1w_1 = baseClassDiscriminator;
      }
      actualSerializer.j1b(this, value);
    }
  };
  StreamingJsonEncoder.prototype.c1e = function (descriptor) {
    var newMode = switchMode(this.o1w_1, descriptor);
    if (!equals(new Char(newMode.z1y_1), new Char(get_INVALID()))) {
      this.n1w_1.d1v(newMode.z1y_1);
      this.n1w_1.z1u();
    }
    if (!(this.u1w_1 == null)) {
      encodeTypeInfo(this, descriptor);
      this.u1w_1 = null;
    }
    if (this.p1w_1.equals(newMode)) {
      return this;
    }
    var tmp0_safe_receiver = this.q1w_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver[newMode.u4()];
    return tmp1_elvis_lhs == null ? new StreamingJsonEncoder(this.n1w_1, this.o1w_1, newMode, this.q1w_1) : tmp1_elvis_lhs;
  };
  StreamingJsonEncoder.prototype.d1e = function (descriptor) {
    if (!equals(new Char(this.p1w_1.a1z_1), new Char(get_INVALID()))) {
      this.n1w_1.a1v();
      this.n1w_1.b1v();
      this.n1w_1.d1v(this.p1w_1.a1z_1);
    }
  };
  StreamingJsonEncoder.prototype.t1e = function (descriptor, index) {
    var tmp0_subject = this.p1w_1;
    var tmp0 = tmp0_subject.u4();
    switch (tmp0) {
      case 1:
        if (!this.n1w_1.x1u_1)
          this.n1w_1.d1v(get_COMMA());
        this.n1w_1.b1v();
        break;
      case 2:
        if (!this.n1w_1.x1u_1) {
          var tmp = this;
          var tmp_0;
          if ((index % 2 | 0) === 0) {
            this.n1w_1.d1v(get_COMMA());
            this.n1w_1.b1v();
            tmp_0 = true;
          } else {
            this.n1w_1.d1v(get_COLON());
            this.n1w_1.c1v();
            tmp_0 = false;
          }
          tmp.t1w_1 = tmp_0;
        } else {
          this.t1w_1 = true;
          this.n1w_1.b1v();
        }

        break;
      case 3:
        if (index === 0)
          this.t1w_1 = true;
        if (index === 1) {
          this.n1w_1.d1v(get_COMMA());
          this.n1w_1.c1v();
          this.t1w_1 = false;
        }

        break;
      default:
        if (!this.n1w_1.x1u_1)
          this.n1w_1.d1v(get_COMMA());
        this.n1w_1.b1v();
        this.e1f(descriptor.r1c(index));
        this.n1w_1.d1v(get_COLON());
        this.n1w_1.c1v();
        break;
    }
    return true;
  };
  StreamingJsonEncoder.prototype.r1f = function (descriptor, index, serializer, value) {
    if (!(value == null) ? true : this.s1w_1.j1t_1) {
      AbstractEncoder.prototype.r1f.call(this, descriptor, index, serializer, value);
    }
  };
  StreamingJsonEncoder.prototype.f1f = function (descriptor) {
    return get_isUnsignedNumber(descriptor) ? new StreamingJsonEncoder(composerForUnsignedNumbers(this), this.o1w_1, this.p1w_1, null) : AbstractEncoder.prototype.f1f.call(this, descriptor);
  };
  StreamingJsonEncoder.prototype.v1e = function () {
    this.n1w_1.f1v(get_NULL());
  };
  StreamingJsonEncoder.prototype.w1e = function (value) {
    if (this.t1w_1)
      this.e1f(value.toString());
    else
      this.n1w_1.o1v(value);
  };
  StreamingJsonEncoder.prototype.x1e = function (value) {
    if (this.t1w_1)
      this.e1f(value.toString());
    else
      this.n1w_1.j1v(value);
  };
  StreamingJsonEncoder.prototype.y1e = function (value) {
    if (this.t1w_1)
      this.e1f(value.toString());
    else
      this.n1w_1.l1v(value);
  };
  StreamingJsonEncoder.prototype.z1e = function (value) {
    if (this.t1w_1)
      this.e1f(value.toString());
    else
      this.n1w_1.m1v(value);
  };
  StreamingJsonEncoder.prototype.a1f = function (value) {
    if (this.t1w_1)
      this.e1f(value.toString());
    else
      this.n1w_1.n1v(value);
  };
  StreamingJsonEncoder.prototype.b1f = function (value) {
    if (this.t1w_1)
      this.e1f(value.toString());
    else
      this.n1w_1.h1v(value);
    if (!this.s1w_1.o1t_1 ? !isFinite(value) : false) {
      throw InvalidFloatingPointEncoded(value, toString(this.n1w_1.w1u_1));
    }
  };
  StreamingJsonEncoder.prototype.c1f = function (value) {
    if (this.t1w_1)
      this.e1f(value.toString());
    else
      this.n1w_1.i1v(value);
    if (!this.s1w_1.o1t_1 ? !isFinite_0(value) : false) {
      throw InvalidFloatingPointEncoded(value, toString(this.n1w_1.w1u_1));
    }
  };
  StreamingJsonEncoder.prototype.d1f = function (value) {
    this.e1f(toString_0(value));
  };
  StreamingJsonEncoder.prototype.e1f = function (value) {
    return this.n1w_1.p1v(value);
  };
  StreamingJsonEncoder.$metadata$ = classMeta('StreamingJsonEncoder', [JsonEncoder], undefined, undefined, undefined, AbstractEncoder.prototype);
  function get_isUnsignedNumber(_this__u8e3s4) {
    init_properties_StreamingJsonEncoder_kt_qkpchk();
    return _this__u8e3s4.m1c() ? get_unsignedNumberDescriptors().a1(_this__u8e3s4) : false;
  }
  var properties_initialized_StreamingJsonEncoder_kt_6ifwwk;
  function init_properties_StreamingJsonEncoder_kt_qkpchk() {
    if (properties_initialized_StreamingJsonEncoder_kt_6ifwwk) {
    } else {
      properties_initialized_StreamingJsonEncoder_kt_6ifwwk = true;
      unsignedNumberDescriptors = setOf([serializer_1(Companion_getInstance_1()).i1b(), serializer_0(Companion_getInstance()).i1b(), serializer_2(Companion_getInstance_2()).i1b(), serializer_3(Companion_getInstance_3()).i1b()]);
    }
  }
  function get_ESCAPE_STRINGS() {
    init_properties_StringOps_kt_g67jhv();
    return ESCAPE_STRINGS;
  }
  var ESCAPE_STRINGS;
  var ESCAPE_MARKERS;
  function toHexChar(i) {
    init_properties_StringOps_kt_g67jhv();
    var d = i & 15;
    var tmp;
    if (d < 10) {
      var tmp$ret$0;
      {
        tmp$ret$0 = 48;
      }
      tmp = numberToChar(d + tmp$ret$0 | 0);
    } else {
      var tmp_0 = d - 10 | 0;
      var tmp$ret$1;
      {
        tmp$ret$1 = 97;
      }
      tmp = numberToChar(tmp_0 + tmp$ret$1 | 0);
    }
    return tmp;
  }
  function printQuoted(_this__u8e3s4, value) {
    init_properties_StringOps_kt_g67jhv();
    _this__u8e3s4.v4(get_STRING());
    var lastPos = 0;
    var inductionVariable = 0;
    var last = charSequenceLength(value) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          var tmp0__get_code__88qj9g = charSequenceGet(value, i);
          tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
        }
        var c = tmp$ret$0;
        if (c < get_ESCAPE_STRINGS().length ? !(get_ESCAPE_STRINGS()[c] == null) : false) {
          _this__u8e3s4.af(value, lastPos, i);
          _this__u8e3s4.b6(get_ESCAPE_STRINGS()[c]);
          lastPos = i + 1 | 0;
        }
      }
       while (inductionVariable <= last);
    if (!(lastPos === 0)) {
      _this__u8e3s4.af(value, lastPos, value.length);
    } else {
      _this__u8e3s4.b6(value);
    }
    _this__u8e3s4.v4(get_STRING());
  }
  function toBooleanStrictOrNull(_this__u8e3s4) {
    init_properties_StringOps_kt_g67jhv();
    return equals_0(_this__u8e3s4, 'true', true) ? true : equals_0(_this__u8e3s4, 'false', true) ? false : null;
  }
  var properties_initialized_StringOps_kt_wzaea7;
  function init_properties_StringOps_kt_g67jhv() {
    if (properties_initialized_StringOps_kt_wzaea7) {
    } else {
      properties_initialized_StringOps_kt_wzaea7 = true;
      var tmp$ret$7;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = fillArrayVal(Array(93), null);
        }
        var tmp0_apply = tmp$ret$0;
        {
        }
        {
          var inductionVariable = 0;
          if (inductionVariable <= 31)
            do {
              var c = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var c1 = toHexChar(c >> 12);
              var c2 = toHexChar(c >> 8);
              var c3 = toHexChar(c >> 4);
              var c4 = toHexChar(c);
              tmp0_apply[c] = '\\u' + new Char(c1) + new Char(c2) + new Char(c3) + new Char(c4);
            }
             while (inductionVariable <= 31);
          var tmp$ret$1;
          {
            tmp$ret$1 = 34;
          }
          tmp0_apply[tmp$ret$1] = '\\"';
          var tmp$ret$2;
          {
            tmp$ret$2 = 92;
          }
          tmp0_apply[tmp$ret$2] = '\\\\';
          var tmp$ret$3;
          {
            tmp$ret$3 = 9;
          }
          tmp0_apply[tmp$ret$3] = '\\t';
          var tmp$ret$4;
          {
            tmp$ret$4 = 8;
          }
          tmp0_apply[tmp$ret$4] = '\\b';
          var tmp$ret$5;
          {
            tmp$ret$5 = 10;
          }
          tmp0_apply[tmp$ret$5] = '\\n';
          var tmp$ret$6;
          {
            tmp$ret$6 = 13;
          }
          tmp0_apply[tmp$ret$6] = '\\r';
          tmp0_apply[12] = '\\f';
        }
        tmp$ret$7 = tmp0_apply;
      }
      ESCAPE_STRINGS = tmp$ret$7;
      var tmp$ret$13;
      {
        var tmp0_apply_0 = new Int8Array(93);
        {
        }
        {
          var inductionVariable_0 = 0;
          if (inductionVariable_0 <= 31)
            do {
              var c_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              tmp0_apply_0[c_0] = 1;
            }
             while (inductionVariable_0 <= 31);
          var tmp$ret$0_0;
          {
            tmp$ret$0_0 = 34;
          }
          var tmp = tmp$ret$0_0;
          var tmp$ret$1_0;
          {
            tmp$ret$1_0 = 34;
          }
          tmp0_apply_0[tmp] = toByte(tmp$ret$1_0);
          var tmp$ret$2_0;
          {
            tmp$ret$2_0 = 92;
          }
          var tmp_0 = tmp$ret$2_0;
          var tmp$ret$3_0;
          {
            tmp$ret$3_0 = 92;
          }
          tmp0_apply_0[tmp_0] = toByte(tmp$ret$3_0);
          var tmp$ret$4_0;
          {
            tmp$ret$4_0 = 9;
          }
          var tmp_1 = tmp$ret$4_0;
          var tmp$ret$5_0;
          {
            tmp$ret$5_0 = 116;
          }
          tmp0_apply_0[tmp_1] = toByte(tmp$ret$5_0);
          var tmp$ret$6_0;
          {
            tmp$ret$6_0 = 8;
          }
          var tmp_2 = tmp$ret$6_0;
          var tmp$ret$7_0;
          {
            tmp$ret$7_0 = 98;
          }
          tmp0_apply_0[tmp_2] = toByte(tmp$ret$7_0);
          var tmp$ret$8;
          {
            tmp$ret$8 = 10;
          }
          var tmp_3 = tmp$ret$8;
          var tmp$ret$9;
          {
            tmp$ret$9 = 110;
          }
          tmp0_apply_0[tmp_3] = toByte(tmp$ret$9);
          var tmp$ret$10;
          {
            tmp$ret$10 = 13;
          }
          var tmp_4 = tmp$ret$10;
          var tmp$ret$11;
          {
            tmp$ret$11 = 114;
          }
          tmp0_apply_0[tmp_4] = toByte(tmp$ret$11);
          var tmp$ret$12;
          {
            tmp$ret$12 = 102;
          }
          tmp0_apply_0[12] = toByte(tmp$ret$12);
        }
        tmp$ret$13 = tmp0_apply_0;
      }
      ESCAPE_MARKERS = tmp$ret$13;
    }
  }
  function currentObject($this) {
    var tmp0_safe_receiver = $this.i1p();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = $this.l1z(tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? $this.l1() : tmp1_elvis_lhs;
  }
  function unparsedPrimitive($this, primitive) {
    throw JsonDecodingException_0(-1, "Failed to parse '" + primitive + "'", toString(currentObject($this)));
  }
  function asLiteral(_this__u8e3s4, $this, type) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonLiteral ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw JsonDecodingException_1(-1, "Unexpected 'null' when " + type + ' was expected');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function AbstractJsonTreeDecoder(json, value) {
    NamedValueDecoder.call(this);
    this.i1z_1 = json;
    this.j1z_1 = value;
    this.k1z_1 = this.s1t().y1r_1;
  }
  AbstractJsonTreeDecoder.prototype.s1t = function () {
    return this.i1z_1;
  };
  AbstractJsonTreeDecoder.prototype.l1 = function () {
    return this.j1z_1;
  };
  AbstractJsonTreeDecoder.prototype.b1c = function () {
    return this.s1t().b1c();
  };
  AbstractJsonTreeDecoder.prototype.b1s = function () {
    return this.k1z_1;
  };
  AbstractJsonTreeDecoder.prototype.t1t = function () {
    return currentObject(this);
  };
  AbstractJsonTreeDecoder.prototype.b1e = function (deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  };
  AbstractJsonTreeDecoder.prototype.j1p = function (parentName, childName) {
    return childName;
  };
  AbstractJsonTreeDecoder.prototype.c1e = function (descriptor) {
    var currentObject_0 = currentObject(this);
    var tmp0_subject = descriptor.n1c();
    var tmp;
    var tmp_0;
    if (equals(tmp0_subject, LIST_getInstance())) {
      tmp_0 = true;
    } else {
      tmp_0 = tmp0_subject instanceof PolymorphicKind;
    }
    if (tmp_0) {
      var tmp_1 = this.s1t();
      var tmp$ret$0;
      {
        if (!(currentObject_0 instanceof JsonArray)) {
          throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonArray) + ' as the serialized body of ' + descriptor.j1c() + ', but had ' + getKClassFromExpression(currentObject_0));
        }
        tmp$ret$0 = currentObject_0;
      }
      tmp = new JsonTreeListDecoder(tmp_1, tmp$ret$0);
    } else {
      if (equals(tmp0_subject, MAP_getInstance())) {
        var tmp$ret$5;
        {
          var tmp0_selectMapMode = this.s1t();
          var keyDescriptor = carrierDescriptor(descriptor.p1c(0), tmp0_selectMapMode.b1c());
          var keyKind = keyDescriptor.n1c();
          var tmp_2;
          var tmp_3;
          if (keyKind instanceof PrimitiveKind) {
            tmp_3 = true;
          } else {
            tmp_3 = equals(keyKind, ENUM_getInstance());
          }
          if (tmp_3) {
            var tmp$ret$2;
            {
              var tmp_4 = this.s1t();
              var tmp$ret$1;
              {
                if (!(currentObject_0 instanceof JsonObject)) {
                  throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + descriptor.j1c() + ', but had ' + getKClassFromExpression(currentObject_0));
                }
                tmp$ret$1 = currentObject_0;
              }
              tmp$ret$2 = new JsonTreeMapDecoder(tmp_4, tmp$ret$1);
            }
            tmp_2 = tmp$ret$2;
          } else {
            if (tmp0_selectMapMode.y1r_1.h1t_1) {
              var tmp$ret$4;
              {
                var tmp_5 = this.s1t();
                var tmp$ret$3;
                {
                  if (!(currentObject_0 instanceof JsonArray)) {
                    throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonArray) + ' as the serialized body of ' + descriptor.j1c() + ', but had ' + getKClassFromExpression(currentObject_0));
                  }
                  tmp$ret$3 = currentObject_0;
                }
                tmp$ret$4 = new JsonTreeListDecoder(tmp_5, tmp$ret$3);
              }
              tmp_2 = tmp$ret$4;
            } else {
              throw InvalidKeyKindException(keyDescriptor);
            }
          }
          tmp$ret$5 = tmp_2;
        }
        tmp = tmp$ret$5;
      } else {
        var tmp_6 = this.s1t();
        var tmp$ret$6;
        {
          if (!(currentObject_0 instanceof JsonObject)) {
            throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + descriptor.j1c() + ', but had ' + getKClassFromExpression(currentObject_0));
          }
          tmp$ret$6 = currentObject_0;
        }
        var tmp_7 = tmp$ret$6;
        tmp = JsonTreeDecoder_init_$Create$(tmp_6, tmp_7, null, null, 12, null);
      }
    }
    return tmp;
  };
  AbstractJsonTreeDecoder.prototype.d1e = function (descriptor) {
  };
  AbstractJsonTreeDecoder.prototype.o1d = function () {
    var tmp = currentObject(this);
    return !(tmp instanceof JsonNull);
  };
  AbstractJsonTreeDecoder.prototype.m1z = function (tag) {
    var currentElement = this.l1z(tag);
    var tmp0_elvis_lhs = currentElement instanceof JsonPrimitive ? currentElement : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw JsonDecodingException_0(-1, 'Expected JsonPrimitive at ' + tag + ', found ' + currentElement, toString(currentObject(this)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  AbstractJsonTreeDecoder.prototype.n1z = function (tag) {
    return !(this.l1z(tag) === JsonNull_getInstance());
  };
  AbstractJsonTreeDecoder.prototype.l1p = function (tag) {
    return this.n1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.o1z = function (tag) {
    var value = this.m1z(tag);
    if (!this.s1t().y1r_1.g1t_1) {
      var literal = asLiteral(value, this, 'boolean');
      if (literal.a1u_1)
        throw JsonDecodingException_0(-1, "Boolean literal for key '" + tag + "' should be unquoted.\n" + get_lenientHint(), toString(currentObject(this)));
    }
    var tmp$ret$1;
    $l$block: {
      try {
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = get_booleanOrNull(value);
          var tmp;
          if (tmp0_elvis_lhs == null) {
            throw IllegalArgumentException_init_$Create$_0();
          } else {
            tmp = tmp0_elvis_lhs;
          }
          tmp$ret$0 = tmp;
        }
        var tmp0_elvis_lhs_0 = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs_0 == null) {
          unparsedPrimitive(this, 'boolean');
        } else {
          tmp_0 = tmp0_elvis_lhs_0;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'boolean');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.m1p = function (tag) {
    return this.o1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.p1z = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.m1z(tag);
      try {
        var tmp$ret$0;
        {
          var result = get_int(tmp0_primitive);
          var tmp;
          var containsLower = ByteCompanionObject_getInstance().c9_1;
          if (result <= ByteCompanionObject_getInstance().d9_1 ? containsLower <= result : false) {
            tmp = toByte(result);
          } else {
            tmp = null;
          }
          tmp$ret$0 = tmp;
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'byte');
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'byte');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.n1p = function (tag) {
    return this.p1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.q1z = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.m1z(tag);
      try {
        var tmp$ret$0;
        {
          var result = get_int(tmp0_primitive);
          var tmp;
          var containsLower = ShortCompanionObject_getInstance().k9_1;
          if (result <= ShortCompanionObject_getInstance().l9_1 ? containsLower <= result : false) {
            tmp = toShort(result);
          } else {
            tmp = null;
          }
          tmp$ret$0 = tmp;
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'short');
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'short');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.o1p = function (tag) {
    return this.q1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.r1z = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.m1z(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_int(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'int');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'int');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.p1p = function (tag) {
    return this.r1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.s1z = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.m1z(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_long(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'long');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'long');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.q1p = function (tag) {
    return this.s1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.t1z = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.m1z(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_float(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'float');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'float');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.s1t().y1r_1.o1t_1;
    if (specialFp ? true : isFinite(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
  };
  AbstractJsonTreeDecoder.prototype.r1p = function (tag) {
    return this.t1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.u1z = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.m1z(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_double(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'double');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'double');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.s1t().y1r_1.o1t_1;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
  };
  AbstractJsonTreeDecoder.prototype.s1p = function (tag) {
    return this.u1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.v1z = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.m1z(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = single(tmp0_primitive.z1t());
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        var tmp_0 = tmp0_elvis_lhs;
        if ((tmp_0 == null ? null : new Char(tmp_0)) == null) {
          unparsedPrimitive(this, 'char');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'char');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.t1p = function (tag) {
    return this.v1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.w1z = function (tag) {
    var value = this.m1z(tag);
    if (!this.s1t().y1r_1.g1t_1) {
      var literal = asLiteral(value, this, 'string');
      if (!literal.a1u_1)
        throw JsonDecodingException_0(-1, "String literal for key '" + tag + "' should be quoted.\n" + get_lenientHint(), toString(currentObject(this)));
    }
    if (value instanceof JsonNull)
      throw JsonDecodingException_0(-1, "Unexpected 'null' value instead of string literal", toString(currentObject(this)));
    return value.z1t();
  };
  AbstractJsonTreeDecoder.prototype.u1p = function (tag) {
    return this.w1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.x1z = function (tag, inlineDescriptor) {
    return get_isUnsignedNumber(inlineDescriptor) ? new JsonDecoderForUnsignedTypes(new StringJsonLexer(this.m1z(tag).z1t()), this.s1t()) : NamedValueDecoder.prototype.v1p.call(this, tag, inlineDescriptor);
  };
  AbstractJsonTreeDecoder.prototype.v1p = function (tag, inlineDescriptor) {
    return this.x1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
  };
  AbstractJsonTreeDecoder.$metadata$ = classMeta('AbstractJsonTreeDecoder', [JsonDecoder], undefined, undefined, undefined, NamedValueDecoder.prototype);
  function JsonTreeDecoder_init_$Init$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      polyDiscriminator = null;
    if (!(($mask0 & 8) === 0))
      polyDescriptor = null;
    JsonTreeDecoder.call($this, json, value, polyDiscriminator, polyDescriptor);
    return $this;
  }
  function JsonTreeDecoder_init_$Create$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker) {
    return JsonTreeDecoder_init_$Init$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker, Object.create(JsonTreeDecoder.prototype));
  }
  function coerceInputValue_0($this, descriptor, index, tag) {
    var tmp$ret$1;
    $l$block_1: {
      var tmp0_tryCoerceValue = $this.s1t();
      var tmp1_tryCoerceValue = descriptor.p1c(index);
      var tmp;
      if (!tmp1_tryCoerceValue.f1c()) {
        var tmp$ret$0;
        {
          var tmp_0 = $this.l1z(tag);
          tmp$ret$0 = tmp_0 instanceof JsonNull;
        }
        tmp = tmp$ret$0;
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$1 = true;
        break $l$block_1;
      }
      if (equals(tmp1_tryCoerceValue.n1c(), ENUM_getInstance())) {
        var tmp$ret$2;
        {
          var tmp_1 = $this.l1z(tag);
          var tmp0_safe_receiver = tmp_1 instanceof JsonPrimitive ? tmp_1 : null;
          tmp$ret$2 = tmp0_safe_receiver == null ? null : get_contentOrNull(tmp0_safe_receiver);
        }
        var tmp0_elvis_lhs = tmp$ret$2;
        var tmp_2;
        if (tmp0_elvis_lhs == null) {
          tmp$ret$1 = false;
          break $l$block_1;
        } else {
          tmp_2 = tmp0_elvis_lhs;
        }
        var enumValue = tmp_2;
        var enumIndex = getJsonNameIndex(tmp1_tryCoerceValue, tmp0_tryCoerceValue, enumValue);
        Companion_getInstance_0();
        if (enumIndex === -3) {
          var tmp$ret$3;
          {
            tmp$ret$3 = Unit_getInstance();
          }
          tmp$ret$1 = true;
          break $l$block_1;
        }
      }
      tmp$ret$1 = false;
    }
    return tmp$ret$1;
  }
  function absenceIsNull($this, descriptor, index) {
    $this.h20_1 = (!$this.s1t().y1r_1.j1t_1 ? !descriptor.s1c(index) : false) ? descriptor.p1c(index).f1c() : false;
    return $this.h20_1;
  }
  function buildAlternativeNamesMap$ref_0($boundThis) {
    var l = function () {
      return buildAlternativeNamesMap($boundThis);
    };
    l.callableName = 'buildAlternativeNamesMap';
    return l;
  }
  function JsonTreeDecoder(json, value, polyDiscriminator, polyDescriptor) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.d20_1 = value;
    this.e20_1 = polyDiscriminator;
    this.f20_1 = polyDescriptor;
    this.g20_1 = 0;
    this.h20_1 = false;
  }
  JsonTreeDecoder.prototype.l1 = function () {
    return this.d20_1;
  };
  JsonTreeDecoder.prototype.r1e = function (descriptor) {
    while (this.g20_1 < descriptor.l1c()) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.g20_1;
      tmp0_this.g20_1 = tmp1 + 1 | 0;
      var name = this.d1p(descriptor, tmp1);
      var index = this.g20_1 - 1 | 0;
      this.h20_1 = false;
      var tmp;
      var tmp_0;
      var tmp$ret$1;
      {
        var tmp0_contains = this.l1();
        var tmp$ret$0;
        {
          tmp$ret$0 = (isInterface(tmp0_contains, Map) ? tmp0_contains : THROW_CCE()).s1(name);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      if (tmp$ret$1) {
        tmp_0 = true;
      } else {
        tmp_0 = absenceIsNull(this, descriptor, index);
      }
      if (tmp_0) {
        tmp = !this.b1s().l1t_1 ? true : !coerceInputValue_0(this, descriptor, index, name);
      } else {
        tmp = false;
      }
      if (tmp) {
        return index;
      }
    }
    Companion_getInstance_0();
    return -1;
  };
  JsonTreeDecoder.prototype.o1d = function () {
    return !this.h20_1 ? AbstractJsonTreeDecoder.prototype.o1d.call(this) : false;
  };
  JsonTreeDecoder.prototype.e1p = function (desc, index) {
    var mainName = desc.r1c(index);
    if (!this.b1s().p1t_1)
      return mainName;
    if (this.l1().w1().a1(mainName))
      return mainName;
    var tmp = get_schemaCache(this.s1t());
    var tmp_0 = get_JsonAlternativeNamesKey();
    var alternativeNamesMap = tmp.c1w(desc, tmp_0, buildAlternativeNamesMap$ref_0(desc));
    var tmp$ret$2;
    {
      var tmp0_find = this.l1().w1();
      var tmp$ret$1;
      $l$block: {
        var tmp0_iterator = tmp0_find.d();
        while (tmp0_iterator.e()) {
          var element = tmp0_iterator.f();
          var tmp$ret$0;
          {
            tmp$ret$0 = alternativeNamesMap.v1(element) === index;
          }
          if (tmp$ret$0) {
            tmp$ret$1 = element;
            break $l$block;
          }
        }
        tmp$ret$1 = null;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var nameInObject = tmp$ret$2;
    var tmp0_elvis_lhs = nameInObject;
    return tmp0_elvis_lhs == null ? mainName : tmp0_elvis_lhs;
  };
  JsonTreeDecoder.prototype.l1z = function (tag) {
    return getValue(this.l1(), tag);
  };
  JsonTreeDecoder.prototype.c1e = function (descriptor) {
    if (descriptor === this.f20_1)
      return this;
    return AbstractJsonTreeDecoder.prototype.c1e.call(this, descriptor);
  };
  JsonTreeDecoder.prototype.d1e = function (descriptor) {
    var tmp;
    if (this.b1s().f1t_1) {
      tmp = true;
    } else {
      var tmp_0 = descriptor.n1c();
      tmp = tmp_0 instanceof PolymorphicKind;
    }
    if (tmp)
      return Unit_getInstance();
    var tmp_1;
    if (!this.b1s().p1t_1) {
      tmp_1 = jsonCachedSerialNames(descriptor);
    } else {
      var tmp_2 = jsonCachedSerialNames(descriptor);
      var tmp$ret$0;
      {
        var tmp0_safe_receiver = get_schemaCache(this.s1t()).l1y(descriptor, get_JsonAlternativeNamesKey());
        var tmp0_orEmpty = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.w1();
        var tmp0_elvis_lhs = tmp0_orEmpty;
        tmp$ret$0 = tmp0_elvis_lhs == null ? emptySet() : tmp0_elvis_lhs;
      }
      tmp_1 = plus_0(tmp_2, tmp$ret$0);
    }
    var names = tmp_1;
    var tmp1_iterator = this.l1().w1().d();
    while (tmp1_iterator.e()) {
      var key = tmp1_iterator.f();
      if (!names.a1(key) ? !(key === this.e20_1) : false) {
        throw UnknownKeyException(key, this.l1().toString());
      }
    }
  };
  JsonTreeDecoder.$metadata$ = classMeta('JsonTreeDecoder', undefined, undefined, undefined, undefined, AbstractJsonTreeDecoder.prototype);
  function JsonTreeListDecoder(json, value) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.n20_1 = value;
    this.o20_1 = this.n20_1.g();
    this.p20_1 = -1;
  }
  JsonTreeListDecoder.prototype.l1 = function () {
    return this.n20_1;
  };
  JsonTreeListDecoder.prototype.e1p = function (desc, index) {
    return index.toString();
  };
  JsonTreeListDecoder.prototype.l1z = function (tag) {
    return this.n20_1.h(toInt(tag));
  };
  JsonTreeListDecoder.prototype.r1e = function (descriptor) {
    while (this.p20_1 < (this.o20_1 - 1 | 0)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.p20_1;
      tmp0_this.p20_1 = tmp1 + 1 | 0;
      return this.p20_1;
    }
    Companion_getInstance_0();
    return -1;
  };
  JsonTreeListDecoder.$metadata$ = classMeta('JsonTreeListDecoder', undefined, undefined, undefined, undefined, AbstractJsonTreeDecoder.prototype);
  function JsonTreeMapDecoder(json, value) {
    JsonTreeDecoder_init_$Init$(json, value, null, null, 12, null, this);
    this.a21_1 = value;
    this.b21_1 = toList(this.a21_1.w1());
    this.c21_1 = imul(this.b21_1.g(), 2);
    this.d21_1 = -1;
  }
  JsonTreeMapDecoder.prototype.l1 = function () {
    return this.a21_1;
  };
  JsonTreeMapDecoder.prototype.e1p = function (desc, index) {
    var i = index / 2 | 0;
    return this.b21_1.h(i);
  };
  JsonTreeMapDecoder.prototype.r1e = function (descriptor) {
    while (this.d21_1 < (this.c21_1 - 1 | 0)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.d21_1;
      tmp0_this.d21_1 = tmp1 + 1 | 0;
      return this.d21_1;
    }
    Companion_getInstance_0();
    return -1;
  };
  JsonTreeMapDecoder.prototype.l1z = function (tag) {
    return (this.d21_1 % 2 | 0) === 0 ? JsonPrimitive_0(tag) : getValue(this.a21_1, tag);
  };
  JsonTreeMapDecoder.prototype.d1e = function (descriptor) {
  };
  JsonTreeMapDecoder.$metadata$ = classMeta('JsonTreeMapDecoder', undefined, undefined, undefined, undefined, JsonTreeDecoder.prototype);
  function readPolymorphicJson(_this__u8e3s4, discriminator, element, deserializer) {
    return (new JsonTreeDecoder(_this__u8e3s4, element, discriminator, deserializer.i1b())).b1e(deserializer);
  }
  var WriteMode_OBJ_instance;
  var WriteMode_LIST_instance;
  var WriteMode_MAP_instance;
  var WriteMode_POLY_OBJ_instance;
  function values() {
    return [WriteMode_OBJ_getInstance(), WriteMode_LIST_getInstance(), WriteMode_MAP_getInstance(), WriteMode_POLY_OBJ_getInstance()];
  }
  var WriteMode_entriesInitialized;
  function WriteMode_initEntries() {
    if (WriteMode_entriesInitialized)
      return Unit_getInstance();
    WriteMode_entriesInitialized = true;
    WriteMode_OBJ_instance = new WriteMode('OBJ', 0, get_BEGIN_OBJ(), get_END_OBJ());
    WriteMode_LIST_instance = new WriteMode('LIST', 1, get_BEGIN_LIST(), get_END_LIST());
    WriteMode_MAP_instance = new WriteMode('MAP', 2, get_BEGIN_OBJ(), get_END_OBJ());
    WriteMode_POLY_OBJ_instance = new WriteMode('POLY_OBJ', 3, get_BEGIN_LIST(), get_END_LIST());
  }
  function WriteMode(name, ordinal, begin, end) {
    Enum.call(this, name, ordinal);
    this.z1y_1 = begin;
    this.a1z_1 = end;
  }
  WriteMode.$metadata$ = classMeta('WriteMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function switchMode(_this__u8e3s4, desc) {
    var tmp0_subject = desc.n1c();
    var tmp;
    if (tmp0_subject instanceof PolymorphicKind) {
      tmp = WriteMode_POLY_OBJ_getInstance();
    } else {
      if (equals(tmp0_subject, LIST_getInstance())) {
        tmp = WriteMode_LIST_getInstance();
      } else {
        if (equals(tmp0_subject, MAP_getInstance())) {
          var tmp$ret$2;
          {
            var keyDescriptor = carrierDescriptor(desc.p1c(0), _this__u8e3s4.b1c());
            var keyKind = keyDescriptor.n1c();
            var tmp_0;
            var tmp_1;
            if (keyKind instanceof PrimitiveKind) {
              tmp_1 = true;
            } else {
              tmp_1 = equals(keyKind, ENUM_getInstance());
            }
            if (tmp_1) {
              var tmp$ret$0;
              {
                tmp$ret$0 = WriteMode_MAP_getInstance();
              }
              tmp_0 = tmp$ret$0;
            } else {
              if (_this__u8e3s4.y1r_1.h1t_1) {
                var tmp$ret$1;
                {
                  tmp$ret$1 = WriteMode_LIST_getInstance();
                }
                tmp_0 = tmp$ret$1;
              } else {
                throw InvalidKeyKindException(keyDescriptor);
              }
            }
            tmp$ret$2 = tmp_0;
          }
          tmp = tmp$ret$2;
        } else {
          tmp = WriteMode_OBJ_getInstance();
        }
      }
    }
    return tmp;
  }
  function selectMapMode(_this__u8e3s4, mapDescriptor, ifMap, ifList) {
    var keyDescriptor = carrierDescriptor(mapDescriptor.p1c(0), _this__u8e3s4.b1c());
    var keyKind = keyDescriptor.n1c();
    var tmp;
    var tmp_0;
    if (keyKind instanceof PrimitiveKind) {
      tmp_0 = true;
    } else {
      tmp_0 = equals(keyKind, ENUM_getInstance());
    }
    if (tmp_0) {
      tmp = ifMap();
    } else {
      if (_this__u8e3s4.y1r_1.h1t_1) {
        tmp = ifList();
      } else {
        throw InvalidKeyKindException(keyDescriptor);
      }
    }
    return tmp;
  }
  function carrierDescriptor(_this__u8e3s4, module_0) {
    var tmp;
    if (equals(_this__u8e3s4.n1c(), CONTEXTUAL_getInstance())) {
      var tmp0_safe_receiver = getContextualDescriptor(module_0, _this__u8e3s4);
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : carrierDescriptor(tmp0_safe_receiver, module_0);
      tmp = tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
    } else if (_this__u8e3s4.m1c()) {
      tmp = carrierDescriptor(_this__u8e3s4.p1c(0), module_0);
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function WriteMode_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_OBJ_instance;
  }
  function WriteMode_LIST_getInstance() {
    WriteMode_initEntries();
    return WriteMode_LIST_instance;
  }
  function WriteMode_MAP_getInstance() {
    WriteMode_initEntries();
    return WriteMode_MAP_instance;
  }
  function WriteMode_POLY_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_POLY_OBJ_instance;
  }
  function appendEscape($this, lastPosition, current) {
    $this.e21(lastPosition, current);
    return appendEsc($this, current + 1 | 0);
  }
  function decodedString($this, lastPosition, currentPosition) {
    $this.e21(lastPosition, currentPosition);
    var result = $this.p1s_1.toString();
    $this.p1s_1.bf(0);
    return result;
  }
  function takePeeked($this) {
    var tmp$ret$0;
    {
      var tmp0_also = ensureNotNull($this.o1s_1);
      {
      }
      {
        $this.o1s_1 = null;
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  }
  function wasUnquotedString($this) {
    return !equals(new Char(charSequenceGet($this.f21(), $this.m1s_1 - 1 | 0)), new Char(_Char___init__impl__6a9atx(34)));
  }
  function appendEsc($this, startPosition) {
    var currentPosition = startPosition;
    currentPosition = $this.g21(currentPosition);
    if (currentPosition === -1) {
      $this.a1w('Expected escape sequence to continue, got EOF', 0, null, 6, null);
    }
    var tmp = $this.f21();
    var tmp0 = currentPosition;
    currentPosition = tmp0 + 1 | 0;
    var currentChar = charSequenceGet(tmp, tmp0);
    if (equals(new Char(currentChar), new Char(_Char___init__impl__6a9atx(117)))) {
      return appendHex($this, $this.f21(), currentPosition);
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(currentChar);
    }
    var c = escapeToChar(tmp$ret$0);
    if (equals(new Char(c), new Char(_Char___init__impl__6a9atx(0)))) {
      var tmp_0 = "Invalid escaped char '" + new Char(currentChar) + "'";
      $this.a1w(tmp_0, 0, null, 6, null);
    }
    $this.p1s_1.v4(c);
    return currentPosition;
  }
  function appendHex($this, source, startPos) {
    if ((startPos + 4 | 0) >= charSequenceLength(source)) {
      $this.m1s_1 = startPos;
      $this.h21();
      if (($this.m1s_1 + 4 | 0) >= charSequenceLength(source)) {
        $this.a1w('Unexpected EOF during unicode escape', 0, null, 6, null);
      }
      return appendHex($this, source, $this.m1s_1);
    }
    $this.p1s_1.v4(numberToChar((((fromHexChar($this, source, startPos) << 12) + (fromHexChar($this, source, startPos + 1 | 0) << 8) | 0) + (fromHexChar($this, source, startPos + 2 | 0) << 4) | 0) + fromHexChar($this, source, startPos + 3 | 0) | 0));
    return startPos + 4 | 0;
  }
  function fromHexChar($this, source, currentPosition) {
    var character = charSequenceGet(source, currentPosition);
    var tmp;
    if (_Char___init__impl__6a9atx(48) <= character ? character <= _Char___init__impl__6a9atx(57) : false) {
      var tmp$ret$0;
      {
        tmp$ret$0 = Char__toInt_impl_vasixd(character);
      }
      var tmp_0 = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = 48;
      }
      tmp = tmp_0 - tmp$ret$1 | 0;
    } else if (_Char___init__impl__6a9atx(97) <= character ? character <= _Char___init__impl__6a9atx(102) : false) {
      var tmp$ret$2;
      {
        tmp$ret$2 = Char__toInt_impl_vasixd(character);
      }
      var tmp_1 = tmp$ret$2;
      var tmp$ret$3;
      {
        tmp$ret$3 = 97;
      }
      tmp = (tmp_1 - tmp$ret$3 | 0) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65) <= character ? character <= _Char___init__impl__6a9atx(70) : false) {
      var tmp$ret$4;
      {
        tmp$ret$4 = Char__toInt_impl_vasixd(character);
      }
      var tmp_2 = tmp$ret$4;
      var tmp$ret$5;
      {
        tmp$ret$5 = 65;
      }
      tmp = (tmp_2 - tmp$ret$5 | 0) + 10 | 0;
    } else {
      var tmp_3 = "Invalid toHexChar char '" + new Char(character) + "' in unicode escape";
      $this.a1w(tmp_3, 0, null, 6, null);
    }
    return tmp;
  }
  function consumeBoolean($this, start) {
    var current = $this.g21(start);
    if (current >= charSequenceLength($this.f21()) ? true : current === -1) {
      $this.a1w('EOF', 0, null, 6, null);
    }
    var tmp$ret$0;
    {
      var tmp = $this.f21();
      var tmp0 = current;
      current = tmp0 + 1 | 0;
      var tmp0__get_code__88qj9g = charSequenceGet(tmp, tmp0);
      tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
    }
    var tmp1_subject = tmp$ret$0 | 32;
    var tmp_0;
    var tmp$ret$1;
    {
      tmp$ret$1 = 116;
    }
    if (tmp1_subject === tmp$ret$1) {
      consumeBooleanLiteral($this, 'rue', current);
      tmp_0 = true;
    } else {
      var tmp$ret$2;
      {
        tmp$ret$2 = 102;
      }
      if (tmp1_subject === tmp$ret$2) {
        consumeBooleanLiteral($this, 'alse', current);
        tmp_0 = false;
      } else {
        var tmp_1 = "Expected valid boolean literal prefix, but had '" + $this.c1x() + "'";
        $this.a1w(tmp_1, 0, null, 6, null);
      }
    }
    return tmp_0;
  }
  function consumeBooleanLiteral($this, literalSuffix, current) {
    if ((charSequenceLength($this.f21()) - current | 0) < literalSuffix.length) {
      $this.a1w('Unexpected end of boolean literal', 0, null, 6, null);
    }
    var inductionVariable = 0;
    var last = charSequenceLength(literalSuffix) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var expected = charSequenceGet(literalSuffix, i);
        var actual = charSequenceGet($this.f21(), current + i | 0);
        var tmp$ret$0;
        {
          tmp$ret$0 = Char__toInt_impl_vasixd(expected);
        }
        var tmp = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = Char__toInt_impl_vasixd(actual);
        }
        if (!(tmp === (tmp$ret$1 | 32))) {
          var tmp_0 = "Expected valid boolean literal prefix, but had '" + $this.c1x() + "'";
          $this.a1w(tmp_0, 0, null, 6, null);
        }
      }
       while (inductionVariable <= last);
    $this.m1s_1 = current + literalSuffix.length | 0;
  }
  function AbstractJsonLexer() {
    this.m1s_1 = 0;
    this.n1s_1 = new JsonPath();
    this.o1s_1 = null;
    this.p1s_1 = StringBuilder_init_$Create$();
  }
  AbstractJsonLexer.prototype.i21 = function (_set____db54di) {
    this.m1s_1 = _set____db54di;
  };
  AbstractJsonLexer.prototype.j21 = function () {
    return this.m1s_1;
  };
  AbstractJsonLexer.prototype.h21 = function () {
  };
  AbstractJsonLexer.prototype.k21 = function (c) {
    var tmp0_subject = c;
    return (((equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(125))) ? true : equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(93)))) ? true : equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(58)))) ? true : equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(44)))) ? false : true;
  };
  AbstractJsonLexer.prototype.q1s = function () {
    var nextToken = this.e1x();
    if (!(nextToken === 10)) {
      var tmp = 'Expected EOF after parsing, but had ' + new Char(charSequenceGet(this.f21(), this.m1s_1 - 1 | 0)) + ' instead';
      this.a1w(tmp, 0, null, 6, null);
    }
  };
  AbstractJsonLexer.prototype.y1w = function (expected) {
    var token = this.e1x();
    if (!(token === expected)) {
      this.l21(expected);
    }
    return token;
  };
  AbstractJsonLexer.prototype.n1y = function (expected) {
    this.h21();
    var source = this.f21();
    var cpos = this.m1s_1;
    $l$loop_0: while (true) {
      cpos = this.g21(cpos);
      if (cpos === -1)
        break $l$loop_0;
      var tmp0 = cpos;
      cpos = tmp0 + 1 | 0;
      var c = charSequenceGet(source, tmp0);
      if (((equals(new Char(c), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(9))))
        continue $l$loop_0;
      this.m1s_1 = cpos;
      if (equals(new Char(c), new Char(expected)))
        return Unit_getInstance();
      this.m21(expected);
    }
    this.m1s_1 = cpos;
    this.m21(expected);
  };
  AbstractJsonLexer.prototype.m21 = function (expected) {
    var tmp0_this = this;
    tmp0_this.m1s_1 = tmp0_this.m1s_1 - 1 | 0;
    if ((this.m1s_1 >= 0 ? equals(new Char(expected), new Char(_Char___init__impl__6a9atx(34))) : false) ? this.c1x() === 'null' : false) {
      this.n21("Expected string literal but 'null' literal was found", this.m1s_1 - 4 | 0, "Use 'coerceInputValues = true' in 'Json {}` builder to coerce nulls to default values.");
    }
    this.l21(charToTokenClass(expected));
  };
  AbstractJsonLexer.prototype.l21 = function (expectedToken) {
    var tmp0_subject = expectedToken;
    var expected = tmp0_subject === 1 ? "quotation mark '\"'" : tmp0_subject === 4 ? "comma ','" : tmp0_subject === 5 ? "colon ':'" : tmp0_subject === 6 ? "start of the object '{'" : tmp0_subject === 7 ? "end of the object '}'" : tmp0_subject === 8 ? "start of the array '['" : tmp0_subject === 9 ? "end of the array ']'" : 'valid token';
    var s = (this.m1s_1 === charSequenceLength(this.f21()) ? true : this.m1s_1 <= 0) ? 'EOF' : toString_0(charSequenceGet(this.f21(), this.m1s_1 - 1 | 0));
    var tmp = 'Expected ' + expected + ", but had '" + s + "' instead";
    var tmp_0 = this.m1s_1 - 1 | 0;
    this.a1w(tmp, tmp_0, null, 4, null);
  };
  AbstractJsonLexer.prototype.z1w = function () {
    var source = this.f21();
    var cpos = this.m1s_1;
    $l$loop_0: while (true) {
      cpos = this.g21(cpos);
      if (cpos === -1)
        break $l$loop_0;
      var ch = charSequenceGet(source, cpos);
      if (((equals(new Char(ch), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(ch), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(ch), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(ch), new Char(_Char___init__impl__6a9atx(9)))) {
        cpos = cpos + 1 | 0;
        continue $l$loop_0;
      }
      this.m1s_1 = cpos;
      return charToTokenClass(ch);
    }
    this.m1s_1 = cpos;
    return 10;
  };
  AbstractJsonLexer.prototype.p1y = function () {
    var current = this.o21();
    current = this.g21(current);
    var len = charSequenceLength(this.f21()) - current | 0;
    if (len < 4 ? true : current === -1)
      return true;
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(new Char(charSequenceGet('null', i)), new Char(charSequenceGet(this.f21(), current + i | 0))))
          return true;
      }
       while (inductionVariable <= 3);
    if (len > 4 ? charToTokenClass(charSequenceGet(this.f21(), current + 4 | 0)) === 0 : false)
      return true;
    this.m1s_1 = current + 4 | 0;
    return false;
  };
  AbstractJsonLexer.prototype.o21 = function () {
    var current = this.m1s_1;
    $l$loop_0: while (true) {
      current = this.g21(current);
      if (current === -1)
        break $l$loop_0;
      var c = charSequenceGet(this.f21(), current);
      if (((equals(new Char(c), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(9)))) {
        current = current + 1 | 0;
      } else {
        break $l$loop_0;
      }
    }
    this.m1s_1 = current;
    return current;
  };
  AbstractJsonLexer.prototype.q1y = function (isLenient) {
    var token = this.z1w();
    var tmp;
    if (isLenient) {
      if (!(token === 1) ? !(token === 0) : false)
        return null;
      tmp = this.c1x();
    } else {
      if (!(token === 1))
        return null;
      tmp = this.b1x();
    }
    var string = tmp;
    this.o1s_1 = string;
    return string;
  };
  AbstractJsonLexer.prototype.p21 = function (startPos, endPos) {
    var tmp$ret$0;
    {
      var tmp0_substring = this.f21();
      tmp$ret$0 = toString(charSequenceSubSequence(tmp0_substring, startPos, endPos));
    }
    return tmp$ret$0;
  };
  AbstractJsonLexer.prototype.b1x = function () {
    if (!(this.o1s_1 == null)) {
      return takePeeked(this);
    }
    return this.t1y();
  };
  AbstractJsonLexer.prototype.consumeString2 = function (source, startPosition, current) {
    var currentPosition = current;
    var lastPosition = startPosition;
    var char = charSequenceGet(source, currentPosition);
    var usedAppend = false;
    while (!equals(new Char(char), new Char(_Char___init__impl__6a9atx(34)))) {
      if (equals(new Char(char), new Char(_Char___init__impl__6a9atx(92)))) {
        usedAppend = true;
        currentPosition = this.g21(appendEscape(this, lastPosition, currentPosition));
        if (currentPosition === -1) {
          var tmp = currentPosition;
          this.a1w('EOF', tmp, null, 4, null);
        }
        lastPosition = currentPosition;
      } else {
        currentPosition = currentPosition + 1 | 0;
        if (currentPosition >= charSequenceLength(source)) {
          usedAppend = true;
          this.e21(lastPosition, currentPosition);
          currentPosition = this.g21(currentPosition);
          if (currentPosition === -1) {
            var tmp_0 = currentPosition;
            this.a1w('EOF', tmp_0, null, 4, null);
          }
          lastPosition = currentPosition;
        }
      }
      char = charSequenceGet(source, currentPosition);
    }
    var tmp_1;
    if (!usedAppend) {
      tmp_1 = this.p21(lastPosition, currentPosition);
    } else {
      tmp_1 = decodedString(this, lastPosition, currentPosition);
    }
    var string = tmp_1;
    this.m1s_1 = currentPosition + 1 | 0;
    return string;
  };
  AbstractJsonLexer.prototype.u1y = function () {
    var result = this.c1x();
    if (result === 'null' ? wasUnquotedString(this) : false) {
      this.a1w("Unexpected 'null' value instead of string literal", 0, null, 6, null);
    }
    return result;
  };
  AbstractJsonLexer.prototype.c1x = function () {
    if (!(this.o1s_1 == null)) {
      return takePeeked(this);
    }
    var current = this.o21();
    if (current >= charSequenceLength(this.f21()) ? true : current === -1) {
      var tmp = current;
      this.a1w('EOF', tmp, null, 4, null);
    }
    var token = charToTokenClass(charSequenceGet(this.f21(), current));
    if (token === 1) {
      return this.b1x();
    }
    if (!(token === 0)) {
      var tmp_0 = 'Expected beginning of the string, but got ' + new Char(charSequenceGet(this.f21(), current));
      this.a1w(tmp_0, 0, null, 6, null);
    }
    var usedAppend = false;
    while (charToTokenClass(charSequenceGet(this.f21(), current)) === 0) {
      current = current + 1 | 0;
      if (current >= charSequenceLength(this.f21())) {
        usedAppend = true;
        this.e21(this.m1s_1, current);
        var eof = this.g21(current);
        if (eof === -1) {
          this.m1s_1 = current;
          return decodedString(this, 0, 0);
        } else {
          current = eof;
        }
      }
    }
    var tmp_1;
    if (!usedAppend) {
      tmp_1 = this.p21(this.m1s_1, current);
    } else {
      tmp_1 = decodedString(this, this.m1s_1, current);
    }
    var result = tmp_1;
    this.m1s_1 = current;
    return result;
  };
  AbstractJsonLexer.prototype.e21 = function (fromIndex, toIndex) {
    this.p1s_1.af(this.f21(), fromIndex, toIndex);
  };
  AbstractJsonLexer.prototype.q21 = function (condition, position, message) {
    if (!condition) {
      var tmp = message();
      this.a1w(tmp, position, null, 4, null);
    }
  };
  AbstractJsonLexer.prototype.s1y = function (allowLenientStrings) {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$();
    }
    var tokenStack = tmp$ret$0;
    var lastToken = this.z1w();
    if (!(lastToken === 8) ? !(lastToken === 6) : false) {
      this.c1x();
      return Unit_getInstance();
    }
    $l$loop: while (true) {
      lastToken = this.z1w();
      if (lastToken === 1) {
        if (allowLenientStrings) {
          this.c1x();
        } else {
          this.t1y();
        }
        continue $l$loop;
      }
      var tmp0_subject = lastToken;
      if (tmp0_subject === 8 ? true : tmp0_subject === 6) {
        tokenStack.c(lastToken);
      } else if (tmp0_subject === 9) {
        if (!(last(tokenStack) === 8))
          throw JsonDecodingException_0(this.m1s_1, 'found ] instead of } at path: ' + this.n1s_1, this.f21());
        removeLast(tokenStack);
      } else if (tmp0_subject === 7) {
        if (!(last(tokenStack) === 6))
          throw JsonDecodingException_0(this.m1s_1, 'found } instead of ] at path: ' + this.n1s_1, this.f21());
        removeLast(tokenStack);
      } else if (tmp0_subject === 10) {
        this.a1w('Unexpected end of input due to malformed JSON during ignoring unknown keys', 0, null, 6, null);
      }
      this.e1x();
      if (tokenStack.g() === 0)
        return Unit_getInstance();
    }
  };
  AbstractJsonLexer.prototype.toString = function () {
    return "JsonReader(source='" + this.f21() + "', currentPosition=" + this.m1s_1 + ')';
  };
  AbstractJsonLexer.prototype.r1y = function (key) {
    var processed = this.p21(0, this.m1s_1);
    var lastIndexOf = lastIndexOf$default(processed, key, 0, false, 6, null);
    this.n21("Encountered an unknown key '" + key + "'", lastIndexOf, "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.");
  };
  AbstractJsonLexer.prototype.n21 = function (message, position, hint) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(hint) === 0;
    }
    if (tmp$ret$0) {
      tmp = '';
    } else {
      tmp = '\n' + hint;
    }
    var hintMessage = tmp;
    throw JsonDecodingException_0(position, message + ' at path: ' + this.n1s_1.m1w() + hintMessage, this.f21());
  };
  AbstractJsonLexer.prototype.a1w = function (message, position, hint, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      position = this.m1s_1;
    if (!(($mask0 & 4) === 0))
      hint = '';
    return this.n21(message, position, hint);
  };
  AbstractJsonLexer.prototype.d1z = function () {
    var current = this.o21();
    current = this.g21(current);
    if (current >= charSequenceLength(this.f21()) ? true : current === -1) {
      this.a1w('EOF', 0, null, 6, null);
    }
    var tmp;
    if (equals(new Char(charSequenceGet(this.f21(), current)), new Char(_Char___init__impl__6a9atx(34)))) {
      current = current + 1 | 0;
      if (current === charSequenceLength(this.f21())) {
        this.a1w('EOF', 0, null, 6, null);
      }
      tmp = true;
    } else {
      tmp = false;
    }
    var hasQuotation = tmp;
    var accumulator = new Long(0, 0);
    var isNegative = false;
    var start = current;
    var hasChars = true;
    $l$loop_0: while (hasChars) {
      var ch = charSequenceGet(this.f21(), current);
      if (equals(new Char(ch), new Char(_Char___init__impl__6a9atx(45)))) {
        if (!(current === start)) {
          this.a1w("Unexpected symbol '-' in numeric literal", 0, null, 6, null);
        }
        isNegative = true;
        current = current + 1 | 0;
        continue $l$loop_0;
      }
      var token = charToTokenClass(ch);
      if (!(token === 0))
        break $l$loop_0;
      current = current + 1 | 0;
      hasChars = !(current === charSequenceLength(this.f21()));
      var digit = Char__minus_impl_a2frrh(ch, _Char___init__impl__6a9atx(48));
      if (!(0 <= digit ? digit <= 9 : false)) {
        var tmp_0 = "Unexpected symbol '" + new Char(ch) + "' in numeric literal";
        this.a1w(tmp_0, 0, null, 6, null);
      }
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_times = accumulator;
          tmp$ret$0 = tmp0_times.y4(new Long(10, 0));
        }
        var tmp1_minus = tmp$ret$0;
        tmp$ret$1 = tmp1_minus.a5(toLong_0(digit));
      }
      accumulator = tmp$ret$1;
      if (accumulator.r(new Long(0, 0)) > 0) {
        this.a1w('Numeric value overflow', 0, null, 6, null);
      }
    }
    if (start === current ? true : isNegative ? start === (current - 1 | 0) : false) {
      this.a1w('Expected numeric literal', 0, null, 6, null);
    }
    if (hasQuotation) {
      if (!hasChars) {
        this.a1w('EOF', 0, null, 6, null);
      }
      if (!equals(new Char(charSequenceGet(this.f21(), current)), new Char(_Char___init__impl__6a9atx(34)))) {
        this.a1w('Expected closing quotation mark', 0, null, 6, null);
      }
      current = current + 1 | 0;
    }
    this.m1s_1 = current;
    var tmp_1;
    if (isNegative) {
      tmp_1 = accumulator;
    } else {
      var tmp_2 = accumulator;
      Companion_getInstance_4();
      if (!tmp_2.equals(new Long(0, -2147483648))) {
        tmp_1 = accumulator.w4();
      } else {
        this.a1w('Numeric value overflow', 0, null, 6, null);
      }
    }
    return tmp_1;
  };
  AbstractJsonLexer.prototype.b1z = function () {
    return consumeBoolean(this, this.o21());
  };
  AbstractJsonLexer.prototype.c1z = function () {
    var current = this.o21();
    if (current === charSequenceLength(this.f21())) {
      this.a1w('EOF', 0, null, 6, null);
    }
    var tmp;
    if (equals(new Char(charSequenceGet(this.f21(), current)), new Char(_Char___init__impl__6a9atx(34)))) {
      current = current + 1 | 0;
      tmp = true;
    } else {
      tmp = false;
    }
    var hasQuotation = tmp;
    var result = consumeBoolean(this, current);
    if (hasQuotation) {
      if (this.m1s_1 === charSequenceLength(this.f21())) {
        this.a1w('EOF', 0, null, 6, null);
      }
      if (!equals(new Char(charSequenceGet(this.f21(), this.m1s_1)), new Char(_Char___init__impl__6a9atx(34)))) {
        this.a1w('Expected closing quotation mark', 0, null, 6, null);
      }
      var tmp0_this = this;
      tmp0_this.m1s_1 = tmp0_this.m1s_1 + 1 | 0;
    }
    return result;
  };
  AbstractJsonLexer.$metadata$ = classMeta('AbstractJsonLexer');
  function charToTokenClass(c) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(c);
    }
    if (tmp$ret$0 < 126) {
      var tmp_0 = CharMappings_getInstance().s21_1;
      var tmp$ret$1;
      {
        tmp$ret$1 = Char__toInt_impl_vasixd(c);
      }
      tmp = tmp_0[tmp$ret$1];
    } else {
      tmp = 0;
    }
    return tmp;
  }
  function get_TC_WHITESPACE() {
    return TC_WHITESPACE;
  }
  var TC_WHITESPACE;
  function get_TC_EOF() {
    return TC_EOF;
  }
  var TC_EOF;
  function get_STRING() {
    return STRING;
  }
  var STRING;
  function get_TC_STRING() {
    return TC_STRING;
  }
  var TC_STRING;
  function get_STRING_ESC() {
    return STRING_ESC;
  }
  var STRING_ESC;
  function get_TC_BEGIN_OBJ() {
    return TC_BEGIN_OBJ;
  }
  var TC_BEGIN_OBJ;
  function get_TC_COLON() {
    return TC_COLON;
  }
  var TC_COLON;
  function get_TC_COMMA() {
    return TC_COMMA;
  }
  var TC_COMMA;
  function get_COLON() {
    return COLON;
  }
  var COLON;
  function get_BEGIN_OBJ() {
    return BEGIN_OBJ;
  }
  var BEGIN_OBJ;
  function get_END_OBJ() {
    return END_OBJ;
  }
  var END_OBJ;
  function get_BEGIN_LIST() {
    return BEGIN_LIST;
  }
  var BEGIN_LIST;
  function get_END_LIST() {
    return END_LIST;
  }
  var END_LIST;
  function get_lenientHint() {
    return lenientHint;
  }
  var lenientHint;
  function get_INVALID() {
    return INVALID;
  }
  var INVALID;
  function get_COMMA() {
    return COMMA;
  }
  var COMMA;
  function get_NULL() {
    return NULL;
  }
  var NULL;
  function get_TC_END_OBJ() {
    return TC_END_OBJ;
  }
  var TC_END_OBJ;
  function get_TC_BEGIN_LIST() {
    return TC_BEGIN_LIST;
  }
  var TC_BEGIN_LIST;
  function get_TC_END_LIST() {
    return TC_END_LIST;
  }
  var TC_END_LIST;
  function get_TC_OTHER() {
    return TC_OTHER;
  }
  var TC_OTHER;
  function escapeToChar(c) {
    return c < 117 ? CharMappings_getInstance().r21_1[c] : _Char___init__impl__6a9atx(0);
  }
  function get_ignoreUnknownKeysHint() {
    return ignoreUnknownKeysHint;
  }
  var ignoreUnknownKeysHint;
  function initEscape($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 31)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2ESC($this, i, _Char___init__impl__6a9atx(117));
      }
       while (inductionVariable <= 31);
    initC2ESC($this, 8, _Char___init__impl__6a9atx(98));
    initC2ESC($this, 9, _Char___init__impl__6a9atx(116));
    initC2ESC($this, 10, _Char___init__impl__6a9atx(110));
    initC2ESC($this, 12, _Char___init__impl__6a9atx(102));
    initC2ESC($this, 13, _Char___init__impl__6a9atx(114));
    initC2ESC_0($this, _Char___init__impl__6a9atx(47), _Char___init__impl__6a9atx(47));
    initC2ESC_0($this, _Char___init__impl__6a9atx(34), _Char___init__impl__6a9atx(34));
    initC2ESC_0($this, _Char___init__impl__6a9atx(92), _Char___init__impl__6a9atx(92));
  }
  function initCharToToken($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2TC($this, i, 127);
      }
       while (inductionVariable <= 32);
    initC2TC($this, 9, 3);
    initC2TC($this, 10, 3);
    initC2TC($this, 13, 3);
    initC2TC($this, 32, 3);
    initC2TC_0($this, _Char___init__impl__6a9atx(44), 4);
    initC2TC_0($this, _Char___init__impl__6a9atx(58), 5);
    initC2TC_0($this, _Char___init__impl__6a9atx(123), 6);
    initC2TC_0($this, _Char___init__impl__6a9atx(125), 7);
    initC2TC_0($this, _Char___init__impl__6a9atx(91), 8);
    initC2TC_0($this, _Char___init__impl__6a9atx(93), 9);
    initC2TC_0($this, _Char___init__impl__6a9atx(34), 1);
    initC2TC_0($this, _Char___init__impl__6a9atx(92), 2);
  }
  function initC2ESC($this, c, esc) {
    if (!equals(new Char(esc), new Char(_Char___init__impl__6a9atx(117)))) {
      var tmp$ret$0;
      {
        tmp$ret$0 = Char__toInt_impl_vasixd(esc);
      }
      $this.r21_1[tmp$ret$0] = numberToChar(c);
    }
  }
  function initC2ESC_0($this, c, esc) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(c);
    }
    return initC2ESC($this, tmp$ret$0, esc);
  }
  function initC2TC($this, c, cl) {
    $this.s21_1[c] = cl;
  }
  function initC2TC_0($this, c, cl) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(c);
    }
    return initC2TC($this, tmp$ret$0, cl);
  }
  function CharMappings() {
    CharMappings_instance = this;
    this.r21_1 = charArray(117);
    this.s21_1 = new Int8Array(126);
    initEscape(this);
    initCharToToken(this);
  }
  CharMappings.$metadata$ = objectMeta('CharMappings');
  var CharMappings_instance;
  function CharMappings_getInstance() {
    if (CharMappings_instance == null)
      new CharMappings();
    return CharMappings_instance;
  }
  function get_specialFlowingValuesHint() {
    return specialFlowingValuesHint;
  }
  var specialFlowingValuesHint;
  function get_allowStructuredMapKeysHint() {
    return allowStructuredMapKeysHint;
  }
  var allowStructuredMapKeysHint;
  function StringJsonLexer(source) {
    AbstractJsonLexer.call(this);
    this.x21_1 = source;
  }
  StringJsonLexer.prototype.f21 = function () {
    return this.x21_1;
  };
  StringJsonLexer.prototype.g21 = function (position) {
    return position < this.x21_1.length ? position : -1;
  };
  StringJsonLexer.prototype.e1x = function () {
    var source = this.x21_1;
    $l$loop: while (!(this.j21() === -1) ? this.j21() < source.length : false) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.j21();
      tmp0_this.i21(tmp1 + 1 | 0);
      var ch = charSequenceGet(source, tmp1);
      var tc = charToTokenClass(ch);
      var tmp;
      if (tc === get_TC_WHITESPACE()) {
        continue $l$loop;
      } else {
        tmp = tc;
      }
      return tmp;
    }
    return get_TC_EOF();
  };
  StringJsonLexer.prototype.o1y = function () {
    var current = this.o21();
    if (current === this.x21_1.length ? true : current === -1)
      return false;
    if (equals(new Char(charSequenceGet(this.x21_1, current)), new Char(_Char___init__impl__6a9atx(44)))) {
      var tmp0_this = this;
      tmp0_this.i21(tmp0_this.j21() + 1 | 0);
      tmp0_this.j21();
      return true;
    }
    return false;
  };
  StringJsonLexer.prototype.a1x = function () {
    var current = this.j21();
    if (current === -1)
      return false;
    $l$loop: while (current < this.x21_1.length) {
      var c = charSequenceGet(this.x21_1, current);
      if (((equals(new Char(c), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(9)))) {
        current = current + 1 | 0;
        continue $l$loop;
      }
      this.i21(current);
      return this.k21(c);
    }
    this.i21(current);
    return false;
  };
  StringJsonLexer.prototype.o21 = function () {
    var current = this.j21();
    if (current === -1)
      return current;
    $l$loop: while (current < this.x21_1.length) {
      var c = charSequenceGet(this.x21_1, current);
      if (((equals(new Char(c), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(9)))) {
        current = current + 1 | 0;
      } else {
        break $l$loop;
      }
    }
    this.i21(current);
    return current;
  };
  StringJsonLexer.prototype.n1y = function (expected) {
    if (this.j21() === -1)
      this.m21(expected);
    var source = this.x21_1;
    $l$loop: while (this.j21() < source.length) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.j21();
      tmp0_this.i21(tmp1 + 1 | 0);
      var c = charSequenceGet(source, tmp1);
      if (((equals(new Char(c), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(10)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(c), new Char(_Char___init__impl__6a9atx(9))))
        continue $l$loop;
      if (equals(new Char(c), new Char(expected)))
        return Unit_getInstance();
      this.m21(expected);
    }
    this.m21(expected);
  };
  StringJsonLexer.prototype.t1y = function () {
    this.n1y(get_STRING());
    var current = this.j21();
    var tmp = _Char___init__impl__6a9atx(34);
    var closingQuote = indexOf$default(this.x21_1, tmp, current, false, 4, null);
    if (closingQuote === -1) {
      this.l21(get_TC_STRING());
    }
    var inductionVariable = current;
    if (inductionVariable < closingQuote)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(new Char(charSequenceGet(this.x21_1, i)), new Char(get_STRING_ESC()))) {
          return this.consumeString2(this.x21_1, this.j21(), i);
        }
      }
       while (inductionVariable < closingQuote);
    this.i21(closingQuote + 1 | 0);
    var tmp$ret$1;
    {
      var tmp0_substring = this.x21_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_substring;
      }
      tmp$ret$1 = tmp$ret$0.substring(current, closingQuote);
    }
    return tmp$ret$1;
  };
  StringJsonLexer.prototype.w1y = function (keyToMatch, isLenient) {
    var positionSnapshot = this.j21();
    try {
      if (!(this.e1x() === get_TC_BEGIN_OBJ()))
        return null;
      var firstKey = isLenient ? this.t1y() : this.u1y();
      if (firstKey === keyToMatch) {
        if (!(this.e1x() === get_TC_COLON()))
          return null;
        var result = isLenient ? this.b1x() : this.u1y();
        return result;
      }
      return null;
    }finally {
      this.i21(positionSnapshot);
    }
  };
  StringJsonLexer.$metadata$ = classMeta('StringJsonLexer', undefined, undefined, undefined, undefined, AbstractJsonLexer.prototype);
  function get_schemaCache(_this__u8e3s4) {
    return _this__u8e3s4.a1s_1;
  }
  function JsonToStringWriter() {
    this.d1s_1 = StringBuilder_init_$Create$_0(128);
  }
  JsonToStringWriter.prototype.k1v = function (value) {
    this.d1s_1.a6(value);
  };
  JsonToStringWriter.prototype.e1v = function (char) {
    this.d1s_1.v4(char);
  };
  JsonToStringWriter.prototype.g1v = function (text) {
    this.d1s_1.b6(text);
  };
  JsonToStringWriter.prototype.q1v = function (text) {
    printQuoted(this.d1s_1, text);
  };
  JsonToStringWriter.prototype.un = function () {
    this.d1s_1.cf();
  };
  JsonToStringWriter.prototype.toString = function () {
    return this.d1s_1.toString();
  };
  JsonToStringWriter.$metadata$ = classMeta('JsonToStringWriter', [JsonWriter]);
  function createMapForCache(initialCapacity) {
    return HashMap_init_$Create$(initialCapacity);
  }
  //region block: post-declaration
  defer$1.prototype.f1c = get_isNullable;
  defer$1.prototype.m1c = get_isInline;
  defer$1.prototype.k1c = get_annotations;
  PolymorphismValidator.prototype.r1r = contextual;
  StreamingJsonDecoder.prototype.o1e = decodeSerializableElement$default;
  StreamingJsonDecoder.prototype.q1e = decodeSequentially;
  StreamingJsonDecoder.prototype.s1e = decodeCollectionSize;
  JsonDecoderForUnsignedTypes.prototype.b1e = decodeSerializableValue;
  JsonDecoderForUnsignedTypes.prototype.o1e = decodeSerializableElement$default;
  JsonDecoderForUnsignedTypes.prototype.q1e = decodeSequentially;
  JsonDecoderForUnsignedTypes.prototype.s1e = decodeCollectionSize;
  StreamingJsonEncoder.prototype.t1f = encodeNotNullMark;
  StreamingJsonEncoder.prototype.u1f = beginCollection;
  StreamingJsonEncoder.prototype.s1f = encodeNullableSerializableValue;
  AbstractJsonTreeDecoder.prototype.o1e = decodeSerializableElement$default;
  AbstractJsonTreeDecoder.prototype.q1e = decodeSequentially;
  AbstractJsonTreeDecoder.prototype.s1e = decodeCollectionSize;
  JsonTreeDecoder.prototype.o1e = decodeSerializableElement$default;
  JsonTreeDecoder.prototype.q1e = decodeSequentially;
  JsonTreeDecoder.prototype.s1e = decodeCollectionSize;
  JsonTreeListDecoder.prototype.o1e = decodeSerializableElement$default;
  JsonTreeListDecoder.prototype.q1e = decodeSequentially;
  JsonTreeListDecoder.prototype.s1e = decodeCollectionSize;
  JsonTreeMapDecoder.prototype.o1e = decodeSerializableElement$default;
  JsonTreeMapDecoder.prototype.q1e = decodeSequentially;
  JsonTreeMapDecoder.prototype.s1e = decodeCollectionSize;
  //endregion
  //region block: init
  TC_WHITESPACE = 3;
  TC_EOF = 10;
  STRING = _Char___init__impl__6a9atx(34);
  TC_STRING = 1;
  STRING_ESC = _Char___init__impl__6a9atx(92);
  TC_BEGIN_OBJ = 6;
  TC_COLON = 5;
  TC_COMMA = 4;
  COLON = _Char___init__impl__6a9atx(58);
  BEGIN_OBJ = _Char___init__impl__6a9atx(123);
  END_OBJ = _Char___init__impl__6a9atx(125);
  BEGIN_LIST = _Char___init__impl__6a9atx(91);
  END_LIST = _Char___init__impl__6a9atx(93);
  lenientHint = "Use 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.";
  INVALID = _Char___init__impl__6a9atx(0);
  COMMA = _Char___init__impl__6a9atx(44);
  NULL = 'null';
  TC_END_OBJ = 7;
  TC_BEGIN_LIST = 8;
  TC_END_LIST = 9;
  TC_OTHER = 0;
  ignoreUnknownKeysHint = "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.";
  specialFlowingValuesHint = "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'";
  allowStructuredMapKeysHint = "Use 'allowStructuredMapKeys = true' in 'Json {}' builder to convert such maps to [key1, value1, key2, value2,...] arrays.";
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = Json$default;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(180), __nccwpck_require__(737)));

//# sourceMappingURL=kotlinx-serialization-kotlinx-serialization-json-js-ir.js.map

/***/ }),

/***/ 915:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_atomicfu) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var THROW_CCE = kotlin_kotlin.$_$.k9;
  var isObject = kotlin_kotlin.$_$.l7;
  var Unit_getInstance = kotlin_kotlin.$_$.m3;
  var plus = kotlin_kotlin.$_$.g6;
  var get = kotlin_kotlin.$_$.c6;
  var fold = kotlin_kotlin.$_$.b6;
  var minusKey = kotlin_kotlin.$_$.d6;
  var Continuation = kotlin_kotlin.$_$.a6;
  var classMeta = kotlin_kotlin.$_$.u6;
  var EmptyCoroutineContext_getInstance = kotlin_kotlin.$_$.v2;
  var createCoroutineUnintercepted = kotlin_kotlin.$_$.t5;
  var Key_getInstance = kotlin_kotlin.$_$.u2;
  var equals = kotlin_kotlin.$_$.w6;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.p1;
  var atomic$int$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.e;
  var intercepted = kotlin_kotlin.$_$.u5;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.s5;
  var interfaceMeta = kotlin_kotlin.$_$.b7;
  var isInterface = kotlin_kotlin.$_$.j7;
  var toString = kotlin_kotlin.$_$.ga;
  var toString_0 = kotlin_kotlin.$_$.v7;
  var atomic$ref$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.d;
  var objectMeta = kotlin_kotlin.$_$.r7;
  var hashCode = kotlin_kotlin.$_$.a7;
  var atomic$boolean$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.b;
  var CancellationException_init_$Create$ = kotlin_kotlin.$_$.d1;
  var Result__exceptionOrNull_impl_p6xea9 = kotlin_kotlin.$_$.g2;
  var _Result___get_value__impl__bjfvqg = kotlin_kotlin.$_$.h2;
  var Companion_getInstance = kotlin_kotlin.$_$.h3;
  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.f2;
  var createFailure = kotlin_kotlin.$_$.v9;
  var AbstractCoroutineContextKey = kotlin_kotlin.$_$.w5;
  var AbstractCoroutineContextElement = kotlin_kotlin.$_$.v5;
  var get_0 = kotlin_kotlin.$_$.x5;
  var minusKey_0 = kotlin_kotlin.$_$.y5;
  var ContinuationInterceptor = kotlin_kotlin.$_$.z5;
  var Key = kotlin_kotlin.$_$.f6;
  var RuntimeException_init_$Create$ = kotlin_kotlin.$_$.x1;
  var Enum = kotlin_kotlin.$_$.c9;
  var startCoroutine = kotlin_kotlin.$_$.l6;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.ca;
  var Long = kotlin_kotlin.$_$.g9;
  var RuntimeException = kotlin_kotlin.$_$.j9;
  var RuntimeException_init_$Init$ = kotlin_kotlin.$_$.w1;
  var captureStack = kotlin_kotlin.$_$.p6;
  var Error_0 = kotlin_kotlin.$_$.d9;
  var Error_init_$Init$ = kotlin_kotlin.$_$.j1;
  var Element = kotlin_kotlin.$_$.e6;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.i1;
  var anyToString = kotlin_kotlin.$_$.m6;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.fa;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.o;
  var CancellationException = kotlin_kotlin.$_$.r5;
  var ArrayList = kotlin_kotlin.$_$.n3;
  var IllegalStateException_init_$Create$_0 = kotlin_kotlin.$_$.q1;
  var UnsupportedOperationException = kotlin_kotlin.$_$.r9;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.z1;
  var addSuppressed = kotlin_kotlin.$_$.s9;
  var fillArrayVal = kotlin_kotlin.$_$.x6;
  var fill = kotlin_kotlin.$_$.u4;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var fill$default = kotlin_kotlin.$_$.h;
  var ensureNotNull = kotlin_kotlin.$_$.w9;
  var NoSuchElementException = kotlin_kotlin.$_$.h9;
  var NoSuchElementException_init_$Init$ = kotlin_kotlin.$_$.t1;
  var IllegalStateException = kotlin_kotlin.$_$.f9;
  var IllegalStateException_init_$Init$ = kotlin_kotlin.$_$.o1;
  var CancellationException_init_$Create$_0 = kotlin_kotlin.$_$.f1;
  var Unit = kotlin_kotlin.$_$.q9;
  var CoroutineImpl = kotlin_kotlin.$_$.h6;
  var joinToString$default = kotlin_kotlin.$_$.i;
  var SuspendFunction1 = kotlin_kotlin.$_$.i6;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.a3;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.p;
  var arrayCopy = kotlin_kotlin.$_$.c4;
  var throwKotlinNothingValueException = kotlin_kotlin.$_$.ea;
  var toLong = kotlin_kotlin.$_$.t7;
  var toLongOrNull = kotlin_kotlin.$_$.o8;
  var atomic$long$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.c;
  var atomicfu$AtomicRefArray$ofNulls = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.a;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var CancellationException_init_$Init$ = kotlin_kotlin.$_$.e1;
  var getStringHashCode = kotlin_kotlin.$_$.z6;
  var CancellationException_init_$Init$_0 = kotlin_kotlin.$_$.c1;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.u;
  var UnsupportedOperationException_init_$Create$_0 = kotlin_kotlin.$_$.y1;
  //endregion
  //region block: pre-declaration
  function invokeOnCompletion$default(onCancelling, invokeImmediately, handler, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      onCancelling = false;
    if (!(($mask0 & 2) === 0))
      invokeImmediately = true;
    return $handler == null ? this.sj(onCancelling, invokeImmediately, handler) : $handler(onCancelling, invokeImmediately, handler);
  }
  AbstractCoroutine.prototype = Object.create(JobSupport.prototype);
  AbstractCoroutine.prototype.constructor = AbstractCoroutine;
  StandaloneCoroutine.prototype = Object.create(AbstractCoroutine.prototype);
  StandaloneCoroutine.prototype.constructor = StandaloneCoroutine;
  LazyStandaloneCoroutine.prototype = Object.create(StandaloneCoroutine.prototype);
  LazyStandaloneCoroutine.prototype.constructor = LazyStandaloneCoroutine;
  ScopeCoroutine.prototype = Object.create(AbstractCoroutine.prototype);
  ScopeCoroutine.prototype.constructor = ScopeCoroutine;
  DispatchedCoroutine.prototype = Object.create(ScopeCoroutine.prototype);
  DispatchedCoroutine.prototype.constructor = DispatchedCoroutine;
  CancelHandler.prototype = Object.create(CancelHandlerBase.prototype);
  CancelHandler.prototype.constructor = CancelHandler;
  BeforeResumeCancelHandler.prototype = Object.create(CancelHandler.prototype);
  BeforeResumeCancelHandler.prototype.constructor = BeforeResumeCancelHandler;
  RemoveOnCancel.prototype = Object.create(BeforeResumeCancelHandler.prototype);
  RemoveOnCancel.prototype.constructor = RemoveOnCancel;
  DispatchedTask.prototype = Object.create(SchedulerTask.prototype);
  DispatchedTask.prototype.constructor = DispatchedTask;
  CancellableContinuationImpl.prototype = Object.create(DispatchedTask.prototype);
  CancellableContinuationImpl.prototype.constructor = CancellableContinuationImpl;
  InvokeOnCancel.prototype = Object.create(CancelHandler.prototype);
  InvokeOnCancel.prototype.constructor = InvokeOnCancel;
  CancelledContinuation.prototype = Object.create(CompletedExceptionally.prototype);
  CancelledContinuation.prototype.constructor = CancelledContinuation;
  Key_0.prototype = Object.create(AbstractCoroutineContextKey.prototype);
  Key_0.prototype.constructor = Key_0;
  CoroutineDispatcher.prototype = Object.create(AbstractCoroutineContextElement.prototype);
  CoroutineDispatcher.prototype.constructor = CoroutineDispatcher;
  CoroutineStart.prototype = Object.create(Enum.prototype);
  CoroutineStart.prototype.constructor = CoroutineStart;
  EventLoop.prototype = Object.create(CoroutineDispatcher.prototype);
  EventLoop.prototype.constructor = EventLoop;
  CompletionHandlerException.prototype = Object.create(RuntimeException.prototype);
  CompletionHandlerException.prototype.constructor = CompletionHandlerException;
  CoroutinesInternalError.prototype = Object.create(Error_0.prototype);
  CoroutinesInternalError.prototype.constructor = CoroutinesInternalError;
  LinkedListHead.prototype = Object.create(LinkedListNode.prototype);
  LinkedListHead.prototype.constructor = LinkedListHead;
  NodeList.prototype = Object.create(LinkedListHead.prototype);
  NodeList.prototype.constructor = NodeList;
  CompletionHandlerBase.prototype = Object.create(LinkedListNode.prototype);
  CompletionHandlerBase.prototype.constructor = CompletionHandlerBase;
  JobNode.prototype = Object.create(CompletionHandlerBase.prototype);
  JobNode.prototype.constructor = JobNode;
  ChildCompletion.prototype = Object.create(JobNode.prototype);
  ChildCompletion.prototype.constructor = ChildCompletion;
  JobCancellingNode.prototype = Object.create(JobNode.prototype);
  JobCancellingNode.prototype.constructor = JobCancellingNode;
  ChildHandleNode.prototype = Object.create(JobCancellingNode.prototype);
  ChildHandleNode.prototype.constructor = ChildHandleNode;
  InvokeOnCancelling.prototype = Object.create(JobCancellingNode.prototype);
  InvokeOnCancelling.prototype.constructor = InvokeOnCancelling;
  InvokeOnCompletion.prototype = Object.create(JobNode.prototype);
  InvokeOnCompletion.prototype.constructor = InvokeOnCompletion;
  ChildContinuation.prototype = Object.create(JobCancellingNode.prototype);
  ChildContinuation.prototype.constructor = ChildContinuation;
  JobImpl.prototype = Object.create(JobSupport.prototype);
  JobImpl.prototype.constructor = JobImpl;
  MainCoroutineDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  MainCoroutineDispatcher.prototype.constructor = MainCoroutineDispatcher;
  NonCancellable.prototype = Object.create(AbstractCoroutineContextElement.prototype);
  NonCancellable.prototype.constructor = NonCancellable;
  TimeoutCancellationException.prototype = Object.create(CancellationException.prototype);
  TimeoutCancellationException.prototype.constructor = TimeoutCancellationException;
  Unconfined.prototype = Object.create(CoroutineDispatcher.prototype);
  Unconfined.prototype.constructor = Unconfined;
  RemoveReceiveOnCancel.prototype = Object.create(BeforeResumeCancelHandler.prototype);
  RemoveReceiveOnCancel.prototype.constructor = RemoveReceiveOnCancel;
  Receive.prototype = Object.create(LinkedListNode.prototype);
  Receive.prototype.constructor = Receive;
  ReceiveElement.prototype = Object.create(Receive.prototype);
  ReceiveElement.prototype.constructor = ReceiveElement;
  ReceiveElementWithUndeliveredHandler.prototype = Object.create(ReceiveElement.prototype);
  ReceiveElementWithUndeliveredHandler.prototype.constructor = ReceiveElementWithUndeliveredHandler;
  function close$default(cause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    return $handler == null ? this.nu(cause) : $handler(cause);
  }
  AbstractChannel.prototype = Object.create(AbstractSendChannel.prototype);
  AbstractChannel.prototype.constructor = AbstractChannel;
  Send.prototype = Object.create(LinkedListNode.prototype);
  Send.prototype.constructor = Send;
  SendBuffered.prototype = Object.create(Send.prototype);
  SendBuffered.prototype.constructor = SendBuffered;
  Closed.prototype = Object.create(Send.prototype);
  Closed.prototype.constructor = Closed;
  SendElement.prototype = Object.create(Send.prototype);
  SendElement.prototype.constructor = SendElement;
  SendElementWithUndeliveredHandler.prototype = Object.create(SendElement.prototype);
  SendElementWithUndeliveredHandler.prototype.constructor = SendElementWithUndeliveredHandler;
  ArrayChannel.prototype = Object.create(AbstractChannel.prototype);
  ArrayChannel.prototype.constructor = ArrayChannel;
  BufferOverflow.prototype = Object.create(Enum.prototype);
  BufferOverflow.prototype.constructor = BufferOverflow;
  Closed_0.prototype = Object.create(Failed.prototype);
  Closed_0.prototype.constructor = Closed_0;
  ClosedReceiveChannelException.prototype = Object.create(NoSuchElementException.prototype);
  ClosedReceiveChannelException.prototype.constructor = ClosedReceiveChannelException;
  ClosedSendChannelException.prototype = Object.create(IllegalStateException.prototype);
  ClosedSendChannelException.prototype.constructor = ClosedSendChannelException;
  ChannelCoroutine.prototype = Object.create(AbstractCoroutine.prototype);
  ChannelCoroutine.prototype.constructor = ChannelCoroutine;
  ConflatedChannel.prototype = Object.create(AbstractChannel.prototype);
  ConflatedChannel.prototype.constructor = ConflatedChannel;
  LinkedListChannel.prototype = Object.create(AbstractChannel.prototype);
  LinkedListChannel.prototype.constructor = LinkedListChannel;
  ProducerCoroutine.prototype = Object.create(ChannelCoroutine.prototype);
  ProducerCoroutine.prototype.constructor = ProducerCoroutine;
  RendezvousChannel.prototype = Object.create(AbstractChannel.prototype);
  RendezvousChannel.prototype.constructor = RendezvousChannel;
  SafeFlow.prototype = Object.create(AbstractFlow.prototype);
  SafeFlow.prototype.constructor = SafeFlow;
  $collectCOROUTINE$2.prototype = Object.create(CoroutineImpl.prototype);
  $collectCOROUTINE$2.prototype.constructor = $collectCOROUTINE$2;
  $emitAllImplCOROUTINE$3.prototype = Object.create(CoroutineImpl.prototype);
  $emitAllImplCOROUTINE$3.prototype.constructor = $emitAllImplCOROUTINE$3;
  $collectCOROUTINE$4.prototype = Object.create(CoroutineImpl.prototype);
  $collectCOROUTINE$4.prototype.constructor = $collectCOROUTINE$4;
  ChannelFlow$_get_collectToFun_$slambda_j53z2e.prototype = Object.create(CoroutineImpl.prototype);
  ChannelFlow$_get_collectToFun_$slambda_j53z2e.prototype.constructor = ChannelFlow$_get_collectToFun_$slambda_j53z2e;
  ChannelFlow$collect$slambda.prototype = Object.create(CoroutineImpl.prototype);
  ChannelFlow$collect$slambda.prototype.constructor = ChannelFlow$collect$slambda;
  ChannelFlowMerge$collectTo$slambda$slambda.prototype = Object.create(CoroutineImpl.prototype);
  ChannelFlowMerge$collectTo$slambda$slambda.prototype.constructor = ChannelFlowMerge$collectTo$slambda$slambda;
  ChannelFlowMerge$collectTo$slambda.prototype = Object.create(CoroutineImpl.prototype);
  ChannelFlowMerge$collectTo$slambda.prototype.constructor = ChannelFlowMerge$collectTo$slambda;
  ChannelFlowMerge.prototype = Object.create(ChannelFlow.prototype);
  ChannelFlowMerge.prototype.constructor = ChannelFlowMerge;
  unsafeTransform$o$collect$slambda.prototype = Object.create(CoroutineImpl.prototype);
  unsafeTransform$o$collect$slambda.prototype.constructor = unsafeTransform$o$collect$slambda;
  $collectCOROUTINE$5.prototype = Object.create(CoroutineImpl.prototype);
  $collectCOROUTINE$5.prototype.constructor = $collectCOROUTINE$5;
  $emitCOROUTINE$7.prototype = Object.create(CoroutineImpl.prototype);
  $emitCOROUTINE$7.prototype.constructor = $emitCOROUTINE$7;
  transformWhile$slambda.prototype = Object.create(CoroutineImpl.prototype);
  transformWhile$slambda.prototype.constructor = transformWhile$slambda;
  flatMapMerge$o$collect$slambda.prototype = Object.create(CoroutineImpl.prototype);
  flatMapMerge$o$collect$slambda.prototype.constructor = flatMapMerge$o$collect$slambda;
  $collectCOROUTINE$11.prototype = Object.create(CoroutineImpl.prototype);
  $collectCOROUTINE$11.prototype.constructor = $collectCOROUTINE$11;
  flattenConcat$o$collect$slambda.prototype = Object.create(CoroutineImpl.prototype);
  flattenConcat$o$collect$slambda.prototype.constructor = flattenConcat$o$collect$slambda;
  $collectCOROUTINE$12.prototype = Object.create(CoroutineImpl.prototype);
  $collectCOROUTINE$12.prototype.constructor = $collectCOROUTINE$12;
  map$o$collect$slambda.prototype = Object.create(CoroutineImpl.prototype);
  map$o$collect$slambda.prototype.constructor = map$o$collect$slambda;
  $collectCOROUTINE$14.prototype = Object.create(CoroutineImpl.prototype);
  $collectCOROUTINE$14.prototype.constructor = $collectCOROUTINE$14;
  toCollection$slambda.prototype = Object.create(CoroutineImpl.prototype);
  toCollection$slambda.prototype.constructor = toCollection$slambda;
  $toCollectionCOROUTINE$15.prototype = Object.create(CoroutineImpl.prototype);
  $toCollectionCOROUTINE$15.prototype.constructor = $toCollectionCOROUTINE$15;
  Segment.prototype = Object.create(ConcurrentLinkedListNode.prototype);
  Segment.prototype.constructor = Segment;
  DispatchedContinuation.prototype = Object.create(DispatchedTask.prototype);
  DispatchedContinuation.prototype.constructor = DispatchedContinuation;
  UndeliveredElementException.prototype = Object.create(RuntimeException.prototype);
  UndeliveredElementException.prototype.constructor = UndeliveredElementException;
  SemaphoreSegment.prototype = Object.create(Segment.prototype);
  SemaphoreSegment.prototype.constructor = SemaphoreSegment;
  CancelSemaphoreAcquisitionHandler.prototype = Object.create(CancelHandler.prototype);
  CancelSemaphoreAcquisitionHandler.prototype.constructor = CancelSemaphoreAcquisitionHandler;
  UndispatchedCoroutine.prototype = Object.create(ScopeCoroutine.prototype);
  UndispatchedCoroutine.prototype.constructor = UndispatchedCoroutine;
  JsMainDispatcher.prototype = Object.create(MainCoroutineDispatcher.prototype);
  JsMainDispatcher.prototype.constructor = JsMainDispatcher;
  UnconfinedEventLoop.prototype = Object.create(EventLoop.prototype);
  UnconfinedEventLoop.prototype.constructor = UnconfinedEventLoop;
  JobCancellationException.prototype = Object.create(CancellationException.prototype);
  JobCancellationException.prototype.constructor = JobCancellationException;
  SetTimeoutBasedDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  SetTimeoutBasedDispatcher.prototype.constructor = SetTimeoutBasedDispatcher;
  NodeDispatcher.prototype = Object.create(SetTimeoutBasedDispatcher.prototype);
  NodeDispatcher.prototype.constructor = NodeDispatcher;
  SetTimeoutDispatcher.prototype = Object.create(SetTimeoutBasedDispatcher.prototype);
  SetTimeoutDispatcher.prototype.constructor = SetTimeoutDispatcher;
  MessageQueue.prototype = Object.create(ArrayQueue.prototype);
  MessageQueue.prototype.constructor = MessageQueue;
  ScheduledMessageQueue.prototype = Object.create(MessageQueue.prototype);
  ScheduledMessageQueue.prototype.constructor = ScheduledMessageQueue;
  WindowDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  WindowDispatcher.prototype.constructor = WindowDispatcher;
  WindowMessageQueue.prototype = Object.create(MessageQueue.prototype);
  WindowMessageQueue.prototype.constructor = WindowMessageQueue;
  AbortFlowException.prototype = Object.create(CancellationException.prototype);
  AbortFlowException.prototype.constructor = AbortFlowException;
  //endregion
  function AbstractCoroutine(parentContext, initParentJob, active) {
    JobSupport.call(this, active);
    if (initParentJob)
      this.ni(parentContext.z3(Key_getInstance_2()));
    this.qi_1 = parentContext.g4(this);
  }
  AbstractCoroutine.prototype.o3 = function () {
    return this.qi_1;
  };
  AbstractCoroutine.prototype.ri = function () {
    return this.qi_1;
  };
  AbstractCoroutine.prototype.si = function () {
    return JobSupport.prototype.si.call(this);
  };
  AbstractCoroutine.prototype.ti = function (value) {
  };
  AbstractCoroutine.prototype.ui = function (cause, handled) {
  };
  AbstractCoroutine.prototype.vi = function () {
    return get_classSimpleName(this) + ' was cancelled';
  };
  AbstractCoroutine.prototype.wi = function (state) {
    if (state instanceof CompletedExceptionally)
      this.ui(state.xi_1, state.zi());
    else {
      this.ti((state == null ? true : isObject(state)) ? state : THROW_CCE());
    }
  };
  AbstractCoroutine.prototype.m3 = function (result) {
    var state = this.aj(toState$default(result, null, 1, null));
    if (state === get_COMPLETING_WAITING_CHILDREN())
      return Unit_getInstance();
    this.bj(state);
  };
  AbstractCoroutine.prototype.bj = function (state) {
    return this.cj(state);
  };
  AbstractCoroutine.prototype.dj = function (exception) {
    handleCoroutineException(this.qi_1, exception);
  };
  AbstractCoroutine.prototype.ej = function () {
    var tmp0_elvis_lhs = get_coroutineName(this.qi_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return JobSupport.prototype.ej.call(this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var coroutineName = tmp;
    return '"' + coroutineName + '":' + JobSupport.prototype.ej.call(this);
  };
  AbstractCoroutine.prototype.fj = function (start, receiver, block) {
    start.ij(block, receiver, this);
  };
  AbstractCoroutine.$metadata$ = classMeta('AbstractCoroutine', [Job, Continuation, CoroutineScope], undefined, undefined, undefined, JobSupport.prototype);
  function launch(_this__u8e3s4, context, start, block) {
    var newContext = newCoroutineContext(_this__u8e3s4, context);
    var coroutine = start.hk() ? new LazyStandaloneCoroutine(newContext, block) : new StandaloneCoroutine(newContext, true);
    coroutine.fj(start, coroutine, block);
    return coroutine;
  }
  function launch$default(_this__u8e3s4, context, start, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      context = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      start = CoroutineStart_DEFAULT_getInstance();
    return launch(_this__u8e3s4, context, start, block);
  }
  function StandaloneCoroutine(parentContext, active) {
    AbstractCoroutine.call(this, parentContext, true, active);
  }
  StandaloneCoroutine.prototype.fk = function (exception) {
    handleCoroutineException(this.o3(), exception);
    return true;
  };
  StandaloneCoroutine.$metadata$ = classMeta('StandaloneCoroutine', undefined, undefined, undefined, undefined, AbstractCoroutine.prototype);
  function LazyStandaloneCoroutine(parentContext, block) {
    StandaloneCoroutine.call(this, parentContext, false);
    this.ok_1 = createCoroutineUnintercepted(block, this, this);
  }
  LazyStandaloneCoroutine.prototype.oj = function () {
    startCoroutineCancellable_0(this.ok_1, this);
  };
  LazyStandaloneCoroutine.$metadata$ = classMeta('LazyStandaloneCoroutine', undefined, undefined, undefined, undefined, StandaloneCoroutine.prototype);
  function withContext(context, block, $cont) {
    {
    }
    var tmp$ret$0;
    $l$block_0: {
      var tmp0__anonymous__q1qw7t = $cont;
      var oldContext = tmp0__anonymous__q1qw7t.o3();
      var newContext = newCoroutineContext_0(oldContext, context);
      ensureActive(newContext);
      if (newContext === oldContext) {
        var coroutine = new ScopeCoroutine(newContext, tmp0__anonymous__q1qw7t);
        tmp$ret$0 = startUndispatchedOrReturn(coroutine, coroutine, block);
        break $l$block_0;
      }
      if (equals(newContext.z3(Key_getInstance()), oldContext.z3(Key_getInstance()))) {
        var coroutine_0 = new UndispatchedCoroutine(newContext, tmp0__anonymous__q1qw7t);
        var tmp$ret$1;
        {
          tmp$ret$0 = startUndispatchedOrReturn(coroutine_0, coroutine_0, block);
          break $l$block_0;
        }
      }
      var coroutine_1 = new DispatchedCoroutine(newContext, tmp0__anonymous__q1qw7t);
      startCoroutineCancellable$default(block, coroutine_1, coroutine_1, null, 4, null);
      tmp$ret$0 = coroutine_1.uk();
    }
    return tmp$ret$0;
  }
  function trySuspend($this) {
    {
      var tmp0_loop = $this.tk_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.ai_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          switch (tmp0_subject) {
            case 0:
              if ($this.tk_1.atomicfu$compareAndSet(0, 1))
                return true;
              break;
            case 2:
              return false;
            default:
              throw IllegalStateException_init_$Create$('Already suspended');
          }
        }
      }
    }
  }
  function tryResume($this) {
    {
      var tmp0_loop = $this.tk_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.ai_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          switch (tmp0_subject) {
            case 0:
              if ($this.tk_1.atomicfu$compareAndSet(0, 2))
                return true;
              break;
            case 1:
              return false;
            default:
              throw IllegalStateException_init_$Create$('Already resumed');
          }
        }
      }
    }
  }
  function DispatchedCoroutine(context, uCont) {
    ScopeCoroutine.call(this, context, uCont);
    this.tk_1 = atomic$int$1(0);
  }
  DispatchedCoroutine.prototype.cj = function (state) {
    this.bj(state);
  };
  DispatchedCoroutine.prototype.bj = function (state) {
    if (tryResume(this))
      return Unit_getInstance();
    var tmp = intercepted(this.zk());
    var tmp_0 = recoverResult(state, this.zk());
    resumeCancellableWith$default(tmp, tmp_0, null, 2, null);
  };
  DispatchedCoroutine.prototype.uk = function () {
    if (trySuspend(this))
      return get_COROUTINE_SUSPENDED();
    var state = unboxState(this.lj());
    if (state instanceof CompletedExceptionally)
      throw state.xi_1;
    return (state == null ? true : isObject(state)) ? state : THROW_CCE();
  };
  DispatchedCoroutine.$metadata$ = classMeta('DispatchedCoroutine', undefined, undefined, undefined, undefined, ScopeCoroutine.prototype);
  function get_UNDECIDED() {
    return UNDECIDED;
  }
  var UNDECIDED;
  function get_SUSPENDED() {
    return SUSPENDED;
  }
  var SUSPENDED;
  function get_RESUMED() {
    return RESUMED;
  }
  var RESUMED;
  function CancellableContinuation() {
  }
  CancellableContinuation.$metadata$ = interfaceMeta('CancellableContinuation', [Continuation]);
  function getOrCreateCancellableContinuation(delegate) {
    if (!(delegate instanceof DispatchedContinuation)) {
      return new CancellableContinuationImpl(delegate, get_MODE_CANCELLABLE());
    }
    var tmp0_safe_receiver = delegate.ml();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp_0;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_safe_receiver.tl();
        }
        if (tmp$ret$0) {
          tmp_0 = tmp0_safe_receiver;
        } else {
          tmp_0 = null;
        }
        tmp$ret$1 = tmp_0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_1;
    if (tmp1_elvis_lhs == null) {
      return new CancellableContinuationImpl(delegate, get_MODE_CANCELLABLE_REUSABLE());
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    return tmp_1;
  }
  function removeOnCancellation(_this__u8e3s4, node) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new RemoveOnCancel(node);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return _this__u8e3s4.el(tmp$ret$1);
  }
  function RemoveOnCancel(node) {
    BeforeResumeCancelHandler.call(this);
    this.ul_1 = node;
  }
  RemoveOnCancel.prototype.vl = function (cause) {
    this.ul_1.zl();
  };
  RemoveOnCancel.prototype.invoke = function (cause) {
    return this.vl(cause);
  };
  RemoveOnCancel.prototype.toString = function () {
    return 'RemoveOnCancel[' + this.ul_1 + ']';
  };
  RemoveOnCancel.$metadata$ = classMeta('RemoveOnCancel', undefined, undefined, undefined, undefined, BeforeResumeCancelHandler.prototype);
  function get_RESUME_TOKEN() {
    init_properties_CancellableContinuationImpl_kt_jcze1b();
    return RESUME_TOKEN;
  }
  var RESUME_TOKEN;
  function _get_stateDebugRepresentation__bf18u4($this) {
    var tmp0_subject = $this.lj();
    var tmp;
    if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
      tmp = 'Active';
    } else {
      if (tmp0_subject instanceof CancelledContinuation) {
        tmp = 'Cancelled';
      } else {
        tmp = 'Completed';
      }
    }
    return tmp;
  }
  function isReusable($this) {
    var tmp;
    if (get_isReusableMode($this.cm())) {
      var tmp_0 = $this.ol_1;
      tmp = (tmp_0 instanceof DispatchedContinuation ? tmp_0 : THROW_CCE()).am();
    } else {
      tmp = false;
    }
    return tmp;
  }
  function cancelLater($this, cause) {
    if (!isReusable($this))
      return false;
    var tmp = $this.ol_1;
    var dispatched = tmp instanceof DispatchedContinuation ? tmp : THROW_CCE();
    return dispatched.dm(cause);
  }
  function callCancelHandler($this, handler, cause) {
    var tmp;
    try {
      tmp = invokeIt(handler, cause);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = handleCoroutineException($this.o3(), new CompletionHandlerException('Exception in invokeOnCancellation handler for ' + $this, $p));
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function trySuspend_0($this) {
    {
      var tmp0_loop = $this.ql_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.ai_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          switch (tmp0_subject) {
            case 0:
              if ($this.ql_1.atomicfu$compareAndSet(0, 1))
                return true;
              break;
            case 2:
              return false;
            default:
              throw IllegalStateException_init_$Create$('Already suspended');
          }
        }
      }
    }
  }
  function tryResume_0($this) {
    {
      var tmp0_loop = $this.ql_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.ai_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          switch (tmp0_subject) {
            case 0:
              if ($this.ql_1.atomicfu$compareAndSet(0, 2))
                return true;
              break;
            case 1:
              return false;
            default:
              throw IllegalStateException_init_$Create$('Already resumed');
          }
        }
      }
    }
  }
  function installParentHandle($this) {
    var tmp0_elvis_lhs = $this.o3().z3(Key_getInstance_2());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var parent = tmp;
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new ChildContinuation($this);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var handle = parent.tj(true, false, tmp$ret$1, 2, null);
    $this.sl_1 = handle;
    return handle;
  }
  function releaseClaimedReusableContinuation($this) {
    var tmp = $this.ol_1;
    var tmp0_safe_receiver = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.em($this);
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var cancellationCause = tmp_0;
    $this.fm();
    $this.gm(cancellationCause);
  }
  function multipleHandlersError($this, handler, state) {
    {
      var tmp0_error = "It's prohibited to register multiple handlers, tried to register " + handler + ', already has ' + toString(state);
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    }
  }
  function makeCancelHandler($this, handler) {
    var tmp;
    if (handler instanceof CancelHandler) {
      tmp = handler;
    } else {
      tmp = new InvokeOnCancel(handler);
    }
    return tmp;
  }
  function dispatchResume($this, mode) {
    if (tryResume_0($this))
      return Unit_getInstance();
    dispatch($this, mode);
  }
  function resumedState($this, state, proposedUpdate, resumeMode, onCancellation, idempotent) {
    var tmp;
    if (proposedUpdate instanceof CompletedExceptionally) {
      {
      }
      {
      }
      tmp = proposedUpdate;
    } else {
      if (!get_isCancellableMode(resumeMode) ? idempotent == null : false) {
        tmp = proposedUpdate;
      } else {
        var tmp_0;
        var tmp_1;
        if (!(onCancellation == null)) {
          tmp_1 = true;
        } else {
          var tmp_2;
          if (state instanceof CancelHandler) {
            tmp_2 = !(state instanceof BeforeResumeCancelHandler);
          } else {
            tmp_2 = false;
          }
          tmp_1 = tmp_2;
        }
        if (tmp_1) {
          tmp_0 = true;
        } else {
          tmp_0 = !(idempotent == null);
        }
        if (tmp_0) {
          var tmp_3 = state instanceof CancelHandler ? state : null;
          tmp = CompletedContinuation_init_$Create$(proposedUpdate, tmp_3, onCancellation, idempotent, null, 16, null);
        } else {
          tmp = proposedUpdate;
        }
      }
    }
    return tmp;
  }
  function resumeImpl($this, proposedUpdate, resumeMode, onCancellation) {
    {
      var tmp0_loop = $this.rl_1;
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp1__anonymous__uwfjfc = tmp0_loop.zh_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
            var update = resumedState($this, tmp1__anonymous__uwfjfc, proposedUpdate, resumeMode, onCancellation, null);
            if (!$this.rl_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
              tmp$ret$0 = Unit_getInstance();
              break $l$block;
            }
            detachChildIfNonResuable($this);
            dispatchResume($this, resumeMode);
            return Unit_getInstance();
          } else {
            if (tmp0_subject instanceof CancelledContinuation) {
              if (tmp1__anonymous__uwfjfc.lm()) {
                var tmp1_safe_receiver = onCancellation;
                if (tmp1_safe_receiver == null)
                  null;
                else {
                  var tmp$ret$1;
                  {
                    {
                    }
                    tmp$ret$1 = $this.hm(tmp1_safe_receiver, tmp1__anonymous__uwfjfc.z());
                  }
                }
                return Unit_getInstance();
              }
            }
          }
          alreadyResumedError($this, proposedUpdate);
        }
      }
    }
  }
  function resumeImpl$default($this, proposedUpdate, resumeMode, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      onCancellation = null;
    return resumeImpl($this, proposedUpdate, resumeMode, onCancellation);
  }
  function tryResumeImpl($this, proposedUpdate, idempotent, onCancellation) {
    {
      var tmp0_loop = $this.rl_1;
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp1__anonymous__uwfjfc = tmp0_loop.zh_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
            var update = resumedState($this, tmp1__anonymous__uwfjfc, proposedUpdate, $this.cm(), onCancellation, idempotent);
            if (!$this.rl_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
              tmp$ret$0 = Unit_getInstance();
              break $l$block;
            }
            detachChildIfNonResuable($this);
            return get_RESUME_TOKEN();
          } else {
            if (tmp0_subject instanceof CompletedContinuation) {
              var tmp;
              if (!(idempotent == null) ? tmp1__anonymous__uwfjfc.pm_1 === idempotent : false) {
                {
                }
                tmp = get_RESUME_TOKEN();
              } else {
                tmp = null;
              }
              return tmp;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
  function alreadyResumedError($this, proposedUpdate) {
    {
      var tmp0_error = 'Already resumed, but proposed with update ' + toString(proposedUpdate);
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    }
  }
  function detachChildIfNonResuable($this) {
    if (!isReusable($this))
      $this.fm();
  }
  function CancellableContinuationImpl(delegate, resumeMode) {
    DispatchedTask.call(this, resumeMode);
    this.ol_1 = delegate;
    {
    }
    this.pl_1 = this.ol_1.o3();
    this.ql_1 = atomic$int$1(0);
    this.rl_1 = atomic$ref$1(Active_getInstance());
    this.sl_1 = null;
  }
  CancellableContinuationImpl.prototype.rm = function () {
    return this.ol_1;
  };
  CancellableContinuationImpl.prototype.o3 = function () {
    return this.pl_1;
  };
  CancellableContinuationImpl.prototype.lj = function () {
    return this.rl_1.zh_1;
  };
  CancellableContinuationImpl.prototype.mj = function () {
    var tmp = this.lj();
    return !(!(tmp == null) ? isInterface(tmp, NotCompleted) : false);
  };
  CancellableContinuationImpl.prototype.sm = function () {
    var tmp0_elvis_lhs = installParentHandle(this);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var handle = tmp;
    if (this.mj()) {
      handle.tm();
      this.sl_1 = NonDisposableHandle_getInstance();
    }
  };
  CancellableContinuationImpl.prototype.tl = function () {
    {
    }
    {
    }
    var state = this.rl_1.zh_1;
    {
    }
    var tmp;
    if (state instanceof CompletedContinuation) {
      tmp = !(state.pm_1 == null);
    } else {
      tmp = false;
    }
    if (tmp) {
      this.fm();
      return false;
    }
    this.ql_1.ai_1 = 0;
    this.rl_1.zh_1 = Active_getInstance();
    return true;
  };
  CancellableContinuationImpl.prototype.um = function () {
    return this.lj();
  };
  CancellableContinuationImpl.prototype.vm = function (takenState, cause) {
    var tmp0_loop = this.rl_1;
    while (true) {
      {
        var tmp1__anonymous__uwfjfc = tmp0_loop.zh_1;
        var tmp0_subject = tmp1__anonymous__uwfjfc;
        if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
          throw IllegalStateException_init_$Create$('Not completed');
        } else {
          if (tmp0_subject instanceof CompletedExceptionally)
            return Unit_getInstance();
          else {
            if (tmp0_subject instanceof CompletedContinuation) {
              {
                var tmp0_check = !tmp1__anonymous__uwfjfc.wm();
                {
                }
                if (!tmp0_check) {
                  var tmp$ret$0;
                  {
                    tmp$ret$0 = 'Must be called at most once';
                  }
                  var message = tmp$ret$0;
                  throw IllegalStateException_init_$Create$(toString_0(message));
                }
              }
              var update = tmp1__anonymous__uwfjfc.xm(null, null, null, null, cause, 15, null);
              if (this.rl_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
                tmp1__anonymous__uwfjfc.ym(this, cause);
                return Unit_getInstance();
              }
            } else {
              if (this.rl_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, CompletedContinuation_init_$Create$(tmp1__anonymous__uwfjfc, null, null, null, cause, 14, null))) {
                return Unit_getInstance();
              }
            }
          }
        }
      }
    }
    return Unit_getInstance();
  };
  CancellableContinuationImpl.prototype.gm = function (cause) {
    {
      var tmp0_loop = this.rl_1;
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp1__anonymous__uwfjfc = tmp0_loop.zh_1;
          if (!(!(tmp1__anonymous__uwfjfc == null) ? isInterface(tmp1__anonymous__uwfjfc, NotCompleted) : false))
            return false;
          var update = new CancelledContinuation(this, cause, tmp1__anonymous__uwfjfc instanceof CancelHandler);
          if (!this.rl_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          }
          var tmp0_safe_receiver = tmp1__anonymous__uwfjfc instanceof CancelHandler ? tmp1__anonymous__uwfjfc : null;
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$1;
            {
              {
              }
              tmp$ret$1 = this.zm(tmp0_safe_receiver, cause);
            }
          }
          detachChildIfNonResuable(this);
          dispatchResume(this, this.cm());
          return true;
        }
      }
    }
  };
  CancellableContinuationImpl.prototype.an = function (cause) {
    if (cancelLater(this, cause))
      return Unit_getInstance();
    this.gm(cause);
    detachChildIfNonResuable(this);
  };
  CancellableContinuationImpl.prototype.zm = function (handler, cause) {
    var tmp;
    try {
      tmp = handler.invoke(cause);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = handleCoroutineException(this.o3(), new CompletionHandlerException('Exception in invokeOnCancellation handler for ' + this, $p));
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.hm = function (onCancellation, cause) {
    try {
      onCancellation(cause);
    } catch ($p) {
      if ($p instanceof Error) {
        handleCoroutineException(this.o3(), new CompletionHandlerException('Exception in resume onCancellation handler for ' + this, $p));
      } else {
        throw $p;
      }
    }
  };
  CancellableContinuationImpl.prototype.bn = function (parent) {
    return parent.pj();
  };
  CancellableContinuationImpl.prototype.uk = function () {
    var isReusable_0 = isReusable(this);
    if (trySuspend_0(this)) {
      if (this.sl_1 == null) {
        installParentHandle(this);
      }
      if (isReusable_0) {
        releaseClaimedReusableContinuation(this);
      }
      return get_COROUTINE_SUSPENDED();
    }
    if (isReusable_0) {
      releaseClaimedReusableContinuation(this);
    }
    var state = this.lj();
    if (state instanceof CompletedExceptionally)
      throw recoverStackTrace(state.xi_1, this);
    if (get_isCancellableMode(this.cm())) {
      var job = this.o3().z3(Key_getInstance_2());
      if (!(job == null) ? !job.si() : false) {
        var cause = job.pj();
        this.vm(state, cause);
        throw recoverStackTrace(cause, this);
      }
    }
    return this.cn(state);
  };
  CancellableContinuationImpl.prototype.m3 = function (result) {
    var tmp = toState(result, this);
    var tmp_0 = this.cm();
    return resumeImpl$default(this, tmp, tmp_0, null, 8, null);
  };
  CancellableContinuationImpl.prototype.fl = function (value, onCancellation) {
    return resumeImpl(this, value, this.cm(), onCancellation);
  };
  CancellableContinuationImpl.prototype.el = function (handler) {
    var cancelHandler = makeCancelHandler(this, handler);
    {
      var tmp0_loop = this.rl_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.zh_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (tmp0_subject instanceof Active) {
            if (this.rl_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, cancelHandler))
              return Unit_getInstance();
          } else {
            if (tmp0_subject instanceof CancelHandler)
              multipleHandlersError(this, handler, tmp1__anonymous__uwfjfc);
            else {
              if (tmp0_subject instanceof CompletedExceptionally) {
                if (!tmp1__anonymous__uwfjfc.dn())
                  multipleHandlersError(this, handler, tmp1__anonymous__uwfjfc);
                if (tmp1__anonymous__uwfjfc instanceof CancelledContinuation) {
                  var tmp1_safe_receiver = tmp1__anonymous__uwfjfc instanceof CompletedExceptionally ? tmp1__anonymous__uwfjfc : null;
                  callCancelHandler(this, handler, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.xi_1);
                }
                return Unit_getInstance();
              } else {
                if (tmp0_subject instanceof CompletedContinuation) {
                  if (!(tmp1__anonymous__uwfjfc.nm_1 == null))
                    multipleHandlersError(this, handler, tmp1__anonymous__uwfjfc);
                  if (cancelHandler instanceof BeforeResumeCancelHandler)
                    return Unit_getInstance();
                  if (tmp1__anonymous__uwfjfc.wm()) {
                    callCancelHandler(this, handler, tmp1__anonymous__uwfjfc.qm_1);
                    return Unit_getInstance();
                  }
                  var update = tmp1__anonymous__uwfjfc.xm(null, cancelHandler, null, null, null, 29, null);
                  if (this.rl_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update))
                    return Unit_getInstance();
                } else {
                  if (cancelHandler instanceof BeforeResumeCancelHandler)
                    return Unit_getInstance();
                  var update_0 = CompletedContinuation_init_$Create$(tmp1__anonymous__uwfjfc, cancelHandler, null, null, null, 28, null);
                  if (this.rl_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update_0))
                    return Unit_getInstance();
                }
              }
            }
          }
        }
      }
    }
  };
  CancellableContinuationImpl.prototype.fm = function () {
    var tmp0_elvis_lhs = this.sl_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var handle = tmp;
    handle.tm();
    this.sl_1 = NonDisposableHandle_getInstance();
  };
  CancellableContinuationImpl.prototype.bl = function (value, idempotent) {
    return tryResumeImpl(this, value, idempotent, null);
  };
  CancellableContinuationImpl.prototype.cl = function (value, idempotent, onCancellation) {
    return tryResumeImpl(this, value, idempotent, onCancellation);
  };
  CancellableContinuationImpl.prototype.dl = function (token) {
    {
    }
    dispatchResume(this, this.cm());
  };
  CancellableContinuationImpl.prototype.cn = function (state) {
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof CompletedContinuation) {
      var tmp_0 = state.mm_1;
      tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
    } else {
      tmp = (state == null ? true : isObject(state)) ? state : THROW_CCE();
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.en = function (state) {
    var tmp0_safe_receiver = DispatchedTask.prototype.en.call(this, state);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = recoverStackTrace(tmp0_safe_receiver, this.ol_1);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.toString = function () {
    return this.ej() + '(' + toDebugString(this.ol_1) + '){' + _get_stateDebugRepresentation__bf18u4(this) + '}@' + get_hexAddress(this);
  };
  CancellableContinuationImpl.prototype.ej = function () {
    return 'CancellableContinuation';
  };
  CancellableContinuationImpl.$metadata$ = classMeta('CancellableContinuationImpl', [CancellableContinuation, CoroutineStackFrame], undefined, undefined, undefined, DispatchedTask.prototype);
  function CancelHandler() {
    CancelHandlerBase.call(this);
  }
  CancelHandler.$metadata$ = classMeta('CancelHandler', [NotCompleted], undefined, undefined, undefined, CancelHandlerBase.prototype);
  function get_UNDECIDED_0() {
    return UNDECIDED_0;
  }
  var UNDECIDED_0;
  function Active() {
    Active_instance = this;
  }
  Active.prototype.toString = function () {
    return 'Active';
  };
  Active.$metadata$ = objectMeta('Active', [NotCompleted]);
  var Active_instance;
  function Active_getInstance() {
    if (Active_instance == null)
      new Active();
    return Active_instance;
  }
  function NotCompleted() {
  }
  NotCompleted.$metadata$ = interfaceMeta('NotCompleted');
  function CompletedContinuation_init_$Init$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      cancelHandler = null;
    if (!(($mask0 & 4) === 0))
      onCancellation = null;
    if (!(($mask0 & 8) === 0))
      idempotentResume = null;
    if (!(($mask0 & 16) === 0))
      cancelCause = null;
    CompletedContinuation.call($this, result, cancelHandler, onCancellation, idempotentResume, cancelCause);
    return $this;
  }
  function CompletedContinuation_init_$Create$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker) {
    return CompletedContinuation_init_$Init$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker, Object.create(CompletedContinuation.prototype));
  }
  function CompletedContinuation(result, cancelHandler, onCancellation, idempotentResume, cancelCause) {
    this.mm_1 = result;
    this.nm_1 = cancelHandler;
    this.om_1 = onCancellation;
    this.pm_1 = idempotentResume;
    this.qm_1 = cancelCause;
  }
  CompletedContinuation.prototype.hn = function () {
    return this.nm_1;
  };
  CompletedContinuation.prototype.in = function () {
    return this.pm_1;
  };
  CompletedContinuation.prototype.jn = function () {
    return this.qm_1;
  };
  CompletedContinuation.prototype.wm = function () {
    return !(this.qm_1 == null);
  };
  CompletedContinuation.prototype.ym = function (cont, cause) {
    var tmp0_safe_receiver = this.nm_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = cont.zm(tmp0_safe_receiver, cause);
      }
    }
    var tmp1_safe_receiver = this.om_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        tmp$ret$1 = cont.hm(tmp1_safe_receiver, cause);
      }
    }
  };
  CompletedContinuation.prototype.kn = function (result, cancelHandler, onCancellation, idempotentResume, cancelCause) {
    return new CompletedContinuation(result, cancelHandler, onCancellation, idempotentResume, cancelCause);
  };
  CompletedContinuation.prototype.xm = function (result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      result = this.mm_1;
    if (!(($mask0 & 2) === 0))
      cancelHandler = this.nm_1;
    if (!(($mask0 & 4) === 0))
      onCancellation = this.om_1;
    if (!(($mask0 & 8) === 0))
      idempotentResume = this.pm_1;
    if (!(($mask0 & 16) === 0))
      cancelCause = this.qm_1;
    return this.kn(result, cancelHandler, onCancellation, idempotentResume, cancelCause);
  };
  CompletedContinuation.prototype.toString = function () {
    return 'CompletedContinuation(result=' + toString(this.mm_1) + ', cancelHandler=' + this.nm_1 + ', onCancellation=' + this.om_1 + ', idempotentResume=' + toString(this.pm_1) + ', cancelCause=' + this.qm_1 + ')';
  };
  CompletedContinuation.prototype.hashCode = function () {
    var result = this.mm_1 == null ? 0 : hashCode(this.mm_1);
    result = imul(result, 31) + (this.nm_1 == null ? 0 : hashCode(this.nm_1)) | 0;
    result = imul(result, 31) + (this.om_1 == null ? 0 : hashCode(this.om_1)) | 0;
    result = imul(result, 31) + (this.pm_1 == null ? 0 : hashCode(this.pm_1)) | 0;
    result = imul(result, 31) + (this.qm_1 == null ? 0 : hashCode(this.qm_1)) | 0;
    return result;
  };
  CompletedContinuation.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CompletedContinuation))
      return false;
    var tmp0_other_with_cast = other instanceof CompletedContinuation ? other : THROW_CCE();
    if (!equals(this.mm_1, tmp0_other_with_cast.mm_1))
      return false;
    if (!equals(this.nm_1, tmp0_other_with_cast.nm_1))
      return false;
    if (!equals(this.om_1, tmp0_other_with_cast.om_1))
      return false;
    if (!equals(this.pm_1, tmp0_other_with_cast.pm_1))
      return false;
    if (!equals(this.qm_1, tmp0_other_with_cast.qm_1))
      return false;
    return true;
  };
  CompletedContinuation.$metadata$ = classMeta('CompletedContinuation');
  function get_SUSPENDED_0() {
    return SUSPENDED_0;
  }
  var SUSPENDED_0;
  function get_RESUMED_0() {
    return RESUMED_0;
  }
  var RESUMED_0;
  function BeforeResumeCancelHandler() {
    CancelHandler.call(this);
  }
  BeforeResumeCancelHandler.$metadata$ = classMeta('BeforeResumeCancelHandler', undefined, undefined, undefined, undefined, CancelHandler.prototype);
  function InvokeOnCancel(handler) {
    CancelHandler.call(this);
    this.ln_1 = handler;
  }
  InvokeOnCancel.prototype.vl = function (cause) {
    this.ln_1(cause);
  };
  InvokeOnCancel.prototype.invoke = function (cause) {
    return this.vl(cause);
  };
  InvokeOnCancel.prototype.toString = function () {
    return 'InvokeOnCancel[' + get_classSimpleName(this.ln_1) + '@' + get_hexAddress(this) + ']';
  };
  InvokeOnCancel.$metadata$ = classMeta('InvokeOnCancel', undefined, undefined, undefined, undefined, CancelHandler.prototype);
  var properties_initialized_CancellableContinuationImpl_kt_xtzb03;
  function init_properties_CancellableContinuationImpl_kt_jcze1b() {
    if (properties_initialized_CancellableContinuationImpl_kt_xtzb03) {
    } else {
      properties_initialized_CancellableContinuationImpl_kt_xtzb03 = true;
      RESUME_TOKEN = new Symbol('RESUME_TOKEN');
    }
  }
  function CompletableJob() {
  }
  CompletableJob.$metadata$ = interfaceMeta('CompletableJob', [Job]);
  function CompletedExceptionally_init_$Init$(cause, handled, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      handled = false;
    CompletedExceptionally.call($this, cause, handled);
    return $this;
  }
  function CompletedExceptionally_init_$Create$(cause, handled, $mask0, $marker) {
    return CompletedExceptionally_init_$Init$(cause, handled, $mask0, $marker, Object.create(CompletedExceptionally.prototype));
  }
  function CompletedExceptionally(cause, handled) {
    this.xi_1 = cause;
    this.yi_1 = atomic$boolean$1(handled);
  }
  CompletedExceptionally.prototype.z = function () {
    return this.xi_1;
  };
  CompletedExceptionally.prototype.zi = function () {
    return this.yi_1.gi_1;
  };
  CompletedExceptionally.prototype.dn = function () {
    return this.yi_1.atomicfu$compareAndSet(false, true);
  };
  CompletedExceptionally.prototype.toString = function () {
    return get_classSimpleName(this) + '[' + this.xi_1 + ']';
  };
  CompletedExceptionally.$metadata$ = classMeta('CompletedExceptionally');
  function CancelledContinuation(continuation, cause, handled) {
    var tmp0_elvis_lhs = cause;
    CompletedExceptionally.call(this, tmp0_elvis_lhs == null ? CancellationException_init_$Create$('Continuation ' + continuation + ' was cancelled normally') : tmp0_elvis_lhs, handled);
    this.km_1 = atomic$boolean$1(false);
  }
  CancelledContinuation.prototype.lm = function () {
    return this.km_1.atomicfu$compareAndSet(false, true);
  };
  CancelledContinuation.$metadata$ = classMeta('CancelledContinuation', undefined, undefined, undefined, undefined, CompletedExceptionally.prototype);
  function toState(_this__u8e3s4, caller) {
    var tmp$ret$2;
    {
      {
      }
      var exception = Result__exceptionOrNull_impl_p6xea9(_this__u8e3s4);
      var tmp;
      if (exception == null) {
        var tmp$ret$0;
        {
          var tmp_0 = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
          var tmp0__anonymous__q1qw7t = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
          tmp$ret$0 = tmp0__anonymous__q1qw7t;
        }
        tmp = tmp$ret$0;
      } else {
        var tmp$ret$1;
        {
          var tmp_1 = recoverStackTrace(exception, caller);
          tmp$ret$1 = CompletedExceptionally_init_$Create$(tmp_1, false, 2, null);
        }
        tmp = tmp$ret$1;
      }
      tmp$ret$2 = tmp;
    }
    return tmp$ret$2;
  }
  function toState_0(_this__u8e3s4, onCancellation) {
    var tmp$ret$2;
    {
      {
      }
      var exception = Result__exceptionOrNull_impl_p6xea9(_this__u8e3s4);
      var tmp;
      if (exception == null) {
        var tmp$ret$0;
        {
          var tmp_0 = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
          var tmp0__anonymous__q1qw7t = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
          tmp$ret$0 = !(onCancellation == null) ? new CompletedWithCancellation(tmp0__anonymous__q1qw7t, onCancellation) : tmp0__anonymous__q1qw7t;
        }
        tmp = tmp$ret$0;
      } else {
        var tmp$ret$1;
        {
          tmp$ret$1 = CompletedExceptionally_init_$Create$(exception, false, 2, null);
        }
        tmp = tmp$ret$1;
      }
      tmp$ret$2 = tmp;
    }
    return tmp$ret$2;
  }
  function toState$default(_this__u8e3s4, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      onCancellation = null;
    return toState_0(_this__u8e3s4, onCancellation);
  }
  function CompletedWithCancellation(result, onCancellation) {
    this.pn_1 = result;
    this.qn_1 = onCancellation;
  }
  CompletedWithCancellation.prototype.toString = function () {
    return 'CompletedWithCancellation(result=' + toString(this.pn_1) + ', onCancellation=' + this.qn_1 + ')';
  };
  CompletedWithCancellation.prototype.hashCode = function () {
    var result = this.pn_1 == null ? 0 : hashCode(this.pn_1);
    result = imul(result, 31) + hashCode(this.qn_1) | 0;
    return result;
  };
  CompletedWithCancellation.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CompletedWithCancellation))
      return false;
    var tmp0_other_with_cast = other instanceof CompletedWithCancellation ? other : THROW_CCE();
    if (!equals(this.pn_1, tmp0_other_with_cast.pn_1))
      return false;
    if (!equals(this.qn_1, tmp0_other_with_cast.qn_1))
      return false;
    return true;
  };
  CompletedWithCancellation.$metadata$ = classMeta('CompletedWithCancellation');
  function recoverResult(state, uCont) {
    var tmp;
    if (state instanceof CompletedExceptionally) {
      var tmp$ret$0;
      {
        var tmp0_failure = Companion_getInstance();
        var tmp1_failure = recoverStackTrace(state.xi_1, uCont);
        tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_failure));
      }
      tmp = tmp$ret$0;
    } else {
      var tmp$ret$1;
      {
        var tmp2_success = Companion_getInstance();
        var tmp3_success = (state == null ? true : isObject(state)) ? state : THROW_CCE();
        tmp$ret$1 = _Result___init__impl__xyqfz8(tmp3_success);
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function CoroutineDispatcher$Key$_init_$lambda_akl8b5() {
    return function (it) {
      return it instanceof CoroutineDispatcher ? it : null;
    };
  }
  function Key_0() {
    Key_instance = this;
    var tmp = Key_getInstance();
    AbstractCoroutineContextKey.call(this, tmp, CoroutineDispatcher$Key$_init_$lambda_akl8b5());
  }
  Key_0.$metadata$ = objectMeta('Key', undefined, undefined, undefined, undefined, AbstractCoroutineContextKey.prototype);
  var Key_instance;
  function Key_getInstance_0() {
    if (Key_instance == null)
      new Key_0();
    return Key_instance;
  }
  function CoroutineDispatcher() {
    Key_getInstance_0();
    AbstractCoroutineContextElement.call(this, Key_getInstance());
  }
  CoroutineDispatcher.prototype.sn = function (context) {
    return true;
  };
  CoroutineDispatcher.prototype.x3 = function (continuation) {
    return new DispatchedContinuation(this, continuation);
  };
  CoroutineDispatcher.prototype.y3 = function (continuation) {
    var dispatched = continuation instanceof DispatchedContinuation ? continuation : THROW_CCE();
    dispatched.un();
  };
  CoroutineDispatcher.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this);
  };
  CoroutineDispatcher.$metadata$ = classMeta('CoroutineDispatcher', [ContinuationInterceptor], undefined, undefined, undefined, AbstractCoroutineContextElement.prototype);
  function handleCoroutineException(context, exception) {
    try {
      var tmp0_safe_receiver = context.z3(Key_getInstance_1());
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp0_safe_receiver.vn(context, exception);
          return Unit_getInstance();
        }
      }
    } catch ($p) {
      if ($p instanceof Error) {
        handleCoroutineExceptionImpl(context, handlerException(exception, $p));
        return Unit_getInstance();
      } else {
        throw $p;
      }
    }
    handleCoroutineExceptionImpl(context, exception);
  }
  function Key_1() {
    Key_instance_0 = this;
  }
  Key_1.$metadata$ = objectMeta('Key', [Key]);
  var Key_instance_0;
  function Key_getInstance_1() {
    if (Key_instance_0 == null)
      new Key_1();
    return Key_instance_0;
  }
  function handlerException(originalException, thrownException) {
    if (originalException === thrownException)
      return originalException;
    var tmp$ret$0;
    {
      var tmp0_apply = RuntimeException_init_$Create$('Exception while trying to handle coroutine exception', thrownException);
      {
      }
      {
        {
        }
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function CoroutineScope() {
  }
  CoroutineScope.$metadata$ = interfaceMeta('CoroutineScope');
  function coroutineScope(block, $cont) {
    {
    }
    var tmp$ret$0;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var coroutine = new ScopeCoroutine(tmp0__anonymous__q1qw7t.o3(), tmp0__anonymous__q1qw7t);
      tmp$ret$0 = startUndispatchedOrReturn(coroutine, coroutine, block);
    }
    return tmp$ret$0;
  }
  function CoroutineScope_0(context) {
    var tmp;
    if (!(context.z3(Key_getInstance_2()) == null)) {
      tmp = context;
    } else {
      tmp = context.g4(Job$default(null, 1, null));
    }
    return new ContextScope(tmp);
  }
  var CoroutineStart_DEFAULT_instance;
  var CoroutineStart_LAZY_instance;
  var CoroutineStart_ATOMIC_instance;
  var CoroutineStart_UNDISPATCHED_instance;
  var CoroutineStart_entriesInitialized;
  function CoroutineStart_initEntries() {
    if (CoroutineStart_entriesInitialized)
      return Unit_getInstance();
    CoroutineStart_entriesInitialized = true;
    CoroutineStart_DEFAULT_instance = new CoroutineStart('DEFAULT', 0);
    CoroutineStart_LAZY_instance = new CoroutineStart('LAZY', 1);
    CoroutineStart_ATOMIC_instance = new CoroutineStart('ATOMIC', 2);
    CoroutineStart_UNDISPATCHED_instance = new CoroutineStart('UNDISPATCHED', 3);
  }
  function CoroutineStart(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CoroutineStart.prototype.ij = function (block, receiver, completion) {
    var tmp0_subject = this;
    var tmp0 = tmp0_subject.u4();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = startCoroutineCancellable$default(block, receiver, completion, null, 4, null);
        break;
      case 2:
        tmp = startCoroutine(block, receiver, completion);
        break;
      case 3:
        tmp = startCoroutineUndispatched(block, receiver, completion);
        break;
      case 1:
        tmp = Unit_getInstance();
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  CoroutineStart.prototype.hk = function () {
    return this === CoroutineStart_LAZY_getInstance();
  };
  CoroutineStart.$metadata$ = classMeta('CoroutineStart', undefined, undefined, undefined, undefined, Enum.prototype);
  function CoroutineStart_DEFAULT_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_DEFAULT_instance;
  }
  function CoroutineStart_LAZY_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_LAZY_instance;
  }
  function CoroutineStart_ATOMIC_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_ATOMIC_instance;
  }
  function CopyableThrowable() {
  }
  CopyableThrowable.$metadata$ = interfaceMeta('CopyableThrowable');
  function Delay() {
  }
  Delay.$metadata$ = interfaceMeta('Delay');
  function delta($this, unconfined) {
    return unconfined ? new Long(0, 1) : new Long(1, 0);
  }
  function EventLoop() {
    CoroutineDispatcher.call(this);
    this.xn_1 = new Long(0, 0);
    this.yn_1 = false;
    this.zn_1 = null;
  }
  EventLoop.prototype.ao = function () {
    var tmp0_elvis_lhs = this.zn_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    var tmp1_elvis_lhs = queue.eo();
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var task = tmp_0;
    task.fn();
    return true;
  };
  EventLoop.prototype.fo = function (task) {
    var tmp0_elvis_lhs = this.zn_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_also = new ArrayQueue();
        {
        }
        {
          this.zn_1 = tmp0_also;
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    queue.go(task);
  };
  EventLoop.prototype.ho = function () {
    return this.xn_1.r(delta(this, true)) >= 0;
  };
  EventLoop.prototype.io = function () {
    var tmp0_safe_receiver = this.zn_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.jo();
    return tmp1_elvis_lhs == null ? true : tmp1_elvis_lhs;
  };
  EventLoop.prototype.ko = function (unconfined) {
    var tmp0_this = this;
    tmp0_this.xn_1 = tmp0_this.xn_1.z4(delta(this, unconfined));
    if (!unconfined)
      this.yn_1 = true;
  };
  EventLoop.prototype.lo = function (unconfined) {
    var tmp0_this = this;
    tmp0_this.xn_1 = tmp0_this.xn_1.a5(delta(this, unconfined));
    if (this.xn_1.r(new Long(0, 0)) > 0)
      return Unit_getInstance();
    {
    }
    if (this.yn_1) {
      this.mo();
    }
  };
  EventLoop.prototype.mo = function () {
  };
  EventLoop.$metadata$ = classMeta('EventLoop', undefined, undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function ThreadLocalEventLoop() {
    ThreadLocalEventLoop_instance = this;
    this.no_1 = new CommonThreadLocal();
  }
  ThreadLocalEventLoop.prototype.oo = function () {
    var tmp0_elvis_lhs = this.no_1.qo();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_also = createEventLoop();
        {
        }
        {
          ThreadLocalEventLoop_getInstance().no_1.ro(tmp0_also);
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  ThreadLocalEventLoop.$metadata$ = objectMeta('ThreadLocalEventLoop');
  var ThreadLocalEventLoop_instance;
  function ThreadLocalEventLoop_getInstance() {
    if (ThreadLocalEventLoop_instance == null)
      new ThreadLocalEventLoop();
    return ThreadLocalEventLoop_instance;
  }
  function CompletionHandlerException(message, cause) {
    RuntimeException_init_$Init$(message, cause, this);
    captureStack(this, CompletionHandlerException);
  }
  CompletionHandlerException.$metadata$ = classMeta('CompletionHandlerException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function CoroutinesInternalError(message, cause) {
    Error_init_$Init$(message, cause, this);
    captureStack(this, CoroutinesInternalError);
  }
  CoroutinesInternalError.$metadata$ = classMeta('CoroutinesInternalError', undefined, undefined, undefined, undefined, Error_0.prototype);
  function DisposableHandle() {
  }
  DisposableHandle.$metadata$ = interfaceMeta('DisposableHandle');
  function Key_2() {
    Key_instance_1 = this;
  }
  Key_2.$metadata$ = objectMeta('Key', [Key]);
  var Key_instance_1;
  function Key_getInstance_2() {
    if (Key_instance_1 == null)
      new Key_2();
    return Key_instance_1;
  }
  function Job() {
  }
  Job.$metadata$ = interfaceMeta('Job', [Element]);
  function ChildJob() {
  }
  ChildJob.$metadata$ = interfaceMeta('ChildJob', [Job]);
  function ParentJob() {
  }
  ParentJob.$metadata$ = interfaceMeta('ParentJob', [Job]);
  function ChildHandle() {
  }
  ChildHandle.$metadata$ = interfaceMeta('ChildHandle', [DisposableHandle]);
  function NonDisposableHandle() {
    NonDisposableHandle_instance = this;
  }
  NonDisposableHandle.prototype.al = function () {
    return null;
  };
  NonDisposableHandle.prototype.tm = function () {
  };
  NonDisposableHandle.prototype.xj = function (cause) {
    return false;
  };
  NonDisposableHandle.prototype.toString = function () {
    return 'NonDisposableHandle';
  };
  NonDisposableHandle.$metadata$ = objectMeta('NonDisposableHandle', [DisposableHandle, ChildHandle]);
  var NonDisposableHandle_instance;
  function NonDisposableHandle_getInstance() {
    if (NonDisposableHandle_instance == null)
      new NonDisposableHandle();
    return NonDisposableHandle_instance;
  }
  function ensureActive(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.z3(Key_getInstance_2());
    if (tmp0_safe_receiver == null)
      null;
    else {
      ensureActive_0(tmp0_safe_receiver);
    }
  }
  function ensureActive_0(_this__u8e3s4) {
    if (!_this__u8e3s4.si())
      throw _this__u8e3s4.pj();
  }
  function Job_0(parent) {
    return new JobImpl(parent);
  }
  function Job$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return Job_0(parent);
  }
  function get_COMPLETING_ALREADY() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_ALREADY;
  }
  var COMPLETING_ALREADY;
  function get_COMPLETING_WAITING_CHILDREN() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_WAITING_CHILDREN;
  }
  var COMPLETING_WAITING_CHILDREN;
  function get_COMPLETING_RETRY() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_RETRY;
  }
  var COMPLETING_RETRY;
  function get_TOO_LATE_TO_CANCEL() {
    init_properties_JobSupport_kt_iaxwag();
    return TOO_LATE_TO_CANCEL;
  }
  var TOO_LATE_TO_CANCEL;
  function get_SEALED() {
    init_properties_JobSupport_kt_iaxwag();
    return SEALED;
  }
  var SEALED;
  function get_EMPTY_NEW() {
    init_properties_JobSupport_kt_iaxwag();
    return EMPTY_NEW;
  }
  var EMPTY_NEW;
  function get_EMPTY_ACTIVE() {
    init_properties_JobSupport_kt_iaxwag();
    return EMPTY_ACTIVE;
  }
  var EMPTY_ACTIVE;
  function Empty(isActive) {
    this.so_1 = isActive;
  }
  Empty.prototype.si = function () {
    return this.so_1;
  };
  Empty.prototype.to = function () {
    return null;
  };
  Empty.prototype.toString = function () {
    return 'Empty{' + (this.so_1 ? 'Active' : 'New') + '}';
  };
  Empty.$metadata$ = classMeta('Empty', [Incomplete]);
  function Incomplete() {
  }
  Incomplete.$metadata$ = interfaceMeta('Incomplete');
  function NodeList() {
    LinkedListHead.call(this);
  }
  NodeList.prototype.si = function () {
    return true;
  };
  NodeList.prototype.to = function () {
    return this;
  };
  NodeList.prototype.xo = function (state) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          tmp0_apply.b6('List{');
          tmp0_apply.b6(state);
          tmp0_apply.b6('}[');
          var first = true;
          {
            var cur = this.yo();
            while (!equals(cur, this)) {
              if (cur instanceof JobNode) {
                var tmp0__anonymous__q1qw7t = cur;
                if (first)
                  first = false;
                else {
                  tmp0_apply.b6(', ');
                }
                tmp0_apply.a6(tmp0__anonymous__q1qw7t);
              }
              cur = cur.wl_1;
            }
          }
          tmp0_apply.b6(']');
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  };
  NodeList.prototype.toString = function () {
    return get_DEBUG() ? this.xo('Active') : anyToString(this);
  };
  NodeList.$metadata$ = classMeta('NodeList', [Incomplete], undefined, undefined, undefined, LinkedListHead.prototype);
  function JobNode() {
    CompletionHandlerBase.call(this);
  }
  JobNode.prototype.pp = function () {
    var tmp = this.op_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('job');
    }
  };
  JobNode.prototype.si = function () {
    return true;
  };
  JobNode.prototype.to = function () {
    return null;
  };
  JobNode.prototype.tm = function () {
    return this.pp().uj(this);
  };
  JobNode.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this) + '[job@' + get_hexAddress(this.pp()) + ']';
  };
  JobNode.$metadata$ = classMeta('JobNode', [DisposableHandle, Incomplete], undefined, undefined, undefined, CompletionHandlerBase.prototype);
  function _set_exceptionsHolder__tqm22h($this, value) {
    $this.up_1.zh_1 = value;
  }
  function _get_exceptionsHolder__nhszp($this) {
    return $this.up_1.zh_1;
  }
  function allocateList($this) {
    return ArrayList_init_$Create$(4);
  }
  function finalizeFinishingState($this, state, proposedUpdate) {
    {
    }
    {
    }
    {
    }
    var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
    var proposedException = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.xi_1;
    var wasCancelling = false;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        wasCancelling = state.vp();
        var exceptions = state.wp(proposedException);
        var finalCause = getFinalRootCause($this, state, exceptions);
        if (!(finalCause == null))
          addSuppressedExceptions($this, finalCause, exceptions);
        tmp$ret$0 = finalCause;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var finalException = tmp$ret$1;
    var tmp;
    if (finalException == null) {
      tmp = proposedUpdate;
    } else if (finalException === proposedException) {
      tmp = proposedUpdate;
    } else {
      tmp = CompletedExceptionally_init_$Create$(finalException, false, 2, null);
    }
    var finalState = tmp;
    if (!(finalException == null)) {
      var handled = cancelParent($this, finalException) ? true : $this.fk(finalException);
      if (handled) {
        (finalState instanceof CompletedExceptionally ? finalState : THROW_CCE()).dn();
      }
    }
    if (!wasCancelling)
      $this.ck(finalException);
    $this.wi(finalState);
    var casSuccess = $this.li_1.atomicfu$compareAndSet(state, boxIncomplete(finalState));
    {
    }
    completeStateFinalization($this, state, finalState);
    return finalState;
  }
  function getFinalRootCause($this, state, exceptions) {
    if (exceptions.i()) {
      if (state.vp()) {
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = null;
          tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs == null ? $this.vi() : tmp0_elvis_lhs, null, $this);
        }
        return tmp$ret$0;
      }
      return null;
    }
    var tmp$ret$2;
    $l$block: {
      var tmp0_iterator = exceptions.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = !(element instanceof CancellationException);
        }
        if (tmp$ret$1) {
          tmp$ret$2 = element;
          break $l$block;
        }
      }
      tmp$ret$2 = null;
    }
    var firstNonCancellation = tmp$ret$2;
    if (!(firstNonCancellation == null))
      return firstNonCancellation;
    var first = exceptions.h(0);
    if (first instanceof TimeoutCancellationException) {
      var tmp$ret$4;
      $l$block_0: {
        var tmp0_iterator_0 = exceptions.d();
        while (tmp0_iterator_0.e()) {
          var element_0 = tmp0_iterator_0.f();
          var tmp$ret$3;
          {
            var tmp;
            if (!(element_0 === first)) {
              tmp = element_0 instanceof TimeoutCancellationException;
            } else {
              tmp = false;
            }
            tmp$ret$3 = tmp;
          }
          if (tmp$ret$3) {
            tmp$ret$4 = element_0;
            break $l$block_0;
          }
        }
        tmp$ret$4 = null;
      }
      var detailedTimeoutException = tmp$ret$4;
      if (!(detailedTimeoutException == null))
        return detailedTimeoutException;
    }
    return first;
  }
  function addSuppressedExceptions($this, rootCause, exceptions) {
    if (exceptions.g() <= 1)
      return Unit_getInstance();
    var seenExceptions = identitySet(exceptions.g());
    var unwrappedCause = unwrap(rootCause);
    var tmp0_iterator = exceptions.d();
    while (tmp0_iterator.e()) {
      var exception = tmp0_iterator.f();
      var unwrapped = unwrap(exception);
      var tmp;
      var tmp_0;
      if (!(unwrapped === rootCause) ? !(unwrapped === unwrappedCause) : false) {
        tmp_0 = !(unwrapped instanceof CancellationException);
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = seenExceptions.c(unwrapped);
      } else {
        tmp = false;
      }
      if (tmp) {
        {
        }
      }
    }
  }
  function tryFinalizeSimpleState($this, state, update) {
    {
    }
    {
    }
    if (!$this.li_1.atomicfu$compareAndSet(state, boxIncomplete(update)))
      return false;
    $this.ck(null);
    $this.wi(update);
    completeStateFinalization($this, state, update);
    return true;
  }
  function completeStateFinalization($this, state, update) {
    var tmp0_safe_receiver = $this.kj();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp0_safe_receiver.tm();
        tmp$ret$0 = $this.jj(NonDisposableHandle_getInstance());
      }
    }
    var tmp1_safe_receiver = update instanceof CompletedExceptionally ? update : null;
    var cause = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.xi_1;
    if (state instanceof JobNode) {
      try {
        state.invoke(cause);
      } catch ($p) {
        if ($p instanceof Error) {
          $this.dj(new CompletionHandlerException('Exception in completion handler ' + state + ' for ' + $this, $p));
        } else {
          throw $p;
        }
      }
    } else {
      var tmp2_safe_receiver = state.to();
      if (tmp2_safe_receiver == null)
        null;
      else {
        notifyCompletion(tmp2_safe_receiver, $this, cause);
      }
    }
  }
  function notifyCancelling($this, list, cause) {
    $this.ck(cause);
    {
      var exception = null;
      {
        var cur = list.yo();
        while (!equals(cur, list)) {
          if (cur instanceof JobCancellingNode) {
            var tmp0__anonymous__q1qw7t = cur;
            try {
              tmp0__anonymous__q1qw7t.invoke(cause);
            } catch ($p) {
              if ($p instanceof Error) {
                var tmp0_safe_receiver = exception;
                var tmp;
                if (tmp0_safe_receiver == null) {
                  tmp = null;
                } else {
                  var tmp$ret$0;
                  {
                    {
                    }
                    {
                      {
                      }
                    }
                    tmp$ret$0 = tmp0_safe_receiver;
                  }
                  tmp = tmp$ret$0;
                }
                var tmp1_elvis_lhs = tmp;
                if (tmp1_elvis_lhs == null) {
                  var tmp$ret$1;
                  {
                    {
                    }
                    exception = new CompletionHandlerException('Exception in completion handler ' + tmp0__anonymous__q1qw7t + ' for ' + $this, $p);
                    tmp$ret$1 = Unit_getInstance();
                  }
                } else
                  tmp1_elvis_lhs;
              } else {
                throw $p;
              }
            }
          }
          cur = cur.wl_1;
        }
      }
      var tmp0_safe_receiver_0 = exception;
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        var tmp$ret$2;
        {
          {
          }
          tmp$ret$2 = $this.dj(tmp0_safe_receiver_0);
        }
      }
    }
    cancelParent($this, cause);
  }
  function cancelParent($this, cause) {
    if ($this.dk())
      return true;
    var isCancellation = cause instanceof CancellationException;
    var parent = $this.kj();
    if (parent === null ? true : parent === NonDisposableHandle_getInstance()) {
      return isCancellation;
    }
    return parent.xj(cause) ? true : isCancellation;
  }
  function notifyCompletion(_this__u8e3s4, $this, cause) {
    var exception = null;
    {
      var cur = _this__u8e3s4.yo();
      while (!equals(cur, _this__u8e3s4)) {
        if (cur instanceof JobNode) {
          var tmp0__anonymous__q1qw7t = cur;
          try {
            tmp0__anonymous__q1qw7t.invoke(cause);
          } catch ($p) {
            if ($p instanceof Error) {
              var tmp0_safe_receiver = exception;
              var tmp;
              if (tmp0_safe_receiver == null) {
                tmp = null;
              } else {
                var tmp$ret$0;
                {
                  {
                  }
                  {
                    {
                    }
                  }
                  tmp$ret$0 = tmp0_safe_receiver;
                }
                tmp = tmp$ret$0;
              }
              var tmp1_elvis_lhs = tmp;
              if (tmp1_elvis_lhs == null) {
                var tmp$ret$1;
                {
                  {
                  }
                  exception = new CompletionHandlerException('Exception in completion handler ' + tmp0__anonymous__q1qw7t + ' for ' + $this, $p);
                  tmp$ret$1 = Unit_getInstance();
                }
              } else
                tmp1_elvis_lhs;
            } else {
              throw $p;
            }
          }
        }
        cur = cur.wl_1;
      }
    }
    var tmp0_safe_receiver_0 = exception;
    if (tmp0_safe_receiver_0 == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        tmp$ret$2 = $this.dj(tmp0_safe_receiver_0);
      }
    }
    return Unit_getInstance();
  }
  function startInternal($this, state) {
    var tmp0_subject = state;
    if (tmp0_subject instanceof Empty) {
      if (state.so_1)
        return 0;
      if (!$this.li_1.atomicfu$compareAndSet(state, get_EMPTY_ACTIVE()))
        return -1;
      $this.oj();
      return 1;
    } else {
      if (tmp0_subject instanceof InactiveNodeList) {
        if (!$this.li_1.atomicfu$compareAndSet(state, state.xp_1))
          return -1;
        $this.oj();
        return 1;
      } else {
        return 0;
      }
    }
  }
  function makeNode($this, handler, onCancelling) {
    var tmp;
    if (onCancelling) {
      var tmp0_elvis_lhs = handler instanceof JobCancellingNode ? handler : null;
      tmp = tmp0_elvis_lhs == null ? new InvokeOnCancelling(handler) : tmp0_elvis_lhs;
    } else {
      var tmp1_safe_receiver = handler instanceof JobNode ? handler : null;
      var tmp_0;
      if (tmp1_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp$ret$0;
        {
          {
          }
          {
            {
            }
          }
          tmp$ret$0 = tmp1_safe_receiver;
        }
        tmp_0 = tmp$ret$0;
      }
      var tmp2_elvis_lhs = tmp_0;
      tmp = tmp2_elvis_lhs == null ? new InvokeOnCompletion(handler) : tmp2_elvis_lhs;
    }
    var node = tmp;
    node.op_1 = $this;
    return node;
  }
  function addLastAtomic($this, expect, list, node) {
    var tmp$ret$1;
    $l$block: {
      var tmp$ret$0;
      {
        tmp$ret$0 = $this.lj() === expect;
      }
      if (!tmp$ret$0) {
        tmp$ret$1 = false;
        break $l$block;
      }
      list.fp(node);
      tmp$ret$1 = true;
    }
    return tmp$ret$1;
  }
  function promoteEmptyToNodeList($this, state) {
    var list = new NodeList();
    var update = state.so_1 ? list : new InactiveNodeList(list);
    $this.li_1.atomicfu$compareAndSet(state, update);
  }
  function promoteSingleToNodeList($this, state) {
    state.qp(new NodeList());
    var tmp$ret$0;
    {
      tmp$ret$0 = state.wl_1;
    }
    var list = tmp$ret$0;
    $this.li_1.atomicfu$compareAndSet(state, list);
  }
  function cancelMakeCompleting($this, cause) {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = $this.lj();
          var tmp;
          if (!(!(tmp0__anonymous__q1qw7t == null) ? isInterface(tmp0__anonymous__q1qw7t, Incomplete) : false)) {
            tmp = true;
          } else {
            var tmp_0;
            if (tmp0__anonymous__q1qw7t instanceof Finishing) {
              tmp_0 = tmp0__anonymous__q1qw7t.yp();
            } else {
              tmp_0 = false;
            }
            tmp = tmp_0;
          }
          if (tmp) {
            return get_COMPLETING_ALREADY();
          }
          var tmp_1 = createCauseException($this, cause);
          var proposedUpdate = CompletedExceptionally_init_$Create$(tmp_1, false, 2, null);
          var finalState = tryMakeCompleting($this, tmp0__anonymous__q1qw7t, proposedUpdate);
          if (!(finalState === get_COMPLETING_RETRY()))
            return finalState;
        }
      }
    }
  }
  function createCauseException($this, cause) {
    var tmp0_subject = cause;
    var tmp;
    if (tmp0_subject == null ? true : tmp0_subject instanceof Error) {
      var tmp1_elvis_lhs = cause;
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = null;
          tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs == null ? $this.vi() : tmp0_elvis_lhs, null, $this);
        }
        tmp_0 = tmp$ret$0;
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      tmp = ((!(cause == null) ? isInterface(cause, ParentJob) : false) ? cause : THROW_CCE()).ak();
    }
    return tmp;
  }
  function makeCancelling($this, cause) {
    var causeExceptionCache = null;
    {
      while (true) {
        var tmp$ret$7;
        $l$block: {
          var tmp0__anonymous__q1qw7t = $this.lj();
          var tmp0_subject = tmp0__anonymous__q1qw7t;
          if (tmp0_subject instanceof Finishing) {
            var tmp$ret$4;
            {
              var tmp$ret$3;
              {
                if (tmp0__anonymous__q1qw7t.zp())
                  return get_TOO_LATE_TO_CANCEL();
                var wasCancelling = tmp0__anonymous__q1qw7t.vp();
                if (!(cause == null) ? true : !wasCancelling) {
                  var tmp0_elvis_lhs = causeExceptionCache;
                  var tmp;
                  if (tmp0_elvis_lhs == null) {
                    var tmp$ret$0;
                    {
                      var tmp0_also = createCauseException($this, cause);
                      {
                      }
                      {
                        causeExceptionCache = tmp0_also;
                      }
                      tmp$ret$0 = tmp0_also;
                    }
                    tmp = tmp$ret$0;
                  } else {
                    tmp = tmp0_elvis_lhs;
                  }
                  var causeException = tmp;
                  tmp0__anonymous__q1qw7t.aq(causeException);
                }
                var tmp$ret$2;
                {
                  var tmp1_takeIf = tmp0__anonymous__q1qw7t.bq();
                  {
                  }
                  var tmp_0;
                  var tmp$ret$1;
                  {
                    tmp$ret$1 = !wasCancelling;
                  }
                  if (tmp$ret$1) {
                    tmp_0 = tmp1_takeIf;
                  } else {
                    tmp_0 = null;
                  }
                  tmp$ret$2 = tmp_0;
                }
                tmp$ret$3 = tmp$ret$2;
              }
              tmp$ret$4 = tmp$ret$3;
            }
            var notifyRootCause = tmp$ret$4;
            var tmp1_safe_receiver = notifyRootCause;
            if (tmp1_safe_receiver == null)
              null;
            else {
              var tmp$ret$5;
              {
                {
                }
                tmp$ret$5 = notifyCancelling($this, tmp0__anonymous__q1qw7t.rp_1, tmp1_safe_receiver);
              }
            }
            return get_COMPLETING_ALREADY();
          } else {
            if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
              var tmp2_elvis_lhs = causeExceptionCache;
              var tmp_1;
              if (tmp2_elvis_lhs == null) {
                var tmp$ret$6;
                {
                  var tmp0_also_0 = createCauseException($this, cause);
                  {
                  }
                  {
                    causeExceptionCache = tmp0_also_0;
                  }
                  tmp$ret$6 = tmp0_also_0;
                }
                tmp_1 = tmp$ret$6;
              } else {
                tmp_1 = tmp2_elvis_lhs;
              }
              var causeException_0 = tmp_1;
              if (tmp0__anonymous__q1qw7t.si()) {
                if (tryMakeCancelling($this, tmp0__anonymous__q1qw7t, causeException_0))
                  return get_COMPLETING_ALREADY();
              } else {
                var finalState = tryMakeCompleting($this, tmp0__anonymous__q1qw7t, CompletedExceptionally_init_$Create$(causeException_0, false, 2, null));
                if (finalState === get_COMPLETING_ALREADY()) {
                  var tmp1_error = 'Cannot happen in ' + toString(tmp0__anonymous__q1qw7t);
                  throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
                } else if (finalState === get_COMPLETING_RETRY()) {
                  tmp$ret$7 = Unit_getInstance();
                  break $l$block;
                } else
                  return finalState;
              }
            } else {
              return get_TOO_LATE_TO_CANCEL();
            }
          }
        }
      }
    }
  }
  function getOrPromoteCancellingList($this, state) {
    var tmp1_elvis_lhs = state.to();
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_subject = state;
      var tmp_0;
      if (tmp0_subject instanceof Empty) {
        tmp_0 = new NodeList();
      } else {
        if (tmp0_subject instanceof JobNode) {
          promoteSingleToNodeList($this, state);
          tmp_0 = null;
        } else {
          var tmp0_error = 'State should have list: ' + state;
          throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
        }
      }
      tmp = tmp_0;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function tryMakeCancelling($this, state, rootCause) {
    {
    }
    {
    }
    var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var list = tmp;
    var cancelling = new Finishing(list, false, rootCause);
    if (!$this.li_1.atomicfu$compareAndSet(state, cancelling))
      return false;
    notifyCancelling($this, list, rootCause);
    return true;
  }
  function tryMakeCompleting($this, state, proposedUpdate) {
    if (!(!(state == null) ? isInterface(state, Incomplete) : false))
      return get_COMPLETING_ALREADY();
    var tmp;
    var tmp_0;
    var tmp_1;
    if (state instanceof Empty) {
      tmp_1 = true;
    } else {
      tmp_1 = state instanceof JobNode;
    }
    if (tmp_1) {
      tmp_0 = !(state instanceof ChildHandleNode);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = !(proposedUpdate instanceof CompletedExceptionally);
    } else {
      tmp = false;
    }
    if (tmp) {
      if (tryFinalizeSimpleState($this, state, proposedUpdate)) {
        return proposedUpdate;
      }
      return get_COMPLETING_RETRY();
    }
    return tryMakeCompletingSlowPath($this, state, proposedUpdate);
  }
  function tryMakeCompletingSlowPath($this, state, proposedUpdate) {
    var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return get_COMPLETING_RETRY();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var list = tmp;
    var tmp1_elvis_lhs = state instanceof Finishing ? state : null;
    var finishing = tmp1_elvis_lhs == null ? new Finishing(list, false, null) : tmp1_elvis_lhs;
    var notifyRootCause = null;
    var tmp$ret$3;
    {
      if (finishing.yp())
        return get_COMPLETING_ALREADY();
      finishing.cq(true);
      if (!(finishing === state)) {
        if (!$this.li_1.atomicfu$compareAndSet(state, finishing))
          return get_COMPLETING_RETRY();
      }
      {
      }
      var wasCancelling = finishing.vp();
      var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp$ret$0 = finishing.aq(tmp0_safe_receiver.xi_1);
        }
      }
      var tmp$ret$2;
      {
        var tmp0_takeIf = finishing.bq();
        {
        }
        var tmp_0;
        var tmp$ret$1;
        {
          tmp$ret$1 = !wasCancelling;
        }
        if (tmp$ret$1) {
          tmp_0 = tmp0_takeIf;
        } else {
          tmp_0 = null;
        }
        tmp$ret$2 = tmp_0;
      }
      notifyRootCause = tmp$ret$2;
      tmp$ret$3 = Unit_getInstance();
    }
    var tmp2_safe_receiver = notifyRootCause;
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp$ret$4;
      {
        {
        }
        tmp$ret$4 = notifyCancelling($this, list, tmp2_safe_receiver);
      }
    }
    var child = firstChild($this, state);
    if (!(child == null) ? tryWaitForChild($this, finishing, child, proposedUpdate) : false)
      return get_COMPLETING_WAITING_CHILDREN();
    return finalizeFinishingState($this, finishing, proposedUpdate);
  }
  function _get_exceptionOrNull__b3j7js(_this__u8e3s4, $this) {
    var tmp0_safe_receiver = _this__u8e3s4 instanceof CompletedExceptionally ? _this__u8e3s4 : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.xi_1;
  }
  function firstChild($this, state) {
    var tmp1_elvis_lhs = state instanceof ChildHandleNode ? state : null;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_safe_receiver = state.to();
      tmp = tmp0_safe_receiver == null ? null : nextChild(tmp0_safe_receiver, $this);
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function tryWaitForChild($this, state, child, proposedUpdate) {
    var $this_0 = $this;
    var state_0 = state;
    var child_0 = child;
    var proposedUpdate_0 = proposedUpdate;
    while (true) {
      var $this_1 = $this_0;
      var state_1 = state_0;
      var child_1 = child_0;
      var proposedUpdate_1 = proposedUpdate_0;
      var tmp$ret$1;
      {
        var tmp0__get_asHandler__gq3rkj = new ChildCompletion($this_1, state_1, child_1, proposedUpdate_1);
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      var handle = child_1.hq_1.tj(false, false, tmp$ret$1, 1, null);
      if (!(handle === NonDisposableHandle_getInstance()))
        return true;
      var tmp0_elvis_lhs = nextChild(child_1, $this_1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var nextChild_0 = tmp;
      var tmp0 = $this_1;
      var tmp1 = state_1;
      var tmp2 = nextChild_0;
      var tmp3 = proposedUpdate_1;
      $this_0 = tmp0;
      state_0 = tmp1;
      child_0 = tmp2;
      proposedUpdate_0 = tmp3;
      continue;
    }
  }
  function continueCompleting($this, state, lastChild, proposedUpdate) {
    {
    }
    var waitChild = nextChild(lastChild, $this);
    if (!(waitChild == null) ? tryWaitForChild($this, state, waitChild, proposedUpdate) : false)
      return Unit_getInstance();
    var finalState = finalizeFinishingState($this, state, proposedUpdate);
    $this.cj(finalState);
  }
  function nextChild(_this__u8e3s4, $this) {
    var cur = _this__u8e3s4;
    $l$loop: while (true) {
      var tmp$ret$0;
      {
        var tmp0__get_isRemoved__hsfvgr = cur;
        tmp$ret$0 = tmp0__get_isRemoved__hsfvgr.yl_1;
      }
      if (!tmp$ret$0) {
        break $l$loop;
      }
      var tmp$ret$1;
      {
        var tmp1__get_prevNode__b1i0ed = cur;
        tmp$ret$1 = tmp1__get_prevNode__b1i0ed.xl_1;
      }
      cur = tmp$ret$1;
    }
    $l$loop_0: while (true) {
      var tmp$ret$2;
      {
        var tmp2__get_nextNode__ek7k4a = cur;
        tmp$ret$2 = tmp2__get_nextNode__ek7k4a.wl_1;
      }
      cur = tmp$ret$2;
      var tmp$ret$3;
      {
        var tmp3__get_isRemoved__lodk3s = cur;
        tmp$ret$3 = tmp3__get_isRemoved__lodk3s.yl_1;
      }
      if (tmp$ret$3)
        continue $l$loop_0;
      if (cur instanceof ChildHandleNode)
        return cur;
      if (cur instanceof NodeList)
        return null;
    }
  }
  function stateString($this, state) {
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof Finishing) {
      tmp = state.vp() ? 'Cancelling' : state.yp() ? 'Completing' : 'Active';
    } else {
      if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
        tmp = state.si() ? 'Active' : 'New';
      } else {
        if (tmp0_subject instanceof CompletedExceptionally) {
          tmp = 'Cancelled';
        } else {
          tmp = 'Completed';
        }
      }
    }
    return tmp;
  }
  function Finishing(list, isCompleting, rootCause) {
    this.rp_1 = list;
    this.sp_1 = atomic$boolean$1(isCompleting);
    this.tp_1 = atomic$ref$1(rootCause);
    this.up_1 = atomic$ref$1(null);
  }
  Finishing.prototype.to = function () {
    return this.rp_1;
  };
  Finishing.prototype.cq = function (value) {
    this.sp_1.gi_1 = value;
  };
  Finishing.prototype.yp = function () {
    return this.sp_1.gi_1;
  };
  Finishing.prototype.iq = function (value) {
    this.tp_1.zh_1 = value;
  };
  Finishing.prototype.bq = function () {
    return this.tp_1.zh_1;
  };
  Finishing.prototype.zp = function () {
    return _get_exceptionsHolder__nhszp(this) === get_SEALED();
  };
  Finishing.prototype.vp = function () {
    return !(this.bq() == null);
  };
  Finishing.prototype.si = function () {
    return this.bq() == null;
  };
  Finishing.prototype.wp = function (proposedException) {
    var eh = _get_exceptionsHolder__nhszp(this);
    var tmp;
    if (eh == null) {
      tmp = allocateList(this);
    } else {
      if (eh instanceof Error) {
        var tmp$ret$0;
        {
          var tmp0_also = allocateList(this);
          {
          }
          {
            tmp0_also.c(eh);
          }
          tmp$ret$0 = tmp0_also;
        }
        tmp = tmp$ret$0;
      } else {
        if (eh instanceof ArrayList) {
          tmp = eh instanceof ArrayList ? eh : THROW_CCE();
        } else {
          var tmp1_error = 'State is ' + toString(eh);
          throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
        }
      }
    }
    var list = tmp;
    var rootCause = this.bq();
    var tmp0_safe_receiver = rootCause;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        tmp$ret$1 = list.na(0, tmp0_safe_receiver);
      }
    }
    if (!(proposedException == null) ? !equals(proposedException, rootCause) : false) {
      list.c(proposedException);
    }
    _set_exceptionsHolder__tqm22h(this, get_SEALED());
    return list;
  };
  Finishing.prototype.aq = function (exception) {
    var rootCause = this.bq();
    if (rootCause == null) {
      this.iq(exception);
      return Unit_getInstance();
    }
    if (exception === rootCause)
      return Unit_getInstance();
    var eh = _get_exceptionsHolder__nhszp(this);
    if (eh == null)
      _set_exceptionsHolder__tqm22h(this, exception);
    else {
      if (eh instanceof Error) {
        if (exception === eh)
          return Unit_getInstance();
        var tmp$ret$0;
        {
          var tmp0_apply = allocateList(this);
          {
          }
          {
            tmp0_apply.c(eh);
            tmp0_apply.c(exception);
          }
          tmp$ret$0 = tmp0_apply;
        }
        _set_exceptionsHolder__tqm22h(this, tmp$ret$0);
      } else {
        if (eh instanceof ArrayList) {
          (eh instanceof ArrayList ? eh : THROW_CCE()).c(exception);
        } else {
          var tmp1_error = 'State is ' + toString(eh);
          throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
        }
      }
    }
  };
  Finishing.prototype.toString = function () {
    return 'Finishing[cancelling=' + this.vp() + ', completing=' + this.yp() + ', rootCause=' + this.bq() + ', exceptions=' + toString(_get_exceptionsHolder__nhszp(this)) + ', list=' + this.rp_1 + ']';
  };
  Finishing.$metadata$ = classMeta('Finishing', [Incomplete]);
  function ChildCompletion(parent, state, child, proposedUpdate) {
    JobNode.call(this);
    this.nq_1 = parent;
    this.oq_1 = state;
    this.pq_1 = child;
    this.qq_1 = proposedUpdate;
  }
  ChildCompletion.prototype.vl = function (cause) {
    continueCompleting(this.nq_1, this.oq_1, this.pq_1, this.qq_1);
  };
  ChildCompletion.prototype.invoke = function (cause) {
    return this.vl(cause);
  };
  ChildCompletion.$metadata$ = classMeta('ChildCompletion', undefined, undefined, undefined, undefined, JobNode.prototype);
  function JobSupport(active) {
    this.li_1 = atomic$ref$1(active ? get_EMPTY_ACTIVE() : get_EMPTY_NEW());
    this.mi_1 = atomic$ref$1(null);
  }
  JobSupport.prototype.j1 = function () {
    return Key_getInstance_2();
  };
  JobSupport.prototype.jj = function (value) {
    this.mi_1.zh_1 = value;
  };
  JobSupport.prototype.kj = function () {
    return this.mi_1.zh_1;
  };
  JobSupport.prototype.ni = function (parent) {
    {
    }
    if (parent == null) {
      this.jj(NonDisposableHandle_getInstance());
      return Unit_getInstance();
    }
    parent.nj();
    var handle = parent.bk(this);
    this.jj(handle);
    if (this.mj()) {
      handle.tm();
      this.jj(NonDisposableHandle_getInstance());
    }
  };
  JobSupport.prototype.lj = function () {
    {
      var tmp0_loop = this.li_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.zh_1;
          if (!(tmp1__anonymous__uwfjfc instanceof OpDescriptor))
            return tmp1__anonymous__uwfjfc;
          tmp1__anonymous__uwfjfc.rq(this);
        }
      }
    }
  };
  JobSupport.prototype.si = function () {
    var state = this.lj();
    var tmp;
    if (!(state == null) ? isInterface(state, Incomplete) : false) {
      tmp = state.si();
    } else {
      tmp = false;
    }
    return tmp;
  };
  JobSupport.prototype.mj = function () {
    var tmp = this.lj();
    return !(!(tmp == null) ? isInterface(tmp, Incomplete) : false);
  };
  JobSupport.prototype.sq = function () {
    var state = this.lj();
    var tmp;
    if (state instanceof CompletedExceptionally) {
      tmp = true;
    } else {
      var tmp_0;
      if (state instanceof Finishing) {
        tmp_0 = state.vp();
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  JobSupport.prototype.nj = function () {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = this.lj();
          var tmp0_subject = startInternal(this, tmp0__anonymous__q1qw7t);
          if (tmp0_subject === 0)
            return false;
          else if (tmp0_subject === 1)
            return true;
        }
      }
    }
  };
  JobSupport.prototype.oj = function () {
  };
  JobSupport.prototype.pj = function () {
    var state = this.lj();
    var tmp;
    if (state instanceof Finishing) {
      var tmp0_safe_receiver = state.bq();
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.qj(tmp0_safe_receiver, get_classSimpleName(this) + ' is cancelling');
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var tmp0_error = 'Job is still new or active: ' + this;
        throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      if (!(state == null) ? isInterface(state, Incomplete) : false) {
        var tmp1_error = 'Job is still new or active: ' + this;
        throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
      } else {
        if (state instanceof CompletedExceptionally) {
          tmp = this.rj(state.xi_1, null, 1, null);
        } else {
          tmp = new JobCancellationException(get_classSimpleName(this) + ' has completed normally', null, this);
        }
      }
    }
    return tmp;
  };
  JobSupport.prototype.qj = function (_this__u8e3s4, message) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof CancellationException ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_elvis_lhs_0 = message;
        tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs_0 == null ? this.vi() : tmp0_elvis_lhs_0, _this__u8e3s4, this);
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  JobSupport.prototype.rj = function (_this__u8e3s4, message, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      message = null;
    return this.qj(_this__u8e3s4, message);
  };
  JobSupport.prototype.on = function (handler) {
    return this.sj(false, true, handler);
  };
  JobSupport.prototype.sj = function (onCancelling, invokeImmediately, handler) {
    var node = makeNode(this, handler, onCancelling);
    {
      while (true) {
        var tmp$ret$1;
        $l$block: {
          var tmp0__anonymous__q1qw7t = this.lj();
          var tmp0_subject = tmp0__anonymous__q1qw7t;
          if (tmp0_subject instanceof Empty) {
            if (tmp0__anonymous__q1qw7t.so_1) {
              if (this.li_1.atomicfu$compareAndSet(tmp0__anonymous__q1qw7t, node))
                return node;
            } else
              promoteEmptyToNodeList(this, tmp0__anonymous__q1qw7t);
          } else {
            if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
              var list = tmp0__anonymous__q1qw7t.to();
              if (list == null) {
                promoteSingleToNodeList(this, tmp0__anonymous__q1qw7t instanceof JobNode ? tmp0__anonymous__q1qw7t : THROW_CCE());
              } else {
                var rootCause = null;
                var handle = NonDisposableHandle_getInstance();
                var tmp;
                if (onCancelling) {
                  tmp = tmp0__anonymous__q1qw7t instanceof Finishing;
                } else {
                  tmp = false;
                }
                if (tmp) {
                  var tmp$ret$2;
                  {
                    rootCause = tmp0__anonymous__q1qw7t.bq();
                    var tmp_0;
                    var tmp_1;
                    if (rootCause == null) {
                      tmp_1 = true;
                    } else {
                      var tmp_2;
                      var tmp$ret$0;
                      {
                        tmp$ret$0 = handler instanceof ChildHandleNode;
                      }
                      if (tmp$ret$0) {
                        tmp_2 = !tmp0__anonymous__q1qw7t.yp();
                      } else {
                        tmp_2 = false;
                      }
                      tmp_1 = tmp_2;
                    }
                    if (tmp_1) {
                      if (!addLastAtomic(this, tmp0__anonymous__q1qw7t, list, node)) {
                        tmp$ret$1 = Unit_getInstance();
                        break $l$block;
                      }
                      if (rootCause == null)
                        return node;
                      handle = node;
                      tmp_0 = Unit_getInstance();
                    }
                    tmp$ret$2 = tmp_0;
                  }
                }
                if (!(rootCause == null)) {
                  if (invokeImmediately)
                    invokeIt(handler, rootCause);
                  return handle;
                } else {
                  if (addLastAtomic(this, tmp0__anonymous__q1qw7t, list, node))
                    return node;
                }
              }
            } else {
              if (invokeImmediately) {
                var tmp1_safe_receiver = tmp0__anonymous__q1qw7t instanceof CompletedExceptionally ? tmp0__anonymous__q1qw7t : null;
                invokeIt(handler, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.xi_1);
              }
              return NonDisposableHandle_getInstance();
            }
          }
        }
      }
    }
  };
  JobSupport.prototype.uj = function (node) {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = this.lj();
          var tmp0_subject = tmp0__anonymous__q1qw7t;
          if (tmp0_subject instanceof JobNode) {
            if (!(tmp0__anonymous__q1qw7t === node))
              return Unit_getInstance();
            if (this.li_1.atomicfu$compareAndSet(tmp0__anonymous__q1qw7t, get_EMPTY_ACTIVE()))
              return Unit_getInstance();
          } else {
            if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
              if (!(tmp0__anonymous__q1qw7t.to() == null)) {
                node.zl();
              }
              return Unit_getInstance();
            } else {
              return Unit_getInstance();
            }
          }
        }
      }
    }
  };
  JobSupport.prototype.vj = function () {
    return false;
  };
  JobSupport.prototype.vi = function () {
    return 'Job was cancelled';
  };
  JobSupport.prototype.wj = function (parentJob) {
    this.yj(parentJob);
  };
  JobSupport.prototype.xj = function (cause) {
    if (cause instanceof CancellationException)
      return true;
    return this.yj(cause) ? this.ek() : false;
  };
  JobSupport.prototype.tq = function (cause) {
    return this.yj(cause);
  };
  JobSupport.prototype.yj = function (cause) {
    var finalState = get_COMPLETING_ALREADY();
    if (this.vj()) {
      finalState = cancelMakeCompleting(this, cause);
      if (finalState === get_COMPLETING_WAITING_CHILDREN())
        return true;
    }
    if (finalState === get_COMPLETING_ALREADY()) {
      finalState = makeCancelling(this, cause);
    }
    var tmp;
    if (finalState === get_COMPLETING_ALREADY()) {
      tmp = true;
    } else if (finalState === get_COMPLETING_WAITING_CHILDREN()) {
      tmp = true;
    } else if (finalState === get_TOO_LATE_TO_CANCEL()) {
      tmp = false;
    } else {
      this.cj(finalState);
      tmp = true;
    }
    return tmp;
  };
  JobSupport.prototype.zj = function (message, cause) {
    var tmp0_elvis_lhs = message;
    return new JobCancellationException(tmp0_elvis_lhs == null ? this.vi() : tmp0_elvis_lhs, cause, this);
  };
  JobSupport.prototype.ak = function () {
    var state = this.lj();
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof Finishing) {
      tmp = state.bq();
    } else {
      if (tmp0_subject instanceof CompletedExceptionally) {
        tmp = state.xi_1;
      } else {
        if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
          var tmp0_error = 'Cannot be cancelling child in this state: ' + toString(state);
          throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
        } else {
          tmp = null;
        }
      }
    }
    var rootCause = tmp;
    var tmp1_elvis_lhs = rootCause instanceof CancellationException ? rootCause : null;
    return tmp1_elvis_lhs == null ? new JobCancellationException('Parent job is ' + stateString(this, state), rootCause, this) : tmp1_elvis_lhs;
  };
  JobSupport.prototype.uq = function (proposedUpdate) {
    {
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp0__anonymous__q1qw7t = this.lj();
          var finalState = tryMakeCompleting(this, tmp0__anonymous__q1qw7t, proposedUpdate);
          if (finalState === get_COMPLETING_ALREADY())
            return false;
          else if (finalState === get_COMPLETING_WAITING_CHILDREN())
            return true;
          else if (finalState === get_COMPLETING_RETRY()) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          } else {
            this.cj(finalState);
            return true;
          }
        }
      }
    }
  };
  JobSupport.prototype.aj = function (proposedUpdate) {
    {
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp0__anonymous__q1qw7t = this.lj();
          var finalState = tryMakeCompleting(this, tmp0__anonymous__q1qw7t, proposedUpdate);
          if (finalState === get_COMPLETING_ALREADY())
            throw IllegalStateException_init_$Create$_0('Job ' + this + ' is already complete or completing, ' + ('but is being completed with ' + toString(proposedUpdate)), _get_exceptionOrNull__b3j7js(proposedUpdate, this));
          else if (finalState === get_COMPLETING_RETRY()) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          } else
            return finalState;
        }
      }
    }
  };
  JobSupport.prototype.bk = function (child) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new ChildHandleNode(child);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var tmp = this.tj(true, false, tmp$ret$1, 2, null);
    return isInterface(tmp, ChildHandle) ? tmp : THROW_CCE();
  };
  JobSupport.prototype.dj = function (exception) {
    throw exception;
  };
  JobSupport.prototype.ck = function (cause) {
  };
  JobSupport.prototype.dk = function () {
    return false;
  };
  JobSupport.prototype.ek = function () {
    return true;
  };
  JobSupport.prototype.fk = function (exception) {
    return false;
  };
  JobSupport.prototype.wi = function (state) {
  };
  JobSupport.prototype.cj = function (state) {
  };
  JobSupport.prototype.toString = function () {
    return this.gk() + '@' + get_hexAddress(this);
  };
  JobSupport.prototype.gk = function () {
    return this.ej() + '{' + stateString(this, this.lj()) + '}';
  };
  JobSupport.prototype.ej = function () {
    return get_classSimpleName(this);
  };
  JobSupport.$metadata$ = classMeta('JobSupport', [Job, ChildJob, ParentJob, SelectClause0]);
  function boxIncomplete(_this__u8e3s4) {
    init_properties_JobSupport_kt_iaxwag();
    var tmp;
    if (!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Incomplete) : false) {
      tmp = new IncompleteStateBox(_this__u8e3s4);
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function JobCancellingNode() {
    JobNode.call(this);
  }
  JobCancellingNode.$metadata$ = classMeta('JobCancellingNode', undefined, undefined, undefined, undefined, JobNode.prototype);
  function get_FALSE() {
    return FALSE;
  }
  var FALSE;
  function get_TRUE() {
    return TRUE;
  }
  var TRUE;
  function InactiveNodeList(list) {
    this.xp_1 = list;
  }
  InactiveNodeList.prototype.to = function () {
    return this.xp_1;
  };
  InactiveNodeList.prototype.si = function () {
    return false;
  };
  InactiveNodeList.prototype.toString = function () {
    return get_DEBUG() ? this.xp_1.xo('New') : anyToString(this);
  };
  InactiveNodeList.$metadata$ = classMeta('InactiveNodeList', [Incomplete]);
  function ChildHandleNode(childJob) {
    JobCancellingNode.call(this);
    this.hq_1 = childJob;
  }
  ChildHandleNode.prototype.al = function () {
    return this.pp();
  };
  ChildHandleNode.prototype.vl = function (cause) {
    return this.hq_1.wj(this.pp());
  };
  ChildHandleNode.prototype.invoke = function (cause) {
    return this.vl(cause);
  };
  ChildHandleNode.prototype.xj = function (cause) {
    return this.pp().xj(cause);
  };
  ChildHandleNode.$metadata$ = classMeta('ChildHandleNode', [ChildHandle], undefined, undefined, undefined, JobCancellingNode.prototype);
  function InvokeOnCancelling(handler) {
    JobCancellingNode.call(this);
    this.zq_1 = handler;
    this.ar_1 = atomic$int$1(0);
  }
  InvokeOnCancelling.prototype.vl = function (cause) {
    if (this.ar_1.atomicfu$compareAndSet(0, 1))
      this.zq_1(cause);
  };
  InvokeOnCancelling.prototype.invoke = function (cause) {
    return this.vl(cause);
  };
  InvokeOnCancelling.$metadata$ = classMeta('InvokeOnCancelling', undefined, undefined, undefined, undefined, JobCancellingNode.prototype);
  function InvokeOnCompletion(handler) {
    JobNode.call(this);
    this.fr_1 = handler;
  }
  InvokeOnCompletion.prototype.vl = function (cause) {
    return this.fr_1(cause);
  };
  InvokeOnCompletion.prototype.invoke = function (cause) {
    return this.vl(cause);
  };
  InvokeOnCompletion.$metadata$ = classMeta('InvokeOnCompletion', undefined, undefined, undefined, undefined, JobNode.prototype);
  function unboxState(_this__u8e3s4) {
    init_properties_JobSupport_kt_iaxwag();
    var tmp0_safe_receiver = _this__u8e3s4 instanceof IncompleteStateBox ? _this__u8e3s4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.gr_1;
    return tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
  }
  function IncompleteStateBox(state) {
    this.gr_1 = state;
  }
  IncompleteStateBox.$metadata$ = classMeta('IncompleteStateBox');
  function ChildContinuation(child) {
    JobCancellingNode.call(this);
    this.lr_1 = child;
  }
  ChildContinuation.prototype.vl = function (cause) {
    this.lr_1.an(this.lr_1.bn(this.pp()));
  };
  ChildContinuation.prototype.invoke = function (cause) {
    return this.vl(cause);
  };
  ChildContinuation.$metadata$ = classMeta('ChildContinuation', undefined, undefined, undefined, undefined, JobCancellingNode.prototype);
  function handlesException($this) {
    var tmp = $this.kj();
    var tmp0_safe_receiver = tmp instanceof ChildHandleNode ? tmp : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.pp();
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var parentJob = tmp_0;
    while (true) {
      if (parentJob.ek())
        return true;
      var tmp_1 = parentJob.kj();
      var tmp2_safe_receiver = tmp_1 instanceof ChildHandleNode ? tmp_1 : null;
      var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.pp();
      var tmp_2;
      if (tmp3_elvis_lhs == null) {
        return false;
      } else {
        tmp_2 = tmp3_elvis_lhs;
      }
      parentJob = tmp_2;
    }
  }
  function JobImpl(parent) {
    JobSupport.call(this, true);
    this.ni(parent);
    this.or_1 = handlesException(this);
  }
  JobImpl.prototype.vj = function () {
    return true;
  };
  JobImpl.prototype.ek = function () {
    return this.or_1;
  };
  JobImpl.prototype.mn = function () {
    return this.uq(Unit_getInstance());
  };
  JobImpl.prototype.nn = function (exception) {
    return this.uq(CompletedExceptionally_init_$Create$(exception, false, 2, null));
  };
  JobImpl.$metadata$ = classMeta('JobImpl', [CompletableJob], undefined, undefined, undefined, JobSupport.prototype);
  var properties_initialized_JobSupport_kt_5iq8a4;
  function init_properties_JobSupport_kt_iaxwag() {
    if (properties_initialized_JobSupport_kt_5iq8a4) {
    } else {
      properties_initialized_JobSupport_kt_5iq8a4 = true;
      COMPLETING_ALREADY = new Symbol('COMPLETING_ALREADY');
      COMPLETING_WAITING_CHILDREN = new Symbol('COMPLETING_WAITING_CHILDREN');
      COMPLETING_RETRY = new Symbol('COMPLETING_RETRY');
      TOO_LATE_TO_CANCEL = new Symbol('TOO_LATE_TO_CANCEL');
      SEALED = new Symbol('SEALED');
      EMPTY_NEW = new Empty(false);
      EMPTY_ACTIVE = new Empty(true);
    }
  }
  function MainCoroutineDispatcher() {
    CoroutineDispatcher.call(this);
  }
  MainCoroutineDispatcher.prototype.toString = function () {
    var tmp0_elvis_lhs = this.rr();
    return tmp0_elvis_lhs == null ? get_classSimpleName(this) + '@' + get_hexAddress(this) : tmp0_elvis_lhs;
  };
  MainCoroutineDispatcher.prototype.rr = function () {
    var main = Dispatchers_getInstance().wr();
    if (this === main)
      return 'Dispatchers.Main';
    var tmp;
    try {
      tmp = main.qr();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof UnsupportedOperationException) {
        tmp_0 = null;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var immediate = tmp;
    if (this === immediate)
      return 'Dispatchers.Main.immediate';
    return null;
  };
  MainCoroutineDispatcher.$metadata$ = classMeta('MainCoroutineDispatcher', undefined, undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function NonCancellable() {
    NonCancellable_instance = this;
    AbstractCoroutineContextElement.call(this, Key_getInstance_2());
    this.yr_1 = "NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited";
  }
  NonCancellable.prototype.si = function () {
    return true;
  };
  NonCancellable.prototype.nj = function () {
    return false;
  };
  NonCancellable.prototype.pj = function () {
    throw IllegalStateException_init_$Create$('This job is always active');
  };
  NonCancellable.prototype.sj = function (onCancelling, invokeImmediately, handler) {
    return NonDisposableHandle_getInstance();
  };
  NonCancellable.prototype.bk = function (child) {
    return NonDisposableHandle_getInstance();
  };
  NonCancellable.prototype.toString = function () {
    return 'NonCancellable';
  };
  NonCancellable.$metadata$ = objectMeta('NonCancellable', [Job], undefined, undefined, undefined, AbstractCoroutineContextElement.prototype);
  var NonCancellable_instance;
  function NonCancellable_getInstance() {
    if (NonCancellable_instance == null)
      new NonCancellable();
    return NonCancellable_instance;
  }
  function TimeoutCancellationException() {
  }
  TimeoutCancellationException.$metadata$ = classMeta('TimeoutCancellationException', [CopyableThrowable], undefined, undefined, undefined, CancellationException.prototype);
  function Unconfined() {
    Unconfined_instance = this;
    CoroutineDispatcher.call(this);
  }
  Unconfined.prototype.sn = function (context) {
    return false;
  };
  Unconfined.prototype.tn = function (context, block) {
    var yieldContext = context.z3(Key_getInstance_3());
    if (!(yieldContext == null)) {
      yieldContext.bs_1 = true;
      return Unit_getInstance();
    }
    throw UnsupportedOperationException_init_$Create$('Dispatchers.Unconfined.dispatch function can only be used by the yield function. If you wrap Unconfined dispatcher in your code, make sure you properly delegate isDispatchNeeded and dispatch calls.');
  };
  Unconfined.prototype.toString = function () {
    return 'Dispatchers.Unconfined';
  };
  Unconfined.$metadata$ = objectMeta('Unconfined', undefined, undefined, undefined, undefined, CoroutineDispatcher.prototype);
  var Unconfined_instance;
  function Unconfined_getInstance() {
    if (Unconfined_instance == null)
      new Unconfined();
    return Unconfined_instance;
  }
  function Key_3() {
    Key_instance_2 = this;
  }
  Key_3.$metadata$ = objectMeta('Key', [Key]);
  var Key_instance_2;
  function Key_getInstance_3() {
    if (Key_instance_2 == null)
      new Key_3();
    return Key_instance_2;
  }
  function get_EMPTY() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return EMPTY;
  }
  var EMPTY;
  function get_OFFER_SUCCESS() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return OFFER_SUCCESS;
  }
  var OFFER_SUCCESS;
  function get_OFFER_FAILED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return OFFER_FAILED;
  }
  var OFFER_FAILED;
  function get_POLL_FAILED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return POLL_FAILED;
  }
  var POLL_FAILED;
  function get_ENQUEUE_FAILED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return ENQUEUE_FAILED;
  }
  var ENQUEUE_FAILED;
  function get_HANDLER_INVOKED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return HANDLER_INVOKED;
  }
  var HANDLER_INVOKED;
  function receiveSuspend($this, receiveMode, $cont) {
    var tmp$ret$1;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = getOrCreateCancellableContinuation(intercepted(tmp0__anonymous__q1qw7t));
      var tmp$ret$0;
      $l$block_1: {
        var tmp;
        if ($this.fs() == null) {
          tmp = new ReceiveElement(isInterface(cancellable, CancellableContinuation) ? cancellable : THROW_CCE(), receiveMode);
        } else {
          tmp = new ReceiveElementWithUndeliveredHandler(isInterface(cancellable, CancellableContinuation) ? cancellable : THROW_CCE(), receiveMode, $this.fs());
        }
        var receive = tmp;
        while (true) {
          if (enqueueReceive($this, receive)) {
            removeReceiveOnCancel($this, cancellable, receive);
            tmp$ret$0 = Unit_getInstance();
            break $l$block_1;
          }
          var result = $this.js();
          if (result instanceof Closed) {
            receive.ps(result);
            tmp$ret$0 = Unit_getInstance();
            break $l$block_1;
          }
          if (!(result === get_POLL_FAILED())) {
            var tmp_0 = receive.qs((result == null ? true : isObject(result)) ? result : THROW_CCE());
            cancellable.fl(tmp_0, receive.us((result == null ? true : isObject(result)) ? result : THROW_CCE()));
            tmp$ret$0 = Unit_getInstance();
            break $l$block_1;
          }
        }
      }
      tmp$ret$1 = cancellable.uk();
    }
    return tmp$ret$1;
  }
  function enqueueReceive($this, receive) {
    var tmp$ret$0;
    {
      var tmp0_also = $this.vs(receive);
      {
      }
      {
        if (tmp0_also)
          $this.ws();
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  }
  function removeReceiveOnCancel($this, cont, receive) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new RemoveReceiveOnCancel($this, receive);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return cont.el(tmp$ret$1);
  }
  function RemoveReceiveOnCancel($outer, receive) {
    this.ys_1 = $outer;
    BeforeResumeCancelHandler.call(this);
    this.xs_1 = receive;
  }
  RemoveReceiveOnCancel.prototype.vl = function (cause) {
    if (this.xs_1.zl())
      this.ys_1.zs();
  };
  RemoveReceiveOnCancel.prototype.invoke = function (cause) {
    return this.vl(cause);
  };
  RemoveReceiveOnCancel.prototype.toString = function () {
    return 'RemoveReceiveOnCancel[' + this.xs_1 + ']';
  };
  RemoveReceiveOnCancel.$metadata$ = classMeta('RemoveReceiveOnCancel', undefined, undefined, undefined, undefined, BeforeResumeCancelHandler.prototype);
  function ReceiveElement(cont, receiveMode) {
    Receive.call(this);
    this.ns_1 = cont;
    this.os_1 = receiveMode;
  }
  ReceiveElement.prototype.at = function () {
    return this.ns_1;
  };
  ReceiveElement.prototype.qs = function (value) {
    var tmp0_subject = this.os_1;
    return tmp0_subject === 1 ? new ChannelResult(Companion_getInstance_0().ct(value)) : value;
  };
  ReceiveElement.prototype.dt = function (value, otherOp) {
    var tmp = this.qs(value);
    var tmp0_safe_receiver = otherOp;
    var tmp1_elvis_lhs = this.ns_1.cl(tmp, tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ft_1, this.us(value));
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return null;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var token = tmp_0;
    {
    }
    var tmp2_safe_receiver = otherOp;
    if (tmp2_safe_receiver == null)
      null;
    else {
      tmp2_safe_receiver.ht();
    }
    return get_RESUME_TOKEN();
  };
  ReceiveElement.prototype.it = function (value) {
    return this.ns_1.dl(get_RESUME_TOKEN());
  };
  ReceiveElement.prototype.ps = function (closed) {
    if (this.os_1 === 1) {
      var tmp$ret$2;
      {
        var tmp0_resume = this.ns_1;
        var tmp$ret$0;
        {
          tmp$ret$0 = Companion_getInstance_0().ot(closed.mt_1);
        }
        var tmp1_resume = tmp$ret$0;
        var tmp$ret$1;
        {
          var tmp0_success = Companion_getInstance();
          tmp$ret$1 = _Result___init__impl__xyqfz8(new ChannelResult(tmp1_resume));
        }
        tmp$ret$2 = tmp0_resume.m3(tmp$ret$1);
      }
    } else {
      var tmp$ret$4;
      {
        var tmp2_resumeWithException = this.ns_1;
        var tmp3_resumeWithException = closed.nt();
        var tmp$ret$3;
        {
          var tmp0_failure = Companion_getInstance();
          tmp$ret$3 = _Result___init__impl__xyqfz8(createFailure(tmp3_resumeWithException));
        }
        tmp$ret$4 = tmp2_resumeWithException.m3(tmp$ret$3);
      }
    }
  };
  ReceiveElement.prototype.toString = function () {
    return 'ReceiveElement@' + get_hexAddress(this) + '[receiveMode=' + this.os_1 + ']';
  };
  ReceiveElement.$metadata$ = classMeta('ReceiveElement', undefined, undefined, undefined, undefined, Receive.prototype);
  function ReceiveElementWithUndeliveredHandler(cont, receiveMode, onUndeliveredElement) {
    ReceiveElement.call(this, cont, receiveMode);
    this.vt_1 = onUndeliveredElement;
  }
  ReceiveElementWithUndeliveredHandler.prototype.us = function (value) {
    return bindCancellationFun(this.vt_1, value, this.at().o3());
  };
  ReceiveElementWithUndeliveredHandler.$metadata$ = classMeta('ReceiveElementWithUndeliveredHandler', undefined, undefined, undefined, undefined, ReceiveElement.prototype);
  function AbstractChannel(onUndeliveredElement) {
    AbstractSendChannel.call(this, onUndeliveredElement);
  }
  AbstractChannel.prototype.js = function () {
    while (true) {
      var tmp0_elvis_lhs = this.yt();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return get_POLL_FAILED();
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var send = tmp;
      var token = send.cu(null);
      if (!(token == null)) {
        {
        }
        send.du();
        return send.eu();
      }
      send.fu();
    }
  };
  AbstractChannel.prototype.gu = function () {
    return !(this.hu() == null) ? this.xt() : false;
  };
  AbstractChannel.prototype.vs = function (receive) {
    var tmp;
    if (this.wt()) {
      var tmp$ret$1;
      $l$block: {
        var tmp0_addLastIfPrev = this.iu();
        var tmp$ret$0;
        {
          var tmp1__anonymous__uwfjfc = tmp0_addLastIfPrev.xl_1;
          tmp$ret$0 = !(tmp1__anonymous__uwfjfc instanceof Send);
        }
        if (!tmp$ret$0) {
          tmp$ret$1 = false;
          break $l$block;
        }
        tmp0_addLastIfPrev.fp(receive);
        tmp$ret$1 = true;
      }
      tmp = tmp$ret$1;
    } else {
      var tmp$ret$3;
      $l$block_1: {
        var tmp2_addLastIfPrevAndIf = this.iu();
        var tmp$ret$2;
        {
          var tmp3__anonymous__ufb84q = tmp2_addLastIfPrevAndIf.xl_1;
          tmp$ret$2 = !(tmp3__anonymous__ufb84q instanceof Send);
        }
        if (!tmp$ret$2) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        var tmp$ret$4;
        {
          tmp$ret$4 = this.xt();
        }
        if (!tmp$ret$4) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        tmp2_addLastIfPrevAndIf.fp(receive);
        tmp$ret$3 = true;
      }
      tmp = tmp$ret$3;
    }
    return tmp;
  };
  AbstractChannel.prototype.ju = function ($cont) {
    var result = this.js();
    if (!(result === get_POLL_FAILED())) {
      var tmp$ret$0;
      {
        var tmp;
        if (result instanceof Closed) {
          tmp = Companion_getInstance_0().ot(result.mt_1);
        } else {
          var tmp_0 = Companion_getInstance_0();
          tmp = tmp_0.ct((result == null ? true : isObject(result)) ? result : THROW_CCE());
        }
        tmp$ret$0 = tmp;
      }
      return new ChannelResult(tmp$ret$0);
    }
    var tmp_1 = receiveSuspend(this, 1, $cont);
    if (tmp_1 === get_COROUTINE_SUSPENDED())
      return tmp_1;
    return new ChannelResult(tmp_1.ku_1);
  };
  AbstractChannel.prototype.lu = function (cause) {
    if (this.gu())
      return Unit_getInstance();
    var tmp0_elvis_lhs = cause;
    this.mu(tmp0_elvis_lhs == null ? CancellationException_init_$Create$(get_classSimpleName(this) + ' was cancelled') : tmp0_elvis_lhs);
  };
  AbstractChannel.prototype.mu = function (cause) {
    var tmp$ret$0;
    {
      var tmp0_also = this.nu(cause);
      {
      }
      {
        this.ou(tmp0_also);
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  AbstractChannel.prototype.ou = function (wasClosed) {
    var tmp0_elvis_lhs = this.pu();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('Cannot happen');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var closed = tmp;
    var list = _InlineList___init__impl__z8n56_0(null, 1, null);
    $l$loop_0: while (true) {
      var tmp$ret$0;
      {
        tmp$ret$0 = closed.xl_1;
      }
      var previous = tmp$ret$0;
      if (previous instanceof LinkedListHead) {
        break $l$loop_0;
      }
      {
      }
      if (!previous.zl()) {
        previous.kp();
        continue $l$loop_0;
      }
      var tmp_0 = list;
      list = InlineList__plus_impl_nuetvo(tmp_0, previous instanceof Send ? previous : THROW_CCE());
    }
    this.qu(list, closed);
  };
  AbstractChannel.prototype.qu = function (list, closed) {
    var tmp$ret$0;
    $l$block: {
      var tmp0_subject = _get_holder__f6h5pd(list);
      if (tmp0_subject == null) {
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      } else {
        if (!(tmp0_subject instanceof ArrayList)) {
          var tmp = _get_holder__f6h5pd(list);
          var tmp0__anonymous__q1qw7t = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
          tmp0__anonymous__q1qw7t.ru(closed);
        } else {
          var tmp_0 = _get_holder__f6h5pd(list);
          var list_0 = tmp_0 instanceof ArrayList ? tmp_0 : THROW_CCE();
          var inductionVariable = list_0.g() - 1 | 0;
          if (0 <= inductionVariable)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + -1 | 0;
              {
                var tmp1__anonymous__uwfjfc = list_0.h(i);
                tmp1__anonymous__uwfjfc.ru(closed);
              }
            }
             while (0 <= inductionVariable);
        }
      }
    }
  };
  AbstractChannel.prototype.su = function () {
    var tmp$ret$0;
    {
      var tmp0_also = AbstractSendChannel.prototype.su.call(this);
      {
      }
      {
        var tmp;
        if (!(tmp0_also == null)) {
          tmp = !(tmp0_also instanceof Closed);
        } else {
          tmp = false;
        }
        if (tmp)
          this.zs();
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  AbstractChannel.prototype.ws = function () {
  };
  AbstractChannel.prototype.zs = function () {
  };
  AbstractChannel.$metadata$ = classMeta('AbstractChannel', [Channel], undefined, undefined, undefined, AbstractSendChannel.prototype);
  function _get_isFullImpl__v905xu($this) {
    var tmp;
    var tmp$ret$0;
    {
      var tmp0__get_nextNode__vg4li4 = $this.ds_1;
      tmp$ret$0 = tmp0__get_nextNode__vg4li4.wl_1;
    }
    var tmp_0 = tmp$ret$0;
    if (!isInterface(tmp_0, ReceiveOrClosed)) {
      tmp = $this.uu();
    } else {
      tmp = false;
    }
    return tmp;
  }
  function sendSuspend($this, element, $cont) {
    var tmp$ret$3;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = getOrCreateCancellableContinuation(intercepted(tmp0__anonymous__q1qw7t));
      var tmp$ret$0;
      $l$block_2: {
        loop: while (true) {
          if (_get_isFullImpl__v905xu($this)) {
            var send = $this.cs_1 == null ? new SendElement(element, cancellable) : new SendElementWithUndeliveredHandler(element, cancellable, $this.cs_1);
            var enqueueResult = $this.xu(send);
            if (enqueueResult == null) {
              removeOnCancellation(cancellable, send);
              tmp$ret$0 = Unit_getInstance();
              break $l$block_2;
            } else {
              if (enqueueResult instanceof Closed) {
                helpCloseAndResumeWithSendException(cancellable, $this, element, enqueueResult);
                tmp$ret$0 = Unit_getInstance();
                break $l$block_2;
              } else {
                if (enqueueResult === get_ENQUEUE_FAILED()) {
                } else {
                  if (enqueueResult instanceof Receive) {
                  } else {
                    var tmp0_error = 'enqueueSend returned ' + toString(enqueueResult);
                    throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
                  }
                }
              }
            }
          }
          var offerResult = $this.vu(element);
          if (offerResult === get_OFFER_SUCCESS()) {
            var tmp$ret$2;
            {
              var tmp$ret$1;
              {
                var tmp0_success = Companion_getInstance();
                tmp$ret$1 = _Result___init__impl__xyqfz8(Unit_getInstance());
              }
              tmp$ret$2 = cancellable.m3(tmp$ret$1);
            }
            tmp$ret$0 = Unit_getInstance();
            break $l$block_2;
          } else {
            if (offerResult === get_OFFER_FAILED())
              continue loop;
            else {
              if (offerResult instanceof Closed) {
                helpCloseAndResumeWithSendException(cancellable, $this, element, offerResult);
                tmp$ret$0 = Unit_getInstance();
                break $l$block_2;
              } else {
                var tmp1_error = 'offerInternal returned ' + toString_0(offerResult);
                throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
              }
            }
          }
        }
      }
      tmp$ret$3 = cancellable.uk();
    }
    return tmp$ret$3;
  }
  function helpCloseAndResumeWithSendException(_this__u8e3s4, $this, element, closed) {
    helpClose($this, closed);
    var sendException = closed.bv();
    var tmp0_safe_receiver = $this.cs_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = callUndeliveredElementCatchingException$default(tmp0_safe_receiver, element, null, 2, null);
    }
    var tmp1_safe_receiver = tmp;
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        addSuppressed(tmp1_safe_receiver, sendException);
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_failure = Companion_getInstance();
            tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_safe_receiver));
          }
          tmp$ret$1 = _this__u8e3s4.m3(tmp$ret$0);
        }
        return Unit_getInstance();
      }
    }
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp0_failure_0 = Companion_getInstance();
        tmp$ret$3 = _Result___init__impl__xyqfz8(createFailure(sendException));
      }
      tmp$ret$4 = _this__u8e3s4.m3(tmp$ret$3);
    }
  }
  function invokeOnCloseHandler($this, cause) {
    var handler = $this.es_1.zh_1;
    if ((!(handler === null) ? !(handler === get_HANDLER_INVOKED()) : false) ? $this.es_1.atomicfu$compareAndSet(handler, get_HANDLER_INVOKED()) : false) {
      ((!(handler == null) ? typeof handler === 'function' : false) ? handler : THROW_CCE())(cause);
    }
  }
  function helpClose($this, closed) {
    var closedList = _InlineList___init__impl__z8n56_0(null, 1, null);
    $l$loop_0: while (true) {
      var tmp$ret$0;
      {
        tmp$ret$0 = closed.xl_1;
      }
      var tmp = tmp$ret$0;
      var tmp0_elvis_lhs = tmp instanceof Receive ? tmp : null;
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        break $l$loop_0;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      var previous = tmp_0;
      if (!previous.zl()) {
        previous.kp();
        continue $l$loop_0;
      }
      closedList = InlineList__plus_impl_nuetvo(closedList, previous);
    }
    var tmp$ret$1;
    $l$block: {
      var tmp0_forEachReversed = closedList;
      var tmp0_subject = _get_holder__f6h5pd(tmp0_forEachReversed);
      if (tmp0_subject == null) {
        tmp$ret$1 = Unit_getInstance();
        break $l$block;
      } else {
        if (!(tmp0_subject instanceof ArrayList)) {
          var tmp_1 = _get_holder__f6h5pd(tmp0_forEachReversed);
          var tmp1__anonymous__uwfjfc = (tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE();
          tmp1__anonymous__uwfjfc.ps(closed);
        } else {
          var tmp_2 = _get_holder__f6h5pd(tmp0_forEachReversed);
          var list = tmp_2 instanceof ArrayList ? tmp_2 : THROW_CCE();
          var inductionVariable = list.g() - 1 | 0;
          if (0 <= inductionVariable)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + -1 | 0;
              {
                var tmp2__anonymous__z9zvc9 = list.h(i);
                tmp2__anonymous__z9zvc9.ps(closed);
              }
            }
             while (0 <= inductionVariable);
        }
      }
    }
    $this.zu(closed);
  }
  function _get_queueDebugStateString__k7jj75($this) {
    var tmp$ret$0;
    {
      var tmp0__get_nextNode__vg4li4 = $this.ds_1;
      tmp$ret$0 = tmp0__get_nextNode__vg4li4.wl_1;
    }
    var head = tmp$ret$0;
    if (head === $this.ds_1)
      return 'EmptyQueue';
    var tmp0_subject = head;
    var tmp;
    if (tmp0_subject instanceof Closed) {
      tmp = toString_0(head);
    } else {
      if (tmp0_subject instanceof Receive) {
        tmp = 'ReceiveQueued';
      } else {
        if (tmp0_subject instanceof Send) {
          tmp = 'SendQueued';
        } else {
          tmp = 'UNEXPECTED:' + head;
        }
      }
    }
    var result = tmp;
    var tmp$ret$1;
    {
      var tmp1__get_prevNode__b1i0ed = $this.ds_1;
      tmp$ret$1 = tmp1__get_prevNode__b1i0ed.xl_1;
    }
    var tail = tmp$ret$1;
    if (!(tail === head)) {
      result = result + (',queueSize=' + countQueueSize($this));
      if (tail instanceof Closed)
        result = result + (',closedForSend=' + tail);
    }
    return result;
  }
  function countQueueSize($this) {
    var size = 0;
    {
      var tmp0_forEach = $this.ds_1;
      var cur = tmp0_forEach.yo();
      while (!equals(cur, tmp0_forEach)) {
        if (cur instanceof LinkedListNode) {
          var tmp1__anonymous__uwfjfc = cur;
          var tmp0 = size;
          size = tmp0 + 1 | 0;
        }
        cur = cur.wl_1;
      }
    }
    return size;
  }
  function SendBuffered(element) {
    Send.call(this);
    this.fv_1 = element;
  }
  SendBuffered.prototype.gv = function () {
    return this.fv_1;
  };
  SendBuffered.prototype.eu = function () {
    return this.fv_1;
  };
  SendBuffered.prototype.cu = function (otherOp) {
    var tmp$ret$0;
    {
      var tmp0_also = get_RESUME_TOKEN();
      {
      }
      {
        var tmp0_safe_receiver = otherOp;
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.ht();
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  SendBuffered.prototype.du = function () {
  };
  SendBuffered.prototype.ru = function (closed) {
    {
    }
  };
  SendBuffered.prototype.toString = function () {
    return 'SendBuffered@' + get_hexAddress(this) + '(' + this.fv_1 + ')';
  };
  SendBuffered.$metadata$ = classMeta('SendBuffered', undefined, undefined, undefined, undefined, Send.prototype);
  function AbstractSendChannel(onUndeliveredElement) {
    this.cs_1 = onUndeliveredElement;
    this.ds_1 = new LinkedListHead();
    this.es_1 = atomic$ref$1(null);
  }
  AbstractSendChannel.prototype.fs = function () {
    return this.cs_1;
  };
  AbstractSendChannel.prototype.iu = function () {
    return this.ds_1;
  };
  AbstractSendChannel.prototype.vu = function (element) {
    while (true) {
      var tmp0_elvis_lhs = this.su();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return get_OFFER_FAILED();
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var receive = tmp;
      var token = receive.dt(element, null);
      if (!(token == null)) {
        {
        }
        receive.it(element);
        return receive.pt();
      }
    }
  };
  AbstractSendChannel.prototype.pu = function () {
    var tmp$ret$0;
    {
      var tmp0__get_prevNode__2ljhpg = this.ds_1;
      tmp$ret$0 = tmp0__get_prevNode__2ljhpg.xl_1;
    }
    var tmp = tmp$ret$0;
    var tmp0_safe_receiver = tmp instanceof Closed ? tmp : null;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          helpClose(this, tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_0 = tmp$ret$1;
    }
    return tmp_0;
  };
  AbstractSendChannel.prototype.hu = function () {
    var tmp$ret$0;
    {
      var tmp0__get_nextNode__vg4li4 = this.ds_1;
      tmp$ret$0 = tmp0__get_nextNode__vg4li4.wl_1;
    }
    var tmp = tmp$ret$0;
    var tmp0_safe_receiver = tmp instanceof Closed ? tmp : null;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          helpClose(this, tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_0 = tmp$ret$1;
    }
    return tmp_0;
  };
  AbstractSendChannel.prototype.yt = function () {
    var tmp$ret$0;
    $l$block_1: {
      var tmp1_removeFirstIfIsInstanceOfOrPeekIf = this.ds_1;
      var next = tmp1_removeFirstIfIsInstanceOfOrPeekIf.wl_1;
      if (next === tmp1_removeFirstIfIsInstanceOfOrPeekIf) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      if (!(next instanceof Send)) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      var tmp$ret$1;
      {
        var tmp2__anonymous__z9zvc9 = next;
        tmp$ret$1 = tmp2__anonymous__z9zvc9 instanceof Closed;
      }
      if (tmp$ret$1) {
        tmp$ret$0 = next;
        break $l$block_1;
      }
      {
        var tmp0_check = next.gp();
        {
        }
        if (!tmp0_check) {
          var tmp$ret$2;
          {
            tmp$ret$2 = 'Should remove';
          }
          var message = tmp$ret$2;
          throw IllegalStateException_init_$Create$(toString_0(message));
        }
      }
      tmp$ret$0 = next;
    }
    return tmp$ret$0;
  };
  AbstractSendChannel.prototype.hv = function (element) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_addLastIfPrev = this.ds_1;
      var tmp1_addLastIfPrev = new SendBuffered(element);
      var tmp$ret$0;
      {
        var tmp2__anonymous__z9zvc9 = tmp0_addLastIfPrev.xl_1;
        if (isInterface(tmp2__anonymous__z9zvc9, ReceiveOrClosed))
          return tmp2__anonymous__z9zvc9;
        tmp$ret$0 = true;
      }
      if (!tmp$ret$0) {
        tmp$ret$1 = false;
        break $l$block;
      }
      tmp0_addLastIfPrev.fp(tmp1_addLastIfPrev);
      tmp$ret$1 = true;
    }
    return null;
  };
  AbstractSendChannel.prototype.wu = function (element, $cont) {
    if (this.vu(element) === get_OFFER_SUCCESS())
      return Unit_getInstance();
    return sendSuspend(this, element, $cont);
  };
  AbstractSendChannel.prototype.xu = function (send) {
    if (this.tu()) {
      var tmp$ret$1;
      $l$block: {
        var tmp0_addLastIfPrev = this.ds_1;
        var tmp$ret$0;
        {
          var tmp1__anonymous__uwfjfc = tmp0_addLastIfPrev.xl_1;
          if (isInterface(tmp1__anonymous__uwfjfc, ReceiveOrClosed))
            return tmp1__anonymous__uwfjfc;
          tmp$ret$0 = true;
        }
        if (!tmp$ret$0) {
          tmp$ret$1 = false;
          break $l$block;
        }
        tmp0_addLastIfPrev.fp(send);
        tmp$ret$1 = true;
      }
    } else {
      var tmp$ret$3;
      $l$block_1: {
        var tmp2_addLastIfPrevAndIf = this.ds_1;
        var tmp$ret$2;
        {
          var tmp3__anonymous__ufb84q = tmp2_addLastIfPrevAndIf.xl_1;
          if (isInterface(tmp3__anonymous__ufb84q, ReceiveOrClosed))
            return tmp3__anonymous__ufb84q;
          tmp$ret$2 = true;
        }
        if (!tmp$ret$2) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        var tmp$ret$4;
        {
          tmp$ret$4 = this.uu();
        }
        if (!tmp$ret$4) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        tmp2_addLastIfPrevAndIf.fp(send);
        tmp$ret$3 = true;
      }
      if (!tmp$ret$3)
        return get_ENQUEUE_FAILED();
    }
    return null;
  };
  AbstractSendChannel.prototype.nu = function (cause) {
    var closed = new Closed(cause);
    var tmp$ret$1;
    $l$block: {
      var tmp0_addLastIfPrev = this.ds_1;
      var tmp$ret$0;
      {
        var tmp1__anonymous__uwfjfc = tmp0_addLastIfPrev.xl_1;
        tmp$ret$0 = !(tmp1__anonymous__uwfjfc instanceof Closed);
      }
      if (!tmp$ret$0) {
        tmp$ret$1 = false;
        break $l$block;
      }
      tmp0_addLastIfPrev.fp(closed);
      tmp$ret$1 = true;
    }
    var closeAdded = tmp$ret$1;
    var tmp;
    if (closeAdded) {
      tmp = closed;
    } else {
      var tmp$ret$2;
      {
        var tmp2__get_prevNode__jhgj3a = this.ds_1;
        tmp$ret$2 = tmp2__get_prevNode__jhgj3a.xl_1;
      }
      var tmp_0 = tmp$ret$2;
      tmp = tmp_0 instanceof Closed ? tmp_0 : THROW_CCE();
    }
    var actuallyClosed = tmp;
    helpClose(this, actuallyClosed);
    if (closeAdded)
      invokeOnCloseHandler(this, cause);
    return closeAdded;
  };
  AbstractSendChannel.prototype.zu = function (closed) {
  };
  AbstractSendChannel.prototype.su = function () {
    var tmp$ret$0;
    $l$block_1: {
      var tmp1_removeFirstIfIsInstanceOfOrPeekIf = this.ds_1;
      var next = tmp1_removeFirstIfIsInstanceOfOrPeekIf.wl_1;
      if (next === tmp1_removeFirstIfIsInstanceOfOrPeekIf) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      if (!isInterface(next, ReceiveOrClosed)) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      var tmp$ret$1;
      {
        var tmp2__anonymous__z9zvc9 = next;
        tmp$ret$1 = tmp2__anonymous__z9zvc9 instanceof Closed;
      }
      if (tmp$ret$1) {
        tmp$ret$0 = next;
        break $l$block_1;
      }
      {
        var tmp0_check = next.gp();
        {
        }
        if (!tmp0_check) {
          var tmp$ret$2;
          {
            tmp$ret$2 = 'Should remove';
          }
          var message = tmp$ret$2;
          throw IllegalStateException_init_$Create$(toString_0(message));
        }
      }
      tmp$ret$0 = next;
    }
    return tmp$ret$0;
  };
  AbstractSendChannel.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this) + '{' + _get_queueDebugStateString__k7jj75(this) + '}' + this.av();
  };
  AbstractSendChannel.prototype.av = function () {
    return '';
  };
  AbstractSendChannel.$metadata$ = classMeta('AbstractSendChannel', [SendChannel]);
  function Send() {
    LinkedListNode.call(this);
  }
  Send.prototype.fu = function () {
  };
  Send.$metadata$ = classMeta('Send', undefined, undefined, undefined, undefined, LinkedListNode.prototype);
  function ReceiveOrClosed() {
  }
  ReceiveOrClosed.$metadata$ = interfaceMeta('ReceiveOrClosed');
  function Closed(closeCause) {
    Send.call(this);
    this.mt_1 = closeCause;
  }
  Closed.prototype.bv = function () {
    var tmp0_elvis_lhs = this.mt_1;
    return tmp0_elvis_lhs == null ? new ClosedSendChannelException(get_DEFAULT_CLOSE_MESSAGE()) : tmp0_elvis_lhs;
  };
  Closed.prototype.nt = function () {
    var tmp0_elvis_lhs = this.mt_1;
    return tmp0_elvis_lhs == null ? new ClosedReceiveChannelException(get_DEFAULT_CLOSE_MESSAGE()) : tmp0_elvis_lhs;
  };
  Closed.prototype.pt = function () {
    return this;
  };
  Closed.prototype.eu = function () {
    return this;
  };
  Closed.prototype.cu = function (otherOp) {
    var tmp$ret$0;
    {
      var tmp0_also = get_RESUME_TOKEN();
      {
      }
      {
        var tmp0_safe_receiver = otherOp;
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.ht();
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  Closed.prototype.du = function () {
  };
  Closed.prototype.dt = function (value, otherOp) {
    var tmp$ret$0;
    {
      var tmp0_also = get_RESUME_TOKEN();
      {
      }
      {
        var tmp0_safe_receiver = otherOp;
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.ht();
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  Closed.prototype.it = function (value) {
  };
  Closed.prototype.ru = function (closed) {
    return Unit_getInstance();
  };
  Closed.prototype.toString = function () {
    return 'Closed@' + get_hexAddress(this) + '[' + this.mt_1 + ']';
  };
  Closed.$metadata$ = classMeta('Closed', [ReceiveOrClosed], undefined, undefined, undefined, Send.prototype);
  function Receive() {
    LinkedListNode.call(this);
  }
  Receive.prototype.pt = function () {
    return get_OFFER_SUCCESS();
  };
  Receive.prototype.us = function (value) {
    return null;
  };
  Receive.$metadata$ = classMeta('Receive', [ReceiveOrClosed], undefined, undefined, undefined, LinkedListNode.prototype);
  function toResult(_this__u8e3s4) {
    init_properties_AbstractChannel_kt_mjk5bh();
    var tmp;
    if (_this__u8e3s4 instanceof Closed) {
      tmp = Companion_getInstance_0().ot(_this__u8e3s4.mt_1);
    } else {
      var tmp_0 = Companion_getInstance_0();
      tmp = tmp_0.ct((_this__u8e3s4 == null ? true : isObject(_this__u8e3s4)) ? _this__u8e3s4 : THROW_CCE());
    }
    return tmp;
  }
  function toResult_0(_this__u8e3s4) {
    init_properties_AbstractChannel_kt_mjk5bh();
    return Companion_getInstance_0().ot(_this__u8e3s4.mt_1);
  }
  function SendElement(pollResult, cont) {
    Send.call(this);
    this.lv_1 = pollResult;
    this.mv_1 = cont;
  }
  SendElement.prototype.eu = function () {
    return this.lv_1;
  };
  SendElement.prototype.at = function () {
    return this.mv_1;
  };
  SendElement.prototype.cu = function (otherOp) {
    var tmp0_safe_receiver = otherOp;
    var tmp1_elvis_lhs = this.mv_1.bl(Unit_getInstance(), tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ft_1);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var token = tmp;
    {
    }
    var tmp2_safe_receiver = otherOp;
    if (tmp2_safe_receiver == null)
      null;
    else {
      tmp2_safe_receiver.ht();
    }
    return get_RESUME_TOKEN();
  };
  SendElement.prototype.du = function () {
    return this.mv_1.dl(get_RESUME_TOKEN());
  };
  SendElement.prototype.ru = function (closed) {
    var tmp$ret$1;
    {
      var tmp0_resumeWithException = this.mv_1;
      var tmp1_resumeWithException = closed.bv();
      var tmp$ret$0;
      {
        var tmp0_failure = Companion_getInstance();
        tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_resumeWithException));
      }
      tmp$ret$1 = tmp0_resumeWithException.m3(tmp$ret$0);
    }
    return tmp$ret$1;
  };
  SendElement.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this) + '(' + this.eu() + ')';
  };
  SendElement.$metadata$ = classMeta('SendElement', undefined, undefined, undefined, undefined, Send.prototype);
  function SendElementWithUndeliveredHandler(pollResult, cont, onUndeliveredElement) {
    SendElement.call(this, pollResult, cont);
    this.sv_1 = onUndeliveredElement;
  }
  SendElementWithUndeliveredHandler.prototype.zl = function () {
    if (!SendElement.prototype.zl.call(this))
      return false;
    this.fu();
    return true;
  };
  SendElementWithUndeliveredHandler.prototype.fu = function () {
    callUndeliveredElement(this.sv_1, this.eu(), this.at().o3());
  };
  SendElementWithUndeliveredHandler.$metadata$ = classMeta('SendElementWithUndeliveredHandler', undefined, undefined, undefined, undefined, SendElement.prototype);
  var properties_initialized_AbstractChannel_kt_uwqnpt;
  function init_properties_AbstractChannel_kt_mjk5bh() {
    if (properties_initialized_AbstractChannel_kt_uwqnpt) {
    } else {
      properties_initialized_AbstractChannel_kt_uwqnpt = true;
      EMPTY = new Symbol('EMPTY');
      OFFER_SUCCESS = new Symbol('OFFER_SUCCESS');
      OFFER_FAILED = new Symbol('OFFER_FAILED');
      POLL_FAILED = new Symbol('POLL_FAILED');
      ENQUEUE_FAILED = new Symbol('ENQUEUE_FAILED');
      HANDLER_INVOKED = new Symbol('ON_CLOSE_HANDLER_INVOKED');
    }
  }
  function updateBufferSize($this, currentSize) {
    if (currentSize < $this.wv_1) {
      $this.bw_1.ai_1 = currentSize + 1 | 0;
      return null;
    }
    var tmp0_subject = $this.xv_1;
    var tmp0 = tmp0_subject.u4();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = get_OFFER_FAILED();
        break;
      case 2:
        tmp = get_OFFER_SUCCESS();
        break;
      case 1:
        tmp = null;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function enqueueElement($this, currentSize, element) {
    if (currentSize < $this.wv_1) {
      ensureCapacity($this, currentSize);
      $this.zv_1[($this.aw_1 + currentSize | 0) % $this.zv_1.length | 0] = element;
    } else {
      {
      }
      $this.zv_1[$this.aw_1 % $this.zv_1.length | 0] = null;
      $this.zv_1[($this.aw_1 + currentSize | 0) % $this.zv_1.length | 0] = element;
      $this.aw_1 = ($this.aw_1 + 1 | 0) % $this.zv_1.length | 0;
    }
  }
  function ensureCapacity($this, currentSize) {
    if (currentSize >= $this.zv_1.length) {
      var tmp$ret$0;
      {
        var tmp0_min = imul($this.zv_1.length, 2);
        var tmp1_min = $this.wv_1;
        tmp$ret$0 = Math.min(tmp0_min, tmp1_min);
      }
      var newSize = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = fillArrayVal(Array(newSize), null);
      }
      var newBuffer = tmp$ret$1;
      var inductionVariable = 0;
      if (inductionVariable < currentSize)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          newBuffer[i] = $this.zv_1[($this.aw_1 + i | 0) % $this.zv_1.length | 0];
        }
         while (inductionVariable < currentSize);
      fill(newBuffer, get_EMPTY(), currentSize, newSize);
      $this.zv_1 = newBuffer;
      $this.aw_1 = 0;
    }
  }
  function ArrayChannel(capacity, onBufferOverflow, onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
    this.wv_1 = capacity;
    this.xv_1 = onBufferOverflow;
    {
      var tmp0_require = this.wv_1 >= 1;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'ArrayChannel capacity must be at least 1, but ' + this.wv_1 + ' was specified';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString_0(message));
      }
    }
    this.yv_1 = new NoOpLock();
    var tmp = this;
    var tmp$ret$3;
    {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_min = this.wv_1;
          tmp$ret$1 = Math.min(tmp0_min, 8);
        }
        var tmp1_arrayOfNulls = tmp$ret$1;
        tmp$ret$2 = fillArrayVal(Array(tmp1_arrayOfNulls), null);
      }
      var tmp2_apply = tmp$ret$2;
      {
      }
      {
        var tmp_0 = get_EMPTY();
        fill$default(tmp2_apply, tmp_0, 0, 0, 6, null);
      }
      tmp$ret$3 = tmp2_apply;
    }
    tmp.zv_1 = tmp$ret$3;
    this.aw_1 = 0;
    this.bw_1 = atomic$int$1(0);
  }
  ArrayChannel.prototype.wt = function () {
    return false;
  };
  ArrayChannel.prototype.xt = function () {
    return this.bw_1.ai_1 === 0;
  };
  ArrayChannel.prototype.tu = function () {
    return false;
  };
  ArrayChannel.prototype.uu = function () {
    return this.bw_1.ai_1 === this.wv_1 ? this.xv_1.equals(BufferOverflow_SUSPEND_getInstance()) : false;
  };
  ArrayChannel.prototype.gu = function () {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.yv_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.gu.call(this);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ArrayChannel.prototype.vu = function (element) {
    var receive = null;
    var tmp$ret$3;
    {
      var tmp0_withLock = this.yv_1;
      var tmp$ret$2;
      $l$block: {
        var size = this.bw_1.ai_1;
        var tmp0_safe_receiver = this.pu();
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$0;
          {
            {
            }
            return tmp0_safe_receiver;
          }
        }
        var tmp1_safe_receiver = updateBufferSize(this, size);
        if (tmp1_safe_receiver == null)
          null;
        else {
          var tmp$ret$1;
          {
            {
            }
            return tmp1_safe_receiver;
          }
        }
        if (size === 0) {
          loop: while (true) {
            var tmp2_elvis_lhs = this.su();
            var tmp;
            if (tmp2_elvis_lhs == null) {
              break loop;
            } else {
              tmp = tmp2_elvis_lhs;
            }
            receive = tmp;
            if (receive instanceof Closed) {
              this.bw_1.ai_1 = size;
              return ensureNotNull(receive);
            }
            var token = ensureNotNull(receive).dt(element, null);
            if (!(token == null)) {
              {
              }
              this.bw_1.ai_1 = size;
              tmp$ret$2 = Unit_getInstance();
              break $l$block;
            }
          }
        }
        enqueueElement(this, size, element);
        return get_OFFER_SUCCESS();
      }
      tmp$ret$3 = tmp$ret$2;
    }
    ensureNotNull(receive).it(element);
    return ensureNotNull(receive).pt();
  };
  ArrayChannel.prototype.xu = function (send) {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.yv_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.xu.call(this, send);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ArrayChannel.prototype.js = function () {
    var send = null;
    var resumed = false;
    var result = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.yv_1;
      var size = this.bw_1.ai_1;
      if (size === 0) {
        var tmp0_elvis_lhs = this.pu();
        return tmp0_elvis_lhs == null ? get_POLL_FAILED() : tmp0_elvis_lhs;
      }
      result = this.zv_1[this.aw_1];
      this.zv_1[this.aw_1] = null;
      this.bw_1.ai_1 = size - 1 | 0;
      var replacement = get_POLL_FAILED();
      if (size === this.wv_1) {
        loop: while (true) {
          var tmp1_elvis_lhs = this.yt();
          var tmp;
          if (tmp1_elvis_lhs == null) {
            break loop;
          } else {
            tmp = tmp1_elvis_lhs;
          }
          send = tmp;
          var token = ensureNotNull(send).cu(null);
          if (!(token == null)) {
            {
            }
            resumed = true;
            replacement = ensureNotNull(send).eu();
            break loop;
          }
          ensureNotNull(send).fu();
        }
      }
      var tmp_0;
      if (!(replacement === get_POLL_FAILED())) {
        tmp_0 = !(replacement instanceof Closed);
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        this.bw_1.ai_1 = size;
        this.zv_1[(this.aw_1 + size | 0) % this.zv_1.length | 0] = replacement;
      }
      this.aw_1 = (this.aw_1 + 1 | 0) % this.zv_1.length | 0;
      tmp$ret$0 = Unit_getInstance();
    }
    if (resumed)
      ensureNotNull(send).du();
    return result;
  };
  ArrayChannel.prototype.vs = function (receive) {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.yv_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.vs.call(this, receive);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ArrayChannel.prototype.ou = function (wasClosed) {
    var onUndeliveredElement = this.fs();
    var undeliveredElementException = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.yv_1;
      {
        var tmp0_repeat = this.bw_1.ai_1;
        {
        }
        var inductionVariable = 0;
        if (inductionVariable < tmp0_repeat)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            {
              var value = this.zv_1[this.aw_1];
              if (!(onUndeliveredElement == null) ? !(value === get_EMPTY()) : false) {
                undeliveredElementException = callUndeliveredElementCatchingException(onUndeliveredElement, (value == null ? true : isObject(value)) ? value : THROW_CCE(), undeliveredElementException);
              }
              this.zv_1[this.aw_1] = get_EMPTY();
              this.aw_1 = (this.aw_1 + 1 | 0) % this.zv_1.length | 0;
            }
          }
           while (inductionVariable < tmp0_repeat);
      }
      this.bw_1.ai_1 = 0;
      tmp$ret$0 = Unit_getInstance();
    }
    AbstractChannel.prototype.ou.call(this, wasClosed);
    var tmp0_safe_receiver = undeliveredElementException;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        throw tmp0_safe_receiver;
      }
    }
  };
  ArrayChannel.prototype.av = function () {
    return '(buffer:capacity=' + this.wv_1 + ',size=' + this.bw_1.ai_1 + ')';
  };
  ArrayChannel.$metadata$ = classMeta('ArrayChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  var BufferOverflow_SUSPEND_instance;
  var BufferOverflow_DROP_OLDEST_instance;
  var BufferOverflow_DROP_LATEST_instance;
  var BufferOverflow_entriesInitialized;
  function BufferOverflow_initEntries() {
    if (BufferOverflow_entriesInitialized)
      return Unit_getInstance();
    BufferOverflow_entriesInitialized = true;
    BufferOverflow_SUSPEND_instance = new BufferOverflow('SUSPEND', 0);
    BufferOverflow_DROP_OLDEST_instance = new BufferOverflow('DROP_OLDEST', 1);
    BufferOverflow_DROP_LATEST_instance = new BufferOverflow('DROP_LATEST', 2);
  }
  function BufferOverflow(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  BufferOverflow.$metadata$ = classMeta('BufferOverflow', undefined, undefined, undefined, undefined, Enum.prototype);
  function BufferOverflow_SUSPEND_getInstance() {
    BufferOverflow_initEntries();
    return BufferOverflow_SUSPEND_instance;
  }
  function BufferOverflow_DROP_OLDEST_getInstance() {
    BufferOverflow_initEntries();
    return BufferOverflow_DROP_OLDEST_instance;
  }
  function Factory() {
    Factory_instance = this;
    this.cw_1 = 2147483647;
    this.dw_1 = 0;
    this.ew_1 = -1;
    this.fw_1 = -2;
    this.gw_1 = -3;
    this.hw_1 = 'kotlinx.coroutines.channels.defaultBuffer';
    this.iw_1 = systemProp('kotlinx.coroutines.channels.defaultBuffer', 64, 1, 2147483646);
  }
  Factory.$metadata$ = objectMeta('Factory');
  var Factory_instance;
  function Factory_getInstance() {
    if (Factory_instance == null)
      new Factory();
    return Factory_instance;
  }
  function Channel() {
  }
  Channel.$metadata$ = interfaceMeta('Channel', [SendChannel, ReceiveChannel]);
  function ReceiveChannel() {
  }
  ReceiveChannel.$metadata$ = interfaceMeta('ReceiveChannel');
  function SendChannel() {
  }
  SendChannel.$metadata$ = interfaceMeta('SendChannel');
  function _ChannelResult___init__impl__siwsuf(holder) {
    return holder;
  }
  function _ChannelResult___get_holder__impl__pm9gzw($this) {
    return $this;
  }
  function _ChannelResult___get_isClosed__impl__mg7kuu($this) {
    var tmp = _ChannelResult___get_holder__impl__pm9gzw($this);
    return tmp instanceof Closed_0;
  }
  function ChannelResult__getOrThrow_impl_od1axs($this) {
    var tmp = _ChannelResult___get_holder__impl__pm9gzw($this);
    if (!(tmp instanceof Failed)) {
      var tmp_0 = _ChannelResult___get_holder__impl__pm9gzw($this);
      return (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
    }
    var tmp_1;
    var tmp_2 = _ChannelResult___get_holder__impl__pm9gzw($this);
    if (tmp_2 instanceof Closed_0) {
      tmp_1 = !(_ChannelResult___get_holder__impl__pm9gzw($this).jw_1 == null);
    } else {
      tmp_1 = false;
    }
    if (tmp_1)
      throw _ChannelResult___get_holder__impl__pm9gzw($this).jw_1;
    {
      var tmp0_error = "Trying to call 'getOrThrow' on a failed channel result: " + toString(_ChannelResult___get_holder__impl__pm9gzw($this));
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    }
  }
  function ChannelResult__exceptionOrNull_impl_16ei30($this) {
    var tmp = _ChannelResult___get_holder__impl__pm9gzw($this);
    var tmp0_safe_receiver = tmp instanceof Closed_0 ? tmp : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.jw_1;
  }
  function Failed() {
  }
  Failed.prototype.toString = function () {
    return 'Failed';
  };
  Failed.$metadata$ = classMeta('Failed');
  function Closed_0(cause) {
    Failed.call(this);
    this.jw_1 = cause;
  }
  Closed_0.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Closed_0) {
      tmp = equals(this.jw_1, other.jw_1);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Closed_0.prototype.hashCode = function () {
    var tmp$ret$0;
    {
      var tmp0_hashCode = this.jw_1;
      var tmp0_safe_receiver = tmp0_hashCode;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
      tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    }
    return tmp$ret$0;
  };
  Closed_0.prototype.toString = function () {
    return 'Closed(' + this.jw_1 + ')';
  };
  Closed_0.$metadata$ = classMeta('Closed', undefined, undefined, undefined, undefined, Failed.prototype);
  function Companion() {
    Companion_instance = this;
    this.bt_1 = new Failed();
  }
  Companion.prototype.ct = function (value) {
    return _ChannelResult___init__impl__siwsuf(value);
  };
  Companion.prototype.ot = function (cause) {
    return _ChannelResult___init__impl__siwsuf(new Closed_0(cause));
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_0() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function ChannelResult__toString_impl_rrcqu7($this) {
    var tmp0_subject = _ChannelResult___get_holder__impl__pm9gzw($this);
    var tmp;
    if (tmp0_subject instanceof Closed_0) {
      tmp = toString_0(_ChannelResult___get_holder__impl__pm9gzw($this));
    } else {
      tmp = 'Value(' + toString(_ChannelResult___get_holder__impl__pm9gzw($this)) + ')';
    }
    return tmp;
  }
  function ChannelResult__hashCode_impl_lilec2($this) {
    return $this == null ? 0 : hashCode($this);
  }
  function ChannelResult__equals_impl_f471ri($this, other) {
    if (!(other instanceof ChannelResult))
      return false;
    var tmp0_other_with_cast = other instanceof ChannelResult ? other.ku_1 : THROW_CCE();
    if (!equals($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function ChannelResult(holder) {
    Companion_getInstance_0();
    this.ku_1 = holder;
  }
  ChannelResult.prototype.toString = function () {
    return ChannelResult__toString_impl_rrcqu7(this.ku_1);
  };
  ChannelResult.prototype.hashCode = function () {
    return ChannelResult__hashCode_impl_lilec2(this.ku_1);
  };
  ChannelResult.prototype.equals = function (other) {
    return ChannelResult__equals_impl_f471ri(this.ku_1, other);
  };
  ChannelResult.$metadata$ = classMeta('ChannelResult');
  function ClosedReceiveChannelException(message) {
    NoSuchElementException_init_$Init$(message, this);
    captureStack(this, ClosedReceiveChannelException);
  }
  ClosedReceiveChannelException.$metadata$ = classMeta('ClosedReceiveChannelException', undefined, undefined, undefined, undefined, NoSuchElementException.prototype);
  function Channel_0(capacity, onBufferOverflow, onUndeliveredElement) {
    var tmp0_subject = capacity;
    var tmp;
    Factory_getInstance();
    if (tmp0_subject === 0) {
      tmp = onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance()) ? new RendezvousChannel(onUndeliveredElement) : new ArrayChannel(1, onBufferOverflow, onUndeliveredElement);
    } else {
      Factory_getInstance();
      if (tmp0_subject === -1) {
        {
          var tmp0_require = onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance());
          {
          }
          if (!tmp0_require) {
            var tmp$ret$0;
            {
              tmp$ret$0 = 'CONFLATED capacity cannot be used with non-default onBufferOverflow';
            }
            var message = tmp$ret$0;
            throw IllegalArgumentException_init_$Create$(toString_0(message));
          }
        }
        tmp = new ConflatedChannel(onUndeliveredElement);
      } else {
        Factory_getInstance();
        if (tmp0_subject === 2147483647) {
          tmp = new LinkedListChannel(onUndeliveredElement);
        } else {
          Factory_getInstance();
          if (tmp0_subject === -2) {
            tmp = new ArrayChannel(onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance()) ? Factory_getInstance().iw_1 : 1, onBufferOverflow, onUndeliveredElement);
          } else {
            tmp = (capacity === 1 ? onBufferOverflow.equals(BufferOverflow_DROP_OLDEST_getInstance()) : false) ? new ConflatedChannel(onUndeliveredElement) : new ArrayChannel(capacity, onBufferOverflow, onUndeliveredElement);
          }
        }
      }
    }
    return tmp;
  }
  function Channel$default(capacity, onBufferOverflow, onUndeliveredElement, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      Factory_getInstance();
      capacity = 0;
    }
    if (!(($mask0 & 2) === 0))
      onBufferOverflow = BufferOverflow_SUSPEND_getInstance();
    if (!(($mask0 & 4) === 0))
      onUndeliveredElement = null;
    return Channel_0(capacity, onBufferOverflow, onUndeliveredElement);
  }
  function ClosedSendChannelException(message) {
    IllegalStateException_init_$Init$(message, this);
    captureStack(this, ClosedSendChannelException);
  }
  ClosedSendChannelException.$metadata$ = classMeta('ClosedSendChannelException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function ChannelCoroutine(parentContext, _channel, initParentJob, active) {
    AbstractCoroutine.call(this, parentContext, initParentJob, active);
    this.nw_1 = _channel;
  }
  ChannelCoroutine.prototype.ow = function () {
    return this.nw_1;
  };
  ChannelCoroutine.prototype.nu = function (cause) {
    return this.nw_1.nu(cause);
  };
  ChannelCoroutine.prototype.ju = function ($cont) {
    var tmp = this.nw_1.ju($cont);
    if (tmp === get_COROUTINE_SUSPENDED())
      return tmp;
    return new ChannelResult(tmp.ku_1);
  };
  ChannelCoroutine.prototype.wu = function (element, $cont) {
    return this.nw_1.wu(element, $cont);
  };
  ChannelCoroutine.prototype.lu = function (cause) {
    if (this.sq())
      return Unit_getInstance();
    var tmp0_elvis_lhs = cause;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_elvis_lhs_0 = null;
        tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs_0 == null ? this.vi() : tmp0_elvis_lhs_0, null, this);
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    this.pw(tmp);
  };
  ChannelCoroutine.prototype.pw = function (cause) {
    var exception = this.rj(cause, null, 1, null);
    this.nw_1.lu(exception);
    this.tq(exception);
  };
  ChannelCoroutine.$metadata$ = classMeta('ChannelCoroutine', [Channel], undefined, undefined, undefined, AbstractCoroutine.prototype);
  function get_DEFAULT_CLOSE_MESSAGE() {
    return DEFAULT_CLOSE_MESSAGE;
  }
  var DEFAULT_CLOSE_MESSAGE;
  function cancelConsumed(_this__u8e3s4, cause) {
    var tmp0_safe_receiver = cause;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = tmp0_safe_receiver instanceof CancellationException ? tmp0_safe_receiver : null;
          tmp$ret$0 = tmp0_elvis_lhs == null ? CancellationException_init_$Create$_0('Channel was consumed, consumer had failed', tmp0_safe_receiver) : tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    _this__u8e3s4.lu(tmp);
  }
  function updateValueLocked($this, element) {
    var old = $this.uw_1;
    var tmp;
    if (old === get_EMPTY()) {
      tmp = null;
    } else {
      var tmp0_safe_receiver = $this.fs();
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp_1 = (old == null ? true : isObject(old)) ? old : THROW_CCE();
        tmp_0 = callUndeliveredElementCatchingException$default(tmp0_safe_receiver, tmp_1, null, 2, null);
      }
      tmp = tmp_0;
    }
    var undeliveredElementException = tmp;
    $this.uw_1 = element;
    return undeliveredElementException;
  }
  function ConflatedChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
    this.tw_1 = new NoOpLock();
    this.uw_1 = get_EMPTY();
  }
  ConflatedChannel.prototype.wt = function () {
    return false;
  };
  ConflatedChannel.prototype.xt = function () {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.tw_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = this.uw_1 === get_EMPTY();
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ConflatedChannel.prototype.tu = function () {
    return false;
  };
  ConflatedChannel.prototype.uu = function () {
    return false;
  };
  ConflatedChannel.prototype.vu = function (element) {
    var receive = null;
    var tmp$ret$3;
    {
      var tmp0_withLock = this.tw_1;
      var tmp$ret$1;
      $l$block: {
        var tmp0_safe_receiver = this.pu();
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$0;
          {
            {
            }
            return tmp0_safe_receiver;
          }
        }
        if (this.uw_1 === get_EMPTY()) {
          loop: while (true) {
            var tmp1_elvis_lhs = this.su();
            var tmp;
            if (tmp1_elvis_lhs == null) {
              break loop;
            } else {
              tmp = tmp1_elvis_lhs;
            }
            receive = tmp;
            if (receive instanceof Closed) {
              return ensureNotNull(receive);
            }
            var token = ensureNotNull(receive).dt(element, null);
            if (!(token == null)) {
              {
              }
              tmp$ret$1 = Unit_getInstance();
              break $l$block;
            }
          }
        }
        var tmp2_safe_receiver = updateValueLocked(this, element);
        if (tmp2_safe_receiver == null)
          null;
        else {
          var tmp$ret$2;
          {
            {
            }
            throw tmp2_safe_receiver;
          }
        }
        return get_OFFER_SUCCESS();
      }
      tmp$ret$3 = tmp$ret$1;
    }
    ensureNotNull(receive).it(element);
    return ensureNotNull(receive).pt();
  };
  ConflatedChannel.prototype.js = function () {
    var result = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.tw_1;
      if (this.uw_1 === get_EMPTY()) {
        var tmp0_elvis_lhs = this.pu();
        return tmp0_elvis_lhs == null ? get_POLL_FAILED() : tmp0_elvis_lhs;
      }
      result = this.uw_1;
      this.uw_1 = get_EMPTY();
      tmp$ret$0 = Unit_getInstance();
    }
    return result;
  };
  ConflatedChannel.prototype.ou = function (wasClosed) {
    var undeliveredElementException = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.tw_1;
      undeliveredElementException = updateValueLocked(this, get_EMPTY());
      tmp$ret$0 = Unit_getInstance();
    }
    AbstractChannel.prototype.ou.call(this, wasClosed);
    var tmp0_safe_receiver = undeliveredElementException;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        throw tmp0_safe_receiver;
      }
    }
  };
  ConflatedChannel.prototype.vs = function (receive) {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.tw_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.vs.call(this, receive);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ConflatedChannel.prototype.av = function () {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.tw_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = '(value=' + toString(this.uw_1) + ')';
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ConflatedChannel.$metadata$ = classMeta('ConflatedChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  function LinkedListChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
  }
  LinkedListChannel.prototype.wt = function () {
    return true;
  };
  LinkedListChannel.prototype.xt = function () {
    return true;
  };
  LinkedListChannel.prototype.tu = function () {
    return false;
  };
  LinkedListChannel.prototype.uu = function () {
    return false;
  };
  LinkedListChannel.prototype.vu = function (element) {
    while (true) {
      var result = AbstractChannel.prototype.vu.call(this, element);
      if (result === get_OFFER_SUCCESS())
        return get_OFFER_SUCCESS();
      else {
        if (result === get_OFFER_FAILED()) {
          var sendResult = this.hv(element);
          if (sendResult == null)
            return get_OFFER_SUCCESS();
          else {
            if (sendResult instanceof Closed)
              return sendResult;
          }
        } else {
          if (result instanceof Closed)
            return result;
          else {
            var tmp0_error = 'Invalid offerInternal result ' + toString_0(result);
            throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
          }
        }
      }
    }
  };
  LinkedListChannel.prototype.qu = function (list, closed) {
    var undeliveredElementException = null;
    var tmp$ret$0;
    $l$block: {
      var tmp0_subject = _get_holder__f6h5pd(list);
      if (tmp0_subject == null) {
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      } else {
        if (!(tmp0_subject instanceof ArrayList)) {
          var tmp = _get_holder__f6h5pd(list);
          var tmp0__anonymous__q1qw7t = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
          var tmp0_subject_0 = tmp0__anonymous__q1qw7t;
          if (tmp0_subject_0 instanceof SendBuffered) {
            var tmp1_safe_receiver = this.fs();
            var tmp_0;
            if (tmp1_safe_receiver == null) {
              tmp_0 = null;
            } else {
              var tmp_1 = tmp0__anonymous__q1qw7t.fv_1;
              tmp_0 = callUndeliveredElementCatchingException(tmp1_safe_receiver, (tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE(), undeliveredElementException);
            }
            undeliveredElementException = tmp_0;
          } else {
            tmp0__anonymous__q1qw7t.ru(closed);
          }
        } else {
          var tmp_2 = _get_holder__f6h5pd(list);
          var list_0 = tmp_2 instanceof ArrayList ? tmp_2 : THROW_CCE();
          var inductionVariable = list_0.g() - 1 | 0;
          if (0 <= inductionVariable)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + -1 | 0;
              {
                var tmp1__anonymous__uwfjfc = list_0.h(i);
                var tmp0_subject_1 = tmp1__anonymous__uwfjfc;
                if (tmp0_subject_1 instanceof SendBuffered) {
                  var tmp1_safe_receiver_0 = this.fs();
                  var tmp_3;
                  if (tmp1_safe_receiver_0 == null) {
                    tmp_3 = null;
                  } else {
                    var tmp_4 = tmp1__anonymous__uwfjfc.fv_1;
                    tmp_3 = callUndeliveredElementCatchingException(tmp1_safe_receiver_0, (tmp_4 == null ? true : isObject(tmp_4)) ? tmp_4 : THROW_CCE(), undeliveredElementException);
                  }
                  undeliveredElementException = tmp_3;
                } else {
                  tmp1__anonymous__uwfjfc.ru(closed);
                }
              }
            }
             while (0 <= inductionVariable);
        }
      }
    }
    var tmp0_safe_receiver = undeliveredElementException;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        throw tmp0_safe_receiver;
      }
    }
  };
  LinkedListChannel.$metadata$ = classMeta('LinkedListChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  function produce(_this__u8e3s4, context, capacity, block) {
    return produce_0(_this__u8e3s4, context, capacity, BufferOverflow_SUSPEND_getInstance(), CoroutineStart_DEFAULT_getInstance(), null, block);
  }
  function ProducerScope() {
  }
  ProducerScope.$metadata$ = interfaceMeta('ProducerScope', [CoroutineScope, SendChannel]);
  function produce_0(_this__u8e3s4, context, capacity, onBufferOverflow, start, onCompletion, block) {
    var channel = Channel$default(capacity, onBufferOverflow, null, 4, null);
    var newContext = newCoroutineContext(_this__u8e3s4, context);
    var coroutine = new ProducerCoroutine(newContext, channel);
    if (!(onCompletion == null)) {
      coroutine.on(onCompletion);
    }
    coroutine.fj(start, coroutine, block);
    return coroutine;
  }
  function produce$default(_this__u8e3s4, context, capacity, onBufferOverflow, start, onCompletion, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      context = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      capacity = 0;
    if (!(($mask0 & 4) === 0))
      onBufferOverflow = BufferOverflow_SUSPEND_getInstance();
    if (!(($mask0 & 8) === 0))
      start = CoroutineStart_DEFAULT_getInstance();
    if (!(($mask0 & 16) === 0))
      onCompletion = null;
    return produce_0(_this__u8e3s4, context, capacity, onBufferOverflow, start, onCompletion, block);
  }
  function ProducerCoroutine(parentContext, channel) {
    ChannelCoroutine.call(this, parentContext, channel, true, true);
  }
  ProducerCoroutine.prototype.si = function () {
    return ChannelCoroutine.prototype.si.call(this);
  };
  ProducerCoroutine.prototype.cx = function (value) {
    var tmp = this.ow();
    tmp.yu(null, 1, null);
  };
  ProducerCoroutine.prototype.ti = function (value) {
    return this.cx(value instanceof Unit ? value : THROW_CCE());
  };
  ProducerCoroutine.prototype.ui = function (cause, handled) {
    var processed = this.ow().nu(cause);
    if (!processed ? !handled : false)
      handleCoroutineException(this.o3(), cause);
  };
  ProducerCoroutine.$metadata$ = classMeta('ProducerCoroutine', [ProducerScope], undefined, undefined, undefined, ChannelCoroutine.prototype);
  function RendezvousChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
  }
  RendezvousChannel.prototype.wt = function () {
    return true;
  };
  RendezvousChannel.prototype.xt = function () {
    return true;
  };
  RendezvousChannel.prototype.tu = function () {
    return true;
  };
  RendezvousChannel.prototype.uu = function () {
    return true;
  };
  RendezvousChannel.$metadata$ = classMeta('RendezvousChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  function flow(block) {
    return new SafeFlow(block);
  }
  function SafeFlow(block) {
    AbstractFlow.call(this);
    this.gx_1 = block;
  }
  SafeFlow.prototype.hx = function (collector, $cont) {
    return this.gx_1(collector, $cont);
  };
  SafeFlow.$metadata$ = classMeta('SafeFlow', undefined, undefined, undefined, undefined, AbstractFlow.prototype);
  function asFlow(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  function $collectCOROUTINE$2(_this__u8e3s4, collector, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.rx_1 = _this__u8e3s4;
    this.sx_1 = collector;
  }
  $collectCOROUTINE$2.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 4;
            this.tx_1 = this.rx_1.vx_1.d();
            this.sg_1 = 1;
            continue $sm;
          case 1:
            if (!this.tx_1.e()) {
              this.sg_1 = 3;
              continue $sm;
            }

            this.ux_1 = this.tx_1.f();
            this.sg_1 = 2;
            suspendResult = this.sx_1.wx(this.ux_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.sg_1 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 4) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $collectCOROUTINE$2.$metadata$ = classMeta('$collectCOROUTINE$2', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function _no_name_provided__qut3iv($this_asFlow) {
    this.vx_1 = $this_asFlow;
  }
  _no_name_provided__qut3iv.prototype.ix = function (collector, $cont) {
    var tmp = new $collectCOROUTINE$2(this, collector, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Flow]);
  function emitAll(_this__u8e3s4, channel, $cont) {
    return emitAllImpl(_this__u8e3s4, channel, true, $cont);
  }
  function emitAllImpl(_this__u8e3s4, channel, consume, $cont) {
    var tmp = new $emitAllImplCOROUTINE$3(_this__u8e3s4, channel, consume, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  }
  function $emitAllImplCOROUTINE$3(_this__u8e3s4, channel, consume, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.fy_1 = _this__u8e3s4;
    this.gy_1 = channel;
    this.hy_1 = consume;
  }
  $emitAllImplCOROUTINE$3.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 11;
            ensureActive_1(this.fy_1);
            this.iy_1 = null;
            this.sg_1 = 1;
            continue $sm;
          case 1:
            this.tg_1 = 9;
            this.tg_1 = 8;
            this.sg_1 = 2;
            continue $sm;
          case 2:
            if (false) {}

            this.sg_1 = 3;
            suspendResult = this.gy_1.ju(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            this.sg_1 = 4;
            continue $sm;
          case 3:
            this.ky_1 = suspendResult.ku_1;
            suspendResult = new ChannelResult(this.ky_1);
            this.sg_1 = 4;
            continue $sm;
          case 4:
            this.ly_1 = suspendResult.ku_1;
            if (_ChannelResult___get_isClosed__impl__mg7kuu(this.ly_1)) {
              var tmp0_safe_receiver = ChannelResult__exceptionOrNull_impl_16ei30(this.ly_1);
              if (tmp0_safe_receiver == null)
                null;
              else {
                throw tmp0_safe_receiver;
              }
              this.sg_1 = 7;
              continue $sm;
            } else {
              this.sg_1 = 5;
              continue $sm;
            }

            break;
          case 5:
            this.sg_1 = 6;
            suspendResult = this.fy_1.wx(ChannelResult__getOrThrow_impl_od1axs(this.ly_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            this.sg_1 = 2;
            continue $sm;
          case 7:
            this.jy_1 = Unit_getInstance();
            this.tg_1 = 11;
            this.sg_1 = 10;
            continue $sm;
          case 8:
            this.tg_1 = 9;
            var tmp_0 = this.vg_1;
            if (tmp_0 instanceof Error) {
              var e = this.vg_1;
              var tmp_1 = this;
              this.iy_1 = e;
              throw e;
            } else {
              throw this.vg_1;
            }

            break;
          case 9:
            this.tg_1 = 11;
            var t = this.vg_1;
            if (this.hy_1)
              cancelConsumed(this.gy_1, this.iy_1);
            throw t;
          case 10:
            if (this.hy_1)
              cancelConsumed(this.gy_1, this.iy_1);
            return Unit_getInstance();
          case 11:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 11) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $emitAllImplCOROUTINE$3.$metadata$ = classMeta('$emitAllImplCOROUTINE$3', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function Flow() {
  }
  Flow.$metadata$ = interfaceMeta('Flow');
  function $collectCOROUTINE$4(_this__u8e3s4, collector, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.uy_1 = _this__u8e3s4;
    this.vy_1 = collector;
  }
  $collectCOROUTINE$4.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 5;
            var tmp_0 = this;
            tmp_0.wy_1 = new SafeCollector(this.vy_1, this.o3());
            this.sg_1 = 1;
            continue $sm;
          case 1:
            this.tg_1 = 4;
            this.sg_1 = 2;
            suspendResult = this.uy_1.hx(this.wy_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.xy_1 = suspendResult;
            this.tg_1 = 5;
            this.sg_1 = 3;
            continue $sm;
          case 3:
            this.wy_1.cz();
            return Unit_getInstance();
          case 4:
            this.tg_1 = 5;
            var t = this.vg_1;
            this.wy_1.cz();
            throw t;
          case 5:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 5) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $collectCOROUTINE$4.$metadata$ = classMeta('$collectCOROUTINE$4', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function AbstractFlow() {
  }
  AbstractFlow.prototype.ix = function (collector, $cont) {
    var tmp = new $collectCOROUTINE$4(this, collector, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  AbstractFlow.$metadata$ = classMeta('AbstractFlow', [Flow, CancellableFlow]);
  function FlowCollector() {
  }
  FlowCollector.$metadata$ = interfaceMeta('FlowCollector');
  function ChannelFlow$_get_collectToFun_$slambda_j53z2e(this$0, resultContinuation) {
    this.lz_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  ChannelFlow$_get_collectToFun_$slambda_j53z2e.prototype.nz = function (it, $cont) {
    var tmp = this.oz(it, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  ChannelFlow$_get_collectToFun_$slambda_j53z2e.prototype.dh = function (p1, $cont) {
    return this.nz((!(p1 == null) ? isInterface(p1, ProducerScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  ChannelFlow$_get_collectToFun_$slambda_j53z2e.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = this.lz_1.sz(this.mz_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  ChannelFlow$_get_collectToFun_$slambda_j53z2e.prototype.oz = function (it, completion) {
    var i = new ChannelFlow$_get_collectToFun_$slambda_j53z2e(this.lz_1, completion);
    i.mz_1 = it;
    return i;
  };
  ChannelFlow$_get_collectToFun_$slambda_j53z2e.$metadata$ = classMeta('ChannelFlow$<get-collectToFun>$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function ChannelFlow$_get_collectToFun_$slambda_j53z2e_0(this$0, resultContinuation) {
    var i = new ChannelFlow$_get_collectToFun_$slambda_j53z2e(this$0, resultContinuation);
    var l = function (it, $cont) {
      return i.nz(it, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function ChannelFlow$collect$slambda($collector, this$0, resultContinuation) {
    this.b10_1 = $collector;
    this.c10_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  ChannelFlow$collect$slambda.prototype.e10 = function ($this$coroutineScope, $cont) {
    var tmp = this.f10($this$coroutineScope, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  ChannelFlow$collect$slambda.prototype.dh = function (p1, $cont) {
    return this.e10((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  ChannelFlow$collect$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = emitAll(this.b10_1, this.c10_1.g10(this.d10_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  ChannelFlow$collect$slambda.prototype.f10 = function ($this$coroutineScope, completion) {
    var i = new ChannelFlow$collect$slambda(this.b10_1, this.c10_1, completion);
    i.d10_1 = $this$coroutineScope;
    return i;
  };
  ChannelFlow$collect$slambda.$metadata$ = classMeta('ChannelFlow$collect$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function ChannelFlow$collect$slambda_0($collector, this$0, resultContinuation) {
    var i = new ChannelFlow$collect$slambda($collector, this$0, resultContinuation);
    var l = function ($this$coroutineScope, $cont) {
      return i.e10($this$coroutineScope, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function ChannelFlow(context, capacity, onBufferOverflow) {
    this.pz_1 = context;
    this.qz_1 = capacity;
    this.rz_1 = onBufferOverflow;
    {
    }
  }
  ChannelFlow.prototype.o3 = function () {
    return this.pz_1;
  };
  ChannelFlow.prototype.h10 = function () {
    return this.qz_1;
  };
  ChannelFlow.prototype.i10 = function () {
    return ChannelFlow$_get_collectToFun_$slambda_j53z2e_0(this, null);
  };
  ChannelFlow.prototype.j10 = function () {
    var tmp;
    Factory_getInstance();
    if (this.qz_1 === -3) {
      Factory_getInstance();
      tmp = -2;
    } else {
      tmp = this.qz_1;
    }
    return tmp;
  };
  ChannelFlow.prototype.g10 = function (scope) {
    var tmp = this.j10();
    var tmp_0 = CoroutineStart_ATOMIC_getInstance();
    return produce$default(scope, this.pz_1, tmp, this.rz_1, tmp_0, null, this.i10(), 16, null);
  };
  ChannelFlow.prototype.ix = function (collector, $cont) {
    return coroutineScope(ChannelFlow$collect$slambda_0(collector, this, null), $cont);
  };
  ChannelFlow.prototype.k10 = function () {
    return null;
  };
  ChannelFlow.prototype.toString = function () {
    var props = ArrayList_init_$Create$(4);
    var tmp0_safe_receiver = this.k10();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = props.c(tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
    }
    if (!(this.pz_1 === EmptyCoroutineContext_getInstance())) {
      props.c('context=' + this.pz_1);
    }
    Factory_getInstance();
    if (!(this.qz_1 === -3)) {
      props.c('capacity=' + this.qz_1);
    }
    if (!this.rz_1.equals(BufferOverflow_SUSPEND_getInstance())) {
      props.c('onBufferOverflow=' + this.rz_1);
    }
    var tmp = get_classSimpleName(this);
    return tmp + '[' + joinToString$default(props, ', ', null, null, 0, null, null, 62, null) + ']';
  };
  ChannelFlow.$metadata$ = classMeta('ChannelFlow', [FusibleFlow]);
  function FusibleFlow() {
  }
  FusibleFlow.$metadata$ = interfaceMeta('FusibleFlow', [Flow]);
  function checkOwnership(_this__u8e3s4, owner) {
    if (!(_this__u8e3s4.l10_1 === owner))
      throw _this__u8e3s4;
  }
  function ChannelFlowMerge$collectTo$slambda$slambda($inner, $collector, $semaphore, resultContinuation) {
    this.u10_1 = $inner;
    this.v10_1 = $collector;
    this.w10_1 = $semaphore;
    CoroutineImpl.call(this, resultContinuation);
  }
  ChannelFlowMerge$collectTo$slambda$slambda.prototype.e10 = function ($this$launch, $cont) {
    var tmp = this.f10($this$launch, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  ChannelFlowMerge$collectTo$slambda$slambda.prototype.dh = function (p1, $cont) {
    return this.e10((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  ChannelFlowMerge$collectTo$slambda$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 5;
            this.sg_1 = 1;
            continue $sm;
          case 1:
            this.tg_1 = 4;
            this.sg_1 = 2;
            suspendResult = this.u10_1.ix(this.v10_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.y10_1 = suspendResult;
            this.tg_1 = 5;
            this.sg_1 = 3;
            continue $sm;
          case 3:
            this.w10_1.un();
            return Unit_getInstance();
          case 4:
            this.tg_1 = 5;
            var t = this.vg_1;
            this.w10_1.un();
            throw t;
          case 5:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 5) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  ChannelFlowMerge$collectTo$slambda$slambda.prototype.f10 = function ($this$launch, completion) {
    var i = new ChannelFlowMerge$collectTo$slambda$slambda(this.u10_1, this.v10_1, this.w10_1, completion);
    i.x10_1 = $this$launch;
    return i;
  };
  ChannelFlowMerge$collectTo$slambda$slambda.$metadata$ = classMeta('ChannelFlowMerge$collectTo$slambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function ChannelFlowMerge$collectTo$slambda$slambda_0($inner, $collector, $semaphore, resultContinuation) {
    var i = new ChannelFlowMerge$collectTo$slambda$slambda($inner, $collector, $semaphore, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.e10($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function ChannelFlowMerge_init_$Init$(flow, concurrency, context, capacity, onBufferOverflow, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      context = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 8) === 0)) {
      Factory_getInstance();
      capacity = -2;
    }
    if (!(($mask0 & 16) === 0))
      onBufferOverflow = BufferOverflow_SUSPEND_getInstance();
    ChannelFlowMerge.call($this, flow, concurrency, context, capacity, onBufferOverflow);
    return $this;
  }
  function ChannelFlowMerge_init_$Create$(flow, concurrency, context, capacity, onBufferOverflow, $mask0, $marker) {
    return ChannelFlowMerge_init_$Init$(flow, concurrency, context, capacity, onBufferOverflow, $mask0, $marker, Object.create(ChannelFlowMerge.prototype));
  }
  function sam$kotlinx_coroutines_flow_FlowCollector$0(function_0) {
    this.z10_1 = function_0;
  }
  sam$kotlinx_coroutines_flow_FlowCollector$0.prototype.wx = function (value, $cont) {
    return this.z10_1(value, $cont);
  };
  sam$kotlinx_coroutines_flow_FlowCollector$0.$metadata$ = classMeta('sam$kotlinx_coroutines_flow_FlowCollector$0', [FlowCollector]);
  function ChannelFlowMerge$collectTo$slambda($job, $semaphore, $scope, $collector, resultContinuation) {
    this.i11_1 = $job;
    this.j11_1 = $semaphore;
    this.k11_1 = $scope;
    this.l11_1 = $collector;
    CoroutineImpl.call(this, resultContinuation);
  }
  ChannelFlowMerge$collectTo$slambda.prototype.n11 = function (inner, $cont) {
    var tmp = this.o11(inner, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  ChannelFlowMerge$collectTo$slambda.prototype.dh = function (p1, $cont) {
    return this.n11((!(p1 == null) ? isInterface(p1, Flow) : false) ? p1 : THROW_CCE(), $cont);
  };
  ChannelFlowMerge$collectTo$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            var tmp0_safe_receiver = this.i11_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              ensureActive_0(tmp0_safe_receiver);
            }

            ;
            this.sg_1 = 1;
            suspendResult = this.j11_1.p11(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            launch$default(this.k11_1, null, null, ChannelFlowMerge$collectTo$slambda$slambda_0(this.m11_1, this.l11_1, this.j11_1, null), 3, null);
            ;
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  ChannelFlowMerge$collectTo$slambda.prototype.o11 = function (inner, completion) {
    var i = new ChannelFlowMerge$collectTo$slambda(this.i11_1, this.j11_1, this.k11_1, this.l11_1, completion);
    i.m11_1 = inner;
    return i;
  };
  ChannelFlowMerge$collectTo$slambda.$metadata$ = classMeta('ChannelFlowMerge$collectTo$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function ChannelFlowMerge$collectTo$slambda_0($job, $semaphore, $scope, $collector, resultContinuation) {
    var i = new ChannelFlowMerge$collectTo$slambda($job, $semaphore, $scope, $collector, resultContinuation);
    var l = function (inner, $cont) {
      return i.n11(inner, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function ChannelFlowMerge(flow, concurrency, context, capacity, onBufferOverflow) {
    ChannelFlow.call(this, context, capacity, onBufferOverflow);
    this.t11_1 = flow;
    this.u11_1 = concurrency;
  }
  ChannelFlowMerge.prototype.g10 = function (scope) {
    return produce(scope, this.o3(), this.h10(), this.i10());
  };
  ChannelFlowMerge.prototype.sz = function (scope, $cont) {
    var semaphore = Semaphore$default(this.u11_1, 0, 2, null);
    var collector = new SendingCollector(scope);
    var tmp$ret$0;
    {
      tmp$ret$0 = $cont.o3();
    }
    var job = tmp$ret$0.z3(Key_getInstance_2());
    var tmp = ChannelFlowMerge$collectTo$slambda_0(job, semaphore, scope, collector, null);
    return this.t11_1.ix(new sam$kotlinx_coroutines_flow_FlowCollector$0(tmp), $cont);
  };
  ChannelFlowMerge.prototype.k10 = function () {
    return 'concurrency=' + this.u11_1;
  };
  ChannelFlowMerge.$metadata$ = classMeta('ChannelFlowMerge', undefined, undefined, undefined, undefined, ChannelFlow.prototype);
  function NopCollector() {
    NopCollector_instance = this;
  }
  NopCollector.prototype.v11 = function (value, $cont) {
    return Unit_getInstance();
  };
  NopCollector.prototype.wx = function (value, $cont) {
    return this.v11((value == null ? true : isObject(value)) ? value : THROW_CCE(), $cont);
  };
  NopCollector.$metadata$ = objectMeta('NopCollector', [FlowCollector]);
  var NopCollector_instance;
  function NopCollector_getInstance() {
    if (NopCollector_instance == null)
      new NopCollector();
    return NopCollector_instance;
  }
  function unsafeFlow(block) {
    return new _no_name_provided__qut3iv_0(block);
  }
  function checkContext(_this__u8e3s4, currentContext) {
    var result = currentContext.f4(0, checkContext$lambda(_this__u8e3s4));
    if (!(result === _this__u8e3s4.az_1)) {
      {
        var tmp0_error = 'Flow invariant is violated:\n' + ('\t\tFlow was collected in ' + _this__u8e3s4.zy_1 + ',\n') + ('\t\tbut emission happened in ' + currentContext + '.\n') + "\t\tPlease refer to 'flow' documentation or use 'flowOn' instead";
        throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
      }
    }
  }
  function transitiveCoroutineParent(_this__u8e3s4, collectJob) {
    var $this = _this__u8e3s4;
    var collectJob_0 = collectJob;
    while (true) {
      var $this_0 = $this;
      var collectJob_1 = collectJob_0;
      if ($this_0 === null)
        return null;
      if ($this_0 === collectJob_1)
        return $this_0;
      if (!($this_0 instanceof ScopeCoroutine))
        return $this_0;
      var tmp0 = $this_0.al();
      var tmp1 = collectJob_1;
      $this = tmp0;
      collectJob_0 = tmp1;
      continue;
    }
  }
  function _no_name_provided__qut3iv_0($block) {
    this.w11_1 = $block;
  }
  _no_name_provided__qut3iv_0.prototype.ix = function (collector, $cont) {
    return this.w11_1(collector, $cont);
  };
  _no_name_provided__qut3iv_0.$metadata$ = classMeta(undefined, [Flow]);
  function checkContext$lambda($this_checkContext) {
    return function (count, element) {
      var key = element.j1();
      var collectElement = $this_checkContext.zy_1.z3(key);
      var tmp;
      if (!(key === Key_getInstance_2())) {
        return !(element === collectElement) ? IntCompanionObject_getInstance().l_1 : count + 1 | 0;
      }
      var collectJob = (collectElement == null ? true : isInterface(collectElement, Job)) ? collectElement : THROW_CCE();
      var emissionParentJob = transitiveCoroutineParent(isInterface(element, Job) ? element : THROW_CCE(), collectJob);
      var tmp_0;
      if (!(emissionParentJob === collectJob)) {
        var tmp0_error = 'Flow invariant is violated:\n\t\tEmission from another coroutine is detected.\n' + ('\t\tChild of ' + emissionParentJob + ', expected child of ' + collectJob + '.\n') + '\t\tFlowCollector is not thread-safe and concurrent emissions are prohibited.\n' + "\t\tTo mitigate this restriction please use 'channelFlow' builder instead of 'flow'";
        throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
      }
      return collectJob == null ? count : count + 1 | 0;
    };
  }
  function SendingCollector(channel) {
    this.x11_1 = channel;
  }
  SendingCollector.prototype.wx = function (value, $cont) {
    return this.x11_1.wu(value, $cont);
  };
  SendingCollector.$metadata$ = classMeta('SendingCollector', [FlowCollector]);
  function CancellableFlow() {
  }
  CancellableFlow.$metadata$ = interfaceMeta('CancellableFlow', [Flow]);
  function unsafeTransform(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_1(_this__u8e3s4, transform);
    }
    return tmp$ret$0;
  }
  function ensureActive_1(_this__u8e3s4) {
    if (_this__u8e3s4 instanceof ThrowingCollector)
      throw _this__u8e3s4.y11_1;
  }
  function ThrowingCollector() {
  }
  ThrowingCollector.$metadata$ = classMeta('ThrowingCollector', [FlowCollector]);
  function sam$kotlinx_coroutines_flow_FlowCollector$0_0(function_0) {
    this.z11_1 = function_0;
  }
  sam$kotlinx_coroutines_flow_FlowCollector$0_0.prototype.wx = function (value, $cont) {
    return this.z11_1(value, $cont);
  };
  sam$kotlinx_coroutines_flow_FlowCollector$0_0.$metadata$ = classMeta('sam$kotlinx_coroutines_flow_FlowCollector$0', [FlowCollector]);
  function unsafeTransform$o$collect$slambda($transform, $collector, resultContinuation) {
    this.i12_1 = $transform;
    this.j12_1 = $collector;
    CoroutineImpl.call(this, resultContinuation);
  }
  unsafeTransform$o$collect$slambda.prototype.l12 = function (value, $cont) {
    var tmp = this.m12(value, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  unsafeTransform$o$collect$slambda.prototype.dh = function (p1, $cont) {
    return this.l12((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE(), $cont);
  };
  unsafeTransform$o$collect$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = this.i12_1(this.j12_1, this.k12_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  unsafeTransform$o$collect$slambda.prototype.m12 = function (value, completion) {
    var i = new unsafeTransform$o$collect$slambda(this.i12_1, this.j12_1, completion);
    i.k12_1 = value;
    return i;
  };
  unsafeTransform$o$collect$slambda.$metadata$ = classMeta('unsafeTransform$o$collect$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function unsafeTransform$o$collect$slambda_0($transform, $collector, resultContinuation) {
    var i = new unsafeTransform$o$collect$slambda($transform, $collector, resultContinuation);
    var l = function (value, $cont) {
      return i.l12(value, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function $collectCOROUTINE$5(_this__u8e3s4, collector, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.v12_1 = _this__u8e3s4;
    this.w12_1 = collector;
  }
  $collectCOROUTINE$5.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            var tmp_0 = unsafeTransform$o$collect$slambda_0(this.v12_1.y12_1, this.w12_1, null);
            suspendResult = this.v12_1.x12_1.ix(new sam$kotlinx_coroutines_flow_FlowCollector$0_0(tmp_0), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $collectCOROUTINE$5.$metadata$ = classMeta('$collectCOROUTINE$5', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function _no_name_provided__qut3iv_1($this_unsafeTransform, $transform) {
    this.x12_1 = $this_unsafeTransform;
    this.y12_1 = $transform;
  }
  _no_name_provided__qut3iv_1.prototype.z12 = function (collector, $cont) {
    var tmp = new $collectCOROUTINE$5(this, collector, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  _no_name_provided__qut3iv_1.prototype.ix = function (collector, $cont) {
    return this.z12(collector, $cont);
  };
  _no_name_provided__qut3iv_1.$metadata$ = classMeta(undefined, [Flow]);
  function transformWhile(_this__u8e3s4, transform) {
    return flow(transformWhile$slambda_0(_this__u8e3s4, transform, null));
  }
  function $emitCOROUTINE$7(_this__u8e3s4, value, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.i13_1 = _this__u8e3s4;
    this.j13_1 = value;
  }
  $emitCOROUTINE$7.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 3;
            this.sg_1 = 1;
            suspendResult = this.i13_1.k13_1(this.i13_1.l13_1, this.j13_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            if (!ARGUMENT) {
              throw new AbortFlowException(this.i13_1);
            } else {
              this.sg_1 = 2;
              continue $sm;
            }

            break;
          case 2:
            return Unit_getInstance();
          case 3:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 3) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $emitCOROUTINE$7.$metadata$ = classMeta('$emitCOROUTINE$7', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function _no_name_provided__qut3iv_2($transform, $this_flow) {
    this.k13_1 = $transform;
    this.l13_1 = $this_flow;
  }
  _no_name_provided__qut3iv_2.prototype.wx = function (value, $cont) {
    var tmp = new $emitCOROUTINE$7(this, value, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  _no_name_provided__qut3iv_2.$metadata$ = classMeta(undefined, [FlowCollector]);
  function transformWhile$slambda($this_transformWhile, $transform, resultContinuation) {
    this.u13_1 = $this_transformWhile;
    this.v13_1 = $transform;
    CoroutineImpl.call(this, resultContinuation);
  }
  transformWhile$slambda.prototype.y13 = function ($this$flow, $cont) {
    var tmp = this.z13($this$flow, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  transformWhile$slambda.prototype.dh = function (p1, $cont) {
    return this.y13((!(p1 == null) ? isInterface(p1, FlowCollector) : false) ? p1 : THROW_CCE(), $cont);
  };
  transformWhile$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 3;
            var tmp_0 = this;
            tmp_0.x13_1 = new _no_name_provided__qut3iv_2(this.v13_1, this.w13_1);
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = this.u13_1.ix(this.x13_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.tg_1 = 3;
            this.sg_1 = 4;
            continue $sm;
          case 2:
            this.tg_1 = 3;
            var tmp_1 = this.vg_1;
            if (tmp_1 instanceof AbortFlowException) {
              var e = this.vg_1;
              checkOwnership(e, this.x13_1);
              this.sg_1 = 4;
              continue $sm;
            } else {
              throw this.vg_1;
            }

            break;
          case 3:
            throw this.vg_1;
          case 4:
            this.tg_1 = 3;
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.tg_1 === 3) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  transformWhile$slambda.prototype.z13 = function ($this$flow, completion) {
    var i = new transformWhile$slambda(this.u13_1, this.v13_1, completion);
    i.w13_1 = $this$flow;
    return i;
  };
  transformWhile$slambda.$metadata$ = classMeta('transformWhile$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function transformWhile$slambda_0($this_transformWhile, $transform, resultContinuation) {
    var i = new transformWhile$slambda($this_transformWhile, $transform, resultContinuation);
    var l = function ($this$flow, $cont) {
      return i.y13($this$flow, $cont);
    };
    l.$arity = 1;
    return l;
  }
  var DEFAULT_CONCURRENCY;
  function flatMapMerge(_this__u8e3s4, concurrency, transform) {
    init_properties_Merge_kt_uorl8c();
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = new _no_name_provided__qut3iv_3(_this__u8e3s4, transform);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return flattenMerge(tmp$ret$2, concurrency);
  }
  function flattenMerge(_this__u8e3s4, concurrency) {
    init_properties_Merge_kt_uorl8c();
    {
      var tmp0_require = concurrency > 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Expected positive concurrency level, but had ' + concurrency;
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString_0(message));
      }
    }
    var tmp;
    if (concurrency === 1) {
      tmp = flattenConcat(_this__u8e3s4);
    } else {
      tmp = ChannelFlowMerge_init_$Create$(_this__u8e3s4, concurrency, null, 0, null, 28, null);
    }
    return tmp;
  }
  function flattenConcat(_this__u8e3s4) {
    init_properties_Merge_kt_uorl8c();
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_4(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  function sam$kotlinx_coroutines_flow_FlowCollector$0_1(function_0) {
    this.a14_1 = function_0;
  }
  sam$kotlinx_coroutines_flow_FlowCollector$0_1.prototype.wx = function (value, $cont) {
    return this.a14_1(value, $cont);
  };
  sam$kotlinx_coroutines_flow_FlowCollector$0_1.$metadata$ = classMeta('sam$kotlinx_coroutines_flow_FlowCollector$0', [FlowCollector]);
  function flatMapMerge$o$collect$slambda($collector, $transform, resultContinuation) {
    this.j14_1 = $collector;
    this.k14_1 = $transform;
    CoroutineImpl.call(this, resultContinuation);
  }
  flatMapMerge$o$collect$slambda.prototype.l12 = function (value, $cont) {
    var tmp = this.m12(value, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  flatMapMerge$o$collect$slambda.prototype.dh = function (p1, $cont) {
    return this.l12((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE(), $cont);
  };
  flatMapMerge$o$collect$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 3;
            this.sg_1 = 1;
            suspendResult = this.k14_1(this.l14_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.m14_1 = suspendResult;
            this.sg_1 = 2;
            suspendResult = this.j14_1.wx(this.m14_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return Unit_getInstance();
          case 3:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 3) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  flatMapMerge$o$collect$slambda.prototype.m12 = function (value, completion) {
    var i = new flatMapMerge$o$collect$slambda(this.j14_1, this.k14_1, completion);
    i.l14_1 = value;
    return i;
  };
  flatMapMerge$o$collect$slambda.$metadata$ = classMeta('flatMapMerge$o$collect$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function flatMapMerge$o$collect$slambda_0($collector, $transform, resultContinuation) {
    var i = new flatMapMerge$o$collect$slambda($collector, $transform, resultContinuation);
    var l = function (value, $cont) {
      return i.l12(value, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function $collectCOROUTINE$11(_this__u8e3s4, collector, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.v14_1 = _this__u8e3s4;
    this.w14_1 = collector;
  }
  $collectCOROUTINE$11.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            var tmp_0 = flatMapMerge$o$collect$slambda_0(this.w14_1, this.v14_1.y14_1, null);
            suspendResult = this.v14_1.x14_1.ix(new sam$kotlinx_coroutines_flow_FlowCollector$0_1(tmp_0), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $collectCOROUTINE$11.$metadata$ = classMeta('$collectCOROUTINE$11', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function _no_name_provided__qut3iv_3($this_flatMapMerge, $transform) {
    this.x14_1 = $this_flatMapMerge;
    this.y14_1 = $transform;
  }
  _no_name_provided__qut3iv_3.prototype.z14 = function (collector, $cont) {
    var tmp = new $collectCOROUTINE$11(this, collector, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  _no_name_provided__qut3iv_3.prototype.ix = function (collector, $cont) {
    return this.z14(collector, $cont);
  };
  _no_name_provided__qut3iv_3.$metadata$ = classMeta(undefined, [Flow]);
  function sam$kotlinx_coroutines_flow_FlowCollector$0_2(function_0) {
    this.a15_1 = function_0;
  }
  sam$kotlinx_coroutines_flow_FlowCollector$0_2.prototype.wx = function (value, $cont) {
    return this.a15_1(value, $cont);
  };
  sam$kotlinx_coroutines_flow_FlowCollector$0_2.$metadata$ = classMeta('sam$kotlinx_coroutines_flow_FlowCollector$0', [FlowCollector]);
  function flattenConcat$o$collect$slambda($collector, resultContinuation) {
    this.j15_1 = $collector;
    CoroutineImpl.call(this, resultContinuation);
  }
  flattenConcat$o$collect$slambda.prototype.n11 = function (value, $cont) {
    var tmp = this.o11(value, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  flattenConcat$o$collect$slambda.prototype.dh = function (p1, $cont) {
    return this.n11((!(p1 == null) ? isInterface(p1, Flow) : false) ? p1 : THROW_CCE(), $cont);
  };
  flattenConcat$o$collect$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = emitAll_0(this.j15_1, this.k15_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  flattenConcat$o$collect$slambda.prototype.o11 = function (value, completion) {
    var i = new flattenConcat$o$collect$slambda(this.j15_1, completion);
    i.k15_1 = value;
    return i;
  };
  flattenConcat$o$collect$slambda.$metadata$ = classMeta('flattenConcat$o$collect$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function flattenConcat$o$collect$slambda_0($collector, resultContinuation) {
    var i = new flattenConcat$o$collect$slambda($collector, resultContinuation);
    var l = function (value, $cont) {
      return i.n11(value, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function $collectCOROUTINE$12(_this__u8e3s4, collector, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.t15_1 = _this__u8e3s4;
    this.u15_1 = collector;
  }
  $collectCOROUTINE$12.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            var tmp_0 = flattenConcat$o$collect$slambda_0(this.u15_1, null);
            suspendResult = this.t15_1.v15_1.ix(new sam$kotlinx_coroutines_flow_FlowCollector$0_2(tmp_0), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $collectCOROUTINE$12.$metadata$ = classMeta('$collectCOROUTINE$12', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function _no_name_provided__qut3iv_4($this_flattenConcat) {
    this.v15_1 = $this_flattenConcat;
  }
  _no_name_provided__qut3iv_4.prototype.ix = function (collector, $cont) {
    var tmp = new $collectCOROUTINE$12(this, collector, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  _no_name_provided__qut3iv_4.$metadata$ = classMeta(undefined, [Flow]);
  var properties_initialized_Merge_kt_dhn6vs;
  function init_properties_Merge_kt_uorl8c() {
    if (properties_initialized_Merge_kt_dhn6vs) {
    } else {
      properties_initialized_Merge_kt_dhn6vs = true;
      DEFAULT_CONCURRENCY = systemProp('kotlinx.coroutines.flow.defaultConcurrency', 16, 1, IntCompanionObject_getInstance().m_1);
    }
  }
  function map(_this__u8e3s4, transform) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = new _no_name_provided__qut3iv_5(_this__u8e3s4, transform);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function sam$kotlinx_coroutines_flow_FlowCollector$0_3(function_0) {
    this.w15_1 = function_0;
  }
  sam$kotlinx_coroutines_flow_FlowCollector$0_3.prototype.wx = function (value, $cont) {
    return this.w15_1(value, $cont);
  };
  sam$kotlinx_coroutines_flow_FlowCollector$0_3.$metadata$ = classMeta('sam$kotlinx_coroutines_flow_FlowCollector$0', [FlowCollector]);
  function map$o$collect$slambda($collector, $transform, resultContinuation) {
    this.f16_1 = $collector;
    this.g16_1 = $transform;
    CoroutineImpl.call(this, resultContinuation);
  }
  map$o$collect$slambda.prototype.l12 = function (value, $cont) {
    var tmp = this.m12(value, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  map$o$collect$slambda.prototype.dh = function (p1, $cont) {
    return this.l12((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE(), $cont);
  };
  map$o$collect$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 3;
            this.sg_1 = 1;
            suspendResult = this.g16_1(this.h16_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.i16_1 = suspendResult;
            this.sg_1 = 2;
            suspendResult = this.f16_1.wx(this.i16_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return Unit_getInstance();
          case 3:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 3) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  map$o$collect$slambda.prototype.m12 = function (value, completion) {
    var i = new map$o$collect$slambda(this.f16_1, this.g16_1, completion);
    i.h16_1 = value;
    return i;
  };
  map$o$collect$slambda.$metadata$ = classMeta('map$o$collect$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function map$o$collect$slambda_0($collector, $transform, resultContinuation) {
    var i = new map$o$collect$slambda($collector, $transform, resultContinuation);
    var l = function (value, $cont) {
      return i.l12(value, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function $collectCOROUTINE$14(_this__u8e3s4, collector, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.r16_1 = _this__u8e3s4;
    this.s16_1 = collector;
  }
  $collectCOROUTINE$14.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            var tmp_0 = map$o$collect$slambda_0(this.s16_1, this.r16_1.u16_1, null);
            suspendResult = this.r16_1.t16_1.ix(new sam$kotlinx_coroutines_flow_FlowCollector$0_3(tmp_0), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $collectCOROUTINE$14.$metadata$ = classMeta('$collectCOROUTINE$14', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function _no_name_provided__qut3iv_5($this_map, $transform) {
    this.t16_1 = $this_map;
    this.u16_1 = $transform;
  }
  _no_name_provided__qut3iv_5.prototype.z12 = function (collector, $cont) {
    var tmp = new $collectCOROUTINE$14(this, collector, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  _no_name_provided__qut3iv_5.prototype.ix = function (collector, $cont) {
    return this.z12(collector, $cont);
  };
  _no_name_provided__qut3iv_5.$metadata$ = classMeta(undefined, [Flow]);
  function collect(_this__u8e3s4, $cont) {
    return _this__u8e3s4.ix(NopCollector_getInstance(), $cont);
  }
  function emitAll_0(_this__u8e3s4, flow, $cont) {
    ensureActive_1(_this__u8e3s4);
    return flow.ix(_this__u8e3s4, $cont);
  }
  function toList(_this__u8e3s4, destination, $cont) {
    return toCollection(_this__u8e3s4, destination, $cont);
  }
  function toList$default(_this__u8e3s4, destination, $cont, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      destination = ArrayList_init_$Create$_0();
    return toList(_this__u8e3s4, destination, $cont);
  }
  function toCollection(_this__u8e3s4, destination, $cont) {
    var tmp = new $toCollectionCOROUTINE$15(_this__u8e3s4, destination, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  }
  function sam$kotlinx_coroutines_flow_FlowCollector$0_4(function_0) {
    this.f17_1 = function_0;
  }
  sam$kotlinx_coroutines_flow_FlowCollector$0_4.prototype.wx = function (value, $cont) {
    return this.f17_1(value, $cont);
  };
  sam$kotlinx_coroutines_flow_FlowCollector$0_4.$metadata$ = classMeta('sam$kotlinx_coroutines_flow_FlowCollector$0', [FlowCollector]);
  function toCollection$slambda($destination, resultContinuation) {
    this.o17_1 = $destination;
    CoroutineImpl.call(this, resultContinuation);
  }
  toCollection$slambda.prototype.l12 = function (value, $cont) {
    var tmp = this.m12(value, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  toCollection$slambda.prototype.dh = function (p1, $cont) {
    return this.l12((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE(), $cont);
  };
  toCollection$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        if (tmp === 0) {
          this.tg_1 = 1;
          this.o17_1.c(this.p17_1);
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this.vg_1;
        }
      } catch ($p) {
        throw $p;
      }
     while (true);
  };
  toCollection$slambda.prototype.m12 = function (value, completion) {
    var i = new toCollection$slambda(this.o17_1, completion);
    i.p17_1 = value;
    return i;
  };
  toCollection$slambda.$metadata$ = classMeta('toCollection$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function toCollection$slambda_0($destination, resultContinuation) {
    var i = new toCollection$slambda($destination, resultContinuation);
    var l = function (value, $cont) {
      return i.l12(value, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function $toCollectionCOROUTINE$15(_this__u8e3s4, destination, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.d17_1 = _this__u8e3s4;
    this.e17_1 = destination;
  }
  $toCollectionCOROUTINE$15.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            var tmp_0 = toCollection$slambda_0(this.e17_1, null);
            suspendResult = this.d17_1.ix(new sam$kotlinx_coroutines_flow_FlowCollector$0_4(tmp_0), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return this.e17_1;
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $toCollectionCOROUTINE$15.$metadata$ = classMeta('$toCollectionCOROUTINE$15', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function ensureCapacity_0($this) {
    var currentSize = $this.bo_1.length;
    var newCapacity = currentSize << 1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(newCapacity), null);
    }
    var newElements = tmp$ret$0;
    var tmp$ret$1;
    {
      var tmp0_copyInto = $this.bo_1;
      var tmp1_copyInto = $this.co_1;
      var tmp2_copyInto = tmp0_copyInto.length;
      arrayCopy(tmp0_copyInto, newElements, 0, tmp1_copyInto, tmp2_copyInto);
      tmp$ret$1 = newElements;
    }
    var tmp$ret$2;
    {
      var tmp3_copyInto = $this.bo_1;
      var tmp4_copyInto = $this.bo_1.length - $this.co_1 | 0;
      var tmp5_copyInto = $this.co_1;
      arrayCopy(tmp3_copyInto, newElements, tmp4_copyInto, 0, tmp5_copyInto);
      tmp$ret$2 = newElements;
    }
    $this.bo_1 = newElements;
    $this.co_1 = 0;
    $this.do_1 = currentSize;
  }
  function ArrayQueue() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(16), null);
    }
    tmp.bo_1 = tmp$ret$0;
    this.co_1 = 0;
    this.do_1 = 0;
  }
  ArrayQueue.prototype.jo = function () {
    return this.co_1 === this.do_1;
  };
  ArrayQueue.prototype.go = function (element) {
    this.bo_1[this.do_1] = element;
    this.do_1 = (this.do_1 + 1 | 0) & (this.bo_1.length - 1 | 0);
    if (this.do_1 === this.co_1)
      ensureCapacity_0(this);
  };
  ArrayQueue.prototype.eo = function () {
    if (this.co_1 === this.do_1)
      return null;
    var element = this.bo_1[this.co_1];
    this.bo_1[this.co_1] = null;
    this.co_1 = (this.co_1 + 1 | 0) & (this.bo_1.length - 1 | 0);
    return isObject(element) ? element : THROW_CCE();
  };
  ArrayQueue.$metadata$ = classMeta('ArrayQueue');
  function OpDescriptor() {
  }
  OpDescriptor.$metadata$ = classMeta('OpDescriptor');
  function get_CLOSED() {
    init_properties_ConcurrentLinkedList_kt_u21ib0();
    return CLOSED;
  }
  var CLOSED;
  function _SegmentOrClosed___init__impl__jnexvb(value) {
    return value;
  }
  function _get_value__a43j40($this) {
    return $this;
  }
  function _SegmentOrClosed___get_isClosed__impl__qmxmlo($this) {
    return _get_value__a43j40($this) === get_CLOSED();
  }
  function _SegmentOrClosed___get_segment__impl__jvcr9l($this) {
    var tmp;
    if (_get_value__a43j40($this) === get_CLOSED()) {
      throw IllegalStateException_init_$Create$('Does not contain segment');
    } else {
      var tmp_0 = _get_value__a43j40($this);
      tmp = tmp_0 instanceof Segment ? tmp_0 : THROW_CCE();
    }
    return tmp;
  }
  function SegmentOrClosed__toString_impl_pzb2an($this) {
    return 'SegmentOrClosed(value=' + toString($this) + ')';
  }
  function SegmentOrClosed__hashCode_impl_4855hs($this) {
    return $this == null ? 0 : hashCode($this);
  }
  function SegmentOrClosed__equals_impl_6erq1g($this, other) {
    if (!(other instanceof SegmentOrClosed))
      return false;
    var tmp0_other_with_cast = other instanceof SegmentOrClosed ? other.q17_1 : THROW_CCE();
    if (!equals($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function SegmentOrClosed(value) {
    this.q17_1 = value;
  }
  SegmentOrClosed.prototype.toString = function () {
    return SegmentOrClosed__toString_impl_pzb2an(this.q17_1);
  };
  SegmentOrClosed.prototype.hashCode = function () {
    return SegmentOrClosed__hashCode_impl_4855hs(this.q17_1);
  };
  SegmentOrClosed.prototype.equals = function (other) {
    return SegmentOrClosed__equals_impl_6erq1g(this.q17_1, other);
  };
  SegmentOrClosed.$metadata$ = classMeta('SegmentOrClosed');
  function findSegmentAndMoveForward(_this__u8e3s4, id, startFrom, createNewSegment) {
    init_properties_ConcurrentLinkedList_kt_u21ib0();
    while (true) {
      var tmp$ret$0;
      $l$block: {
        var cur = startFrom;
        $l$loop: while (cur.t17_1.r(id) < 0 ? true : cur.v17()) {
          var tmp$ret$3;
          {
            var tmp1_nextOrIfClosed = cur;
            var tmp$ret$2;
            {
              var tmp0_let = _get_nextOrClosed__w0gmuv(tmp1_nextOrIfClosed);
              {
              }
              var tmp$ret$1;
              {
                var tmp;
                if (tmp0_let === get_CLOSED()) {
                  tmp$ret$0 = _SegmentOrClosed___init__impl__jnexvb(get_CLOSED());
                  break $l$block;
                } else {
                  tmp = (tmp0_let == null ? true : tmp0_let instanceof ConcurrentLinkedListNode) ? tmp0_let : THROW_CCE();
                }
                tmp$ret$1 = tmp;
              }
              tmp$ret$2 = tmp$ret$1;
            }
            tmp$ret$3 = tmp$ret$2;
          }
          var next = tmp$ret$3;
          if (!(next == null)) {
            cur = next;
            continue $l$loop;
          }
          var tmp$ret$4;
          {
            var tmp2_plus = cur.t17_1;
            tmp$ret$4 = tmp2_plus.z4(new Long(1, 0));
          }
          var newTail = createNewSegment(tmp$ret$4, cur);
          if (cur.z17(newTail)) {
            if (cur.v17())
              cur.y17();
            cur = newTail;
          }
        }
        tmp$ret$0 = _SegmentOrClosed___init__impl__jnexvb(cur);
      }
      var s = tmp$ret$0;
      var tmp_0;
      if (_SegmentOrClosed___get_isClosed__impl__qmxmlo(s)) {
        tmp_0 = true;
      } else {
        var tmp$ret$5;
        $l$block_2: {
          var tmp4_moveForward = _SegmentOrClosed___get_segment__impl__jvcr9l(s);
          while (true) {
            {
              var tmp3__anonymous__ufb84q = _this__u8e3s4.zh_1;
              if (tmp3__anonymous__ufb84q.t17_1.r(tmp4_moveForward.t17_1) >= 0) {
                tmp$ret$5 = true;
                break $l$block_2;
              }
              if (!tmp4_moveForward.a18()) {
                tmp$ret$5 = false;
                break $l$block_2;
              }
              if (_this__u8e3s4.atomicfu$compareAndSet(tmp3__anonymous__ufb84q, tmp4_moveForward)) {
                if (tmp3__anonymous__ufb84q.b18())
                  tmp3__anonymous__ufb84q.y17();
                tmp$ret$5 = true;
                break $l$block_2;
              }
              if (tmp4_moveForward.b18())
                tmp4_moveForward.y17();
            }
          }
          tmp$ret$5 = Unit_getInstance();
        }
        tmp_0 = tmp$ret$5;
      }
      if (tmp_0)
        return s;
    }
  }
  function Segment(id, prev, pointers) {
    ConcurrentLinkedListNode.call(this, prev);
    this.t17_1 = id;
    this.u17_1 = atomic$int$1(pointers << 16);
  }
  Segment.prototype.c18 = function () {
    return this.t17_1;
  };
  Segment.prototype.v17 = function () {
    return this.u17_1.ai_1 === this.d18() ? !this.e18() : false;
  };
  Segment.prototype.a18 = function () {
    var tmp$ret$1;
    $l$block_0: {
      var tmp0_addConditionally = this.u17_1;
      var tmp1_addConditionally = 65536;
      while (true) {
        var cur = tmp0_addConditionally.ai_1;
        var tmp$ret$0;
        {
          tmp$ret$0 = !(cur === this.d18()) ? true : this.e18();
        }
        if (!tmp$ret$0) {
          tmp$ret$1 = false;
          break $l$block_0;
        }
        if (tmp0_addConditionally.atomicfu$compareAndSet(cur, cur + tmp1_addConditionally | 0)) {
          tmp$ret$1 = true;
          break $l$block_0;
        }
      }
    }
    return tmp$ret$1;
  };
  Segment.prototype.b18 = function () {
    return this.u17_1.atomicfu$addAndGet(-65536) === this.d18() ? !this.e18() : false;
  };
  Segment.prototype.f18 = function () {
    if (this.u17_1.atomicfu$incrementAndGet() === this.d18() ? !this.e18() : false)
      this.y17();
  };
  Segment.$metadata$ = classMeta('Segment', undefined, undefined, undefined, undefined, ConcurrentLinkedListNode.prototype);
  function findSegmentInternal(_this__u8e3s4, id, createNewSegment) {
    init_properties_ConcurrentLinkedList_kt_u21ib0();
    var cur = _this__u8e3s4;
    $l$loop: while (cur.t17_1.r(id) < 0 ? true : cur.v17()) {
      var tmp$ret$2;
      {
        var tmp1_nextOrIfClosed = cur;
        var tmp$ret$1;
        {
          var tmp0_let = _get_nextOrClosed__w0gmuv(tmp1_nextOrIfClosed);
          {
          }
          var tmp$ret$0;
          {
            var tmp;
            if (tmp0_let === get_CLOSED()) {
              return _SegmentOrClosed___init__impl__jnexvb(get_CLOSED());
            } else {
              tmp = (tmp0_let == null ? true : tmp0_let instanceof ConcurrentLinkedListNode) ? tmp0_let : THROW_CCE();
            }
            tmp$ret$0 = tmp;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var next = tmp$ret$2;
      if (!(next == null)) {
        cur = next;
        continue $l$loop;
      }
      var tmp$ret$3;
      {
        var tmp2_plus = cur.t17_1;
        tmp$ret$3 = tmp2_plus.z4(new Long(1, 0));
      }
      var newTail = createNewSegment(tmp$ret$3, cur);
      if (cur.z17(newTail)) {
        if (cur.v17())
          cur.y17();
        cur = newTail;
      }
    }
    return _SegmentOrClosed___init__impl__jnexvb(cur);
  }
  function moveForward(_this__u8e3s4, to) {
    init_properties_ConcurrentLinkedList_kt_u21ib0();
    while (true) {
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.zh_1;
        if (tmp0__anonymous__q1qw7t.t17_1.r(to.t17_1) >= 0)
          return true;
        if (!to.a18())
          return false;
        if (_this__u8e3s4.atomicfu$compareAndSet(tmp0__anonymous__q1qw7t, to)) {
          if (tmp0__anonymous__q1qw7t.b18())
            tmp0__anonymous__q1qw7t.y17();
          return true;
        }
        if (to.b18())
          to.y17();
      }
    }
    return Unit_getInstance();
  }
  function _get_nextOrClosed__w0gmuv($this) {
    return $this.w17_1.zh_1;
  }
  function _get_leftmostAliveNode__kwbzbo($this) {
    var cur = $this.i18();
    while (!(cur === null) ? cur.v17() : false)
      cur = cur.x17_1.zh_1;
    return cur;
  }
  function _get_rightmostAliveNode__e6c5q3($this) {
    {
    }
    var cur = ensureNotNull($this.h18());
    while (cur.v17())
      cur = ensureNotNull(cur.h18());
    return cur;
  }
  function ConcurrentLinkedListNode(prev) {
    this.w17_1 = atomic$ref$1(null);
    this.x17_1 = atomic$ref$1(prev);
  }
  ConcurrentLinkedListNode.prototype.g18 = function (onClosedAction) {
    var tmp$ret$1;
    {
      var tmp0_let = _get_nextOrClosed__w0gmuv(this);
      {
      }
      var tmp$ret$0;
      {
        var tmp;
        if (tmp0_let === get_CLOSED()) {
          onClosedAction();
          tmp = throwKotlinNothingValueException();
        } else {
          tmp = (tmp0_let == null ? true : tmp0_let instanceof ConcurrentLinkedListNode) ? tmp0_let : THROW_CCE();
        }
        tmp$ret$0 = tmp;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ConcurrentLinkedListNode.prototype.h18 = function () {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp0_let = _get_nextOrClosed__w0gmuv(this);
        {
        }
        var tmp$ret$0;
        {
          var tmp;
          if (tmp0_let === get_CLOSED()) {
            return null;
          } else {
            tmp = (tmp0_let == null ? true : tmp0_let instanceof ConcurrentLinkedListNode) ? tmp0_let : THROW_CCE();
          }
          tmp$ret$0 = tmp;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  ConcurrentLinkedListNode.prototype.z17 = function (value) {
    return this.w17_1.atomicfu$compareAndSet(null, value);
  };
  ConcurrentLinkedListNode.prototype.e18 = function () {
    return this.h18() == null;
  };
  ConcurrentLinkedListNode.prototype.i18 = function () {
    return this.x17_1.zh_1;
  };
  ConcurrentLinkedListNode.prototype.j18 = function () {
    {
      var tmp0_lazySet = this.x17_1;
      tmp0_lazySet.zh_1 = null;
    }
  };
  ConcurrentLinkedListNode.prototype.y17 = function () {
    {
    }
    {
    }
    $l$loop_0: while (true) {
      var prev = _get_leftmostAliveNode__kwbzbo(this);
      var next = _get_rightmostAliveNode__e6c5q3(this);
      next.x17_1.zh_1 = prev;
      if (!(prev === null))
        prev.w17_1.zh_1 = next;
      if (next.v17())
        continue $l$loop_0;
      if (!(prev === null) ? prev.v17() : false)
        continue $l$loop_0;
      return Unit_getInstance();
    }
  };
  ConcurrentLinkedListNode.$metadata$ = classMeta('ConcurrentLinkedListNode');
  function addConditionally(_this__u8e3s4, delta, condition) {
    init_properties_ConcurrentLinkedList_kt_u21ib0();
    while (true) {
      var cur = _this__u8e3s4.ai_1;
      if (!condition(cur))
        return false;
      if (_this__u8e3s4.atomicfu$compareAndSet(cur, cur + delta | 0))
        return true;
    }
  }
  var properties_initialized_ConcurrentLinkedList_kt_kwt434;
  function init_properties_ConcurrentLinkedList_kt_u21ib0() {
    if (properties_initialized_ConcurrentLinkedList_kt_kwt434) {
    } else {
      properties_initialized_ConcurrentLinkedList_kt_kwt434 = true;
      CLOSED = new Symbol('CLOSED');
    }
  }
  function get_UNDEFINED() {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    return UNDEFINED;
  }
  var UNDEFINED;
  function get_REUSABLE_CLAIMED() {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    return REUSABLE_CLAIMED;
  }
  var REUSABLE_CLAIMED;
  function resumeCancellableWith(_this__u8e3s4, result, onCancellation) {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof DispatchedContinuation) {
      var tmp1_resumeCancellableWith = _this__u8e3s4;
      var state = toState_0(result, onCancellation);
      var tmp_0;
      if (tmp1_resumeCancellableWith.hl_1.sn(tmp1_resumeCancellableWith.o3())) {
        tmp1_resumeCancellableWith.jl_1 = state;
        tmp1_resumeCancellableWith.k18(get_MODE_CANCELLABLE());
        tmp_0 = tmp1_resumeCancellableWith.hl_1.tn(tmp1_resumeCancellableWith.o3(), tmp1_resumeCancellableWith);
      } else {
        var tmp$ret$0;
        $l$block: {
          var tmp0_executeUnconfined = get_MODE_CANCELLABLE();
          {
          }
          var eventLoop = ThreadLocalEventLoop_getInstance().oo();
          if (false) {}
          var tmp_1;
          if (eventLoop.ho()) {
            tmp1_resumeCancellableWith.jl_1 = state;
            tmp1_resumeCancellableWith.k18(tmp0_executeUnconfined);
            eventLoop.fo(tmp1_resumeCancellableWith);
            tmp_1 = true;
          } else {
            {
              eventLoop.ko(true);
              try {
                {
                  var tmp$ret$3;
                  $l$block_0: {
                    var job = tmp1_resumeCancellableWith.o3().z3(Key_getInstance_2());
                    if (!(job == null) ? !job.si() : false) {
                      var cause = job.pj();
                      tmp1_resumeCancellableWith.vm(state, cause);
                      var tmp$ret$2;
                      {
                        var tmp$ret$1;
                        {
                          var tmp0_failure = Companion_getInstance();
                          tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure(cause));
                        }
                        tmp$ret$2 = tmp1_resumeCancellableWith.m3(tmp$ret$1);
                      }
                      tmp$ret$3 = true;
                      break $l$block_0;
                    }
                    tmp$ret$3 = false;
                  }
                  if (!tmp$ret$3) {
                    {
                      var tmp$ret$4;
                      {
                        var tmp0_withContinuationContext = tmp1_resumeCancellableWith.il_1;
                        var tmp1_withContinuationContext = tmp1_resumeCancellableWith.kl_1;
                        tmp$ret$4 = tmp1_resumeCancellableWith.il_1.m3(result);
                      }
                    }
                  }
                }
                $l$loop: while (true) {
                  if (!eventLoop.ao())
                    break $l$loop;
                }
              } catch ($p) {
                if ($p instanceof Error) {
                  tmp1_resumeCancellableWith.gn($p, null);
                } else {
                  throw $p;
                }
              }
              finally {
                eventLoop.lo(true);
              }
            }
            tmp_1 = false;
          }
          tmp$ret$0 = tmp_1;
        }
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    } else {
      tmp = _this__u8e3s4.m3(result);
    }
    return tmp;
  }
  function resumeCancellableWith$default(_this__u8e3s4, result, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      onCancellation = null;
    return resumeCancellableWith(_this__u8e3s4, result, onCancellation);
  }
  function _get_reusableCancellableContinuation__9qex09($this) {
    var tmp = $this.ll_1.zh_1;
    return tmp instanceof CancellableContinuationImpl ? tmp : null;
  }
  function DispatchedContinuation(dispatcher, continuation) {
    DispatchedTask.call(this, get_MODE_UNINITIALIZED());
    this.hl_1 = dispatcher;
    this.il_1 = continuation;
    this.jl_1 = get_UNDEFINED();
    this.kl_1 = threadContextElements(this.o3());
    this.ll_1 = atomic$ref$1(null);
  }
  DispatchedContinuation.prototype.l18 = function () {
    return this.il_1;
  };
  DispatchedContinuation.prototype.o3 = function () {
    return this.il_1.o3();
  };
  DispatchedContinuation.prototype.m18 = function () {
    return this.kl_1;
  };
  DispatchedContinuation.prototype.am = function () {
    return !(this.ll_1.zh_1 == null);
  };
  DispatchedContinuation.prototype.n18 = function () {
    {
      var tmp0_loop = this.ll_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.zh_1;
          if (!(tmp1__anonymous__uwfjfc === get_REUSABLE_CLAIMED()))
            return Unit_getInstance();
        }
      }
    }
  };
  DispatchedContinuation.prototype.un = function () {
    this.n18();
    var tmp0_safe_receiver = _get_reusableCancellableContinuation__9qex09(this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.fm();
    }
  };
  DispatchedContinuation.prototype.ml = function () {
    {
      var tmp0_loop = this.ll_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.zh_1;
          if (tmp1__anonymous__uwfjfc === null) {
            this.ll_1.zh_1 = get_REUSABLE_CLAIMED();
            return null;
          } else {
            if (tmp1__anonymous__uwfjfc instanceof CancellableContinuationImpl) {
              if (this.ll_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, get_REUSABLE_CLAIMED())) {
                return tmp1__anonymous__uwfjfc instanceof CancellableContinuationImpl ? tmp1__anonymous__uwfjfc : THROW_CCE();
              }
            } else {
              if (tmp1__anonymous__uwfjfc === get_REUSABLE_CLAIMED()) {
              } else {
                if (tmp1__anonymous__uwfjfc instanceof Error) {
                } else {
                  var tmp0_error = 'Inconsistent state ' + toString(tmp1__anonymous__uwfjfc);
                  throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
                }
              }
            }
          }
        }
      }
    }
  };
  DispatchedContinuation.prototype.em = function (continuation) {
    {
      var tmp0_loop = this.ll_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.zh_1;
          if (tmp1__anonymous__uwfjfc === get_REUSABLE_CLAIMED()) {
            if (this.ll_1.atomicfu$compareAndSet(get_REUSABLE_CLAIMED(), continuation))
              return null;
          } else {
            if (tmp1__anonymous__uwfjfc instanceof Error) {
              {
                var tmp0_require = this.ll_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, null);
                {
                }
                {
                  {
                  }
                  if (!tmp0_require) {
                    var tmp$ret$0;
                    {
                      tmp$ret$0 = 'Failed requirement.';
                    }
                    var message = tmp$ret$0;
                    throw IllegalArgumentException_init_$Create$(toString_0(message));
                  }
                }
              }
              return tmp1__anonymous__uwfjfc;
            } else {
              var tmp1_error = 'Inconsistent state ' + toString(tmp1__anonymous__uwfjfc);
              throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
            }
          }
        }
      }
    }
  };
  DispatchedContinuation.prototype.dm = function (cause) {
    {
      var tmp0_loop = this.ll_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.zh_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (equals(tmp0_subject, get_REUSABLE_CLAIMED())) {
            if (this.ll_1.atomicfu$compareAndSet(get_REUSABLE_CLAIMED(), cause))
              return true;
          } else {
            if (tmp0_subject instanceof Error)
              return true;
            else {
              if (this.ll_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, null))
                return false;
            }
          }
        }
      }
    }
  };
  DispatchedContinuation.prototype.um = function () {
    var state = this.jl_1;
    {
    }
    this.jl_1 = get_UNDEFINED();
    return state;
  };
  DispatchedContinuation.prototype.rm = function () {
    return this;
  };
  DispatchedContinuation.prototype.m3 = function (result) {
    var context = this.il_1.o3();
    var state = toState$default(result, null, 1, null);
    if (this.hl_1.sn(context)) {
      this.jl_1 = state;
      this.k18(get_MODE_ATOMIC());
      this.hl_1.tn(context, this);
    } else {
      var tmp$ret$0;
      $l$block: {
        var tmp0_executeUnconfined = get_MODE_ATOMIC();
        {
        }
        var eventLoop = ThreadLocalEventLoop_getInstance().oo();
        if (false) {}
        var tmp;
        if (eventLoop.ho()) {
          this.jl_1 = state;
          this.k18(tmp0_executeUnconfined);
          eventLoop.fo(this);
          tmp = true;
        } else {
          {
            eventLoop.ko(true);
            try {
              {
                var tmp$ret$1;
                {
                  var tmp0_withCoroutineContext = this.o3();
                  var tmp1_withCoroutineContext = this.kl_1;
                  tmp$ret$1 = this.il_1.m3(result);
                }
              }
              $l$loop: while (true) {
                if (!eventLoop.ao())
                  break $l$loop;
              }
            } catch ($p) {
              if ($p instanceof Error) {
                this.gn($p, null);
              } else {
                throw $p;
              }
            }
            finally {
              eventLoop.lo(true);
            }
          }
          tmp = false;
        }
        tmp$ret$0 = tmp;
      }
    }
  };
  DispatchedContinuation.prototype.vm = function (takenState, cause) {
    if (takenState instanceof CompletedWithCancellation) {
      takenState.qn_1(cause);
    }
  };
  DispatchedContinuation.prototype.o18 = function (state) {
    var job = this.o3().z3(Key_getInstance_2());
    if (!(job == null) ? !job.si() : false) {
      var cause = job.pj();
      this.vm(state, cause);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_failure = Companion_getInstance();
          tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(cause));
        }
        tmp$ret$1 = this.m3(tmp$ret$0);
      }
      return true;
    }
    return false;
  };
  DispatchedContinuation.prototype.p18 = function (result) {
    var tmp$ret$0;
    {
      var tmp0_withContinuationContext = this.il_1;
      var tmp1_withContinuationContext = this.kl_1;
      tmp$ret$0 = this.il_1.m3(result);
    }
  };
  DispatchedContinuation.prototype.toString = function () {
    return 'DispatchedContinuation[' + this.hl_1 + ', ' + toDebugString(this.il_1) + ']';
  };
  DispatchedContinuation.$metadata$ = classMeta('DispatchedContinuation', [CoroutineStackFrame, Continuation], undefined, undefined, undefined, DispatchedTask.prototype);
  function executeUnconfined(_this__u8e3s4, contState, mode, doYield, block) {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    {
    }
    var eventLoop = ThreadLocalEventLoop_getInstance().oo();
    if (doYield ? eventLoop.io() : false)
      return false;
    var tmp;
    if (eventLoop.ho()) {
      _this__u8e3s4.jl_1 = contState;
      _this__u8e3s4.k18(mode);
      eventLoop.fo(_this__u8e3s4);
      tmp = true;
    } else {
      {
        eventLoop.ko(true);
        try {
          block();
          $l$loop: while (true) {
            if (!eventLoop.ao())
              break $l$loop;
          }
        } catch ($p) {
          if ($p instanceof Error) {
            _this__u8e3s4.gn($p, null);
          } else {
            throw $p;
          }
        }
        finally {
          eventLoop.lo(true);
        }
      }
      tmp = false;
    }
    return tmp;
  }
  var properties_initialized_DispatchedContinuation_kt_2siadq;
  function init_properties_DispatchedContinuation_kt_s7rtw6() {
    if (properties_initialized_DispatchedContinuation_kt_2siadq) {
    } else {
      properties_initialized_DispatchedContinuation_kt_2siadq = true;
      UNDEFINED = new Symbol('UNDEFINED');
      REUSABLE_CLAIMED = new Symbol('REUSABLE_CLAIMED');
    }
  }
  function get_MODE_CANCELLABLE() {
    return MODE_CANCELLABLE;
  }
  var MODE_CANCELLABLE;
  function DispatchedTask(resumeMode) {
    SchedulerTask.call(this);
    this.bm_1 = resumeMode;
  }
  DispatchedTask.prototype.k18 = function (_set____db54di) {
    this.bm_1 = _set____db54di;
  };
  DispatchedTask.prototype.cm = function () {
    return this.bm_1;
  };
  DispatchedTask.prototype.vm = function (takenState, cause) {
  };
  DispatchedTask.prototype.cn = function (state) {
    return (state == null ? true : isObject(state)) ? state : THROW_CCE();
  };
  DispatchedTask.prototype.en = function (state) {
    var tmp0_safe_receiver = state instanceof CompletedExceptionally ? state : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.xi_1;
  };
  DispatchedTask.prototype.fn = function () {
    {
    }
    var taskContext = get_taskContext(this);
    var fatalException = null;
    try {
      var tmp = this.rm();
      var delegate = tmp instanceof DispatchedContinuation ? tmp : THROW_CCE();
      var continuation = delegate.il_1;
      var tmp$ret$5;
      {
        var tmp0_withContinuationContext = delegate.kl_1;
        var context = continuation.o3();
        var state = this.um();
        var exception = this.en(state);
        var job = (exception == null ? get_isCancellableMode(this.bm_1) : false) ? context.z3(Key_getInstance_2()) : null;
        var tmp_0;
        if (!(job == null) ? !job.si() : false) {
          var cause = job.pj();
          this.vm(state, cause);
          var tmp$ret$0;
          {
            var tmp0_failure = Companion_getInstance();
            var tmp1_failure = recoverStackTrace(cause, continuation);
            tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_failure));
          }
          tmp_0 = continuation.m3(tmp$ret$0);
        } else {
          var tmp_1;
          if (!(exception == null)) {
            var tmp$ret$2;
            {
              var tmp$ret$1;
              {
                var tmp0_failure_0 = Companion_getInstance();
                tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure(exception));
              }
              tmp$ret$2 = continuation.m3(tmp$ret$1);
            }
            tmp_1 = tmp$ret$2;
          } else {
            var tmp$ret$4;
            {
              var tmp2_resume = this.cn(state);
              var tmp$ret$3;
              {
                var tmp0_success = Companion_getInstance();
                tmp$ret$3 = _Result___init__impl__xyqfz8(tmp2_resume);
              }
              tmp$ret$4 = continuation.m3(tmp$ret$3);
            }
            tmp_1 = tmp$ret$4;
          }
          tmp_0 = tmp_1;
        }
        tmp$ret$5 = tmp_0;
      }
    } catch ($p) {
      if ($p instanceof Error) {
        fatalException = $p;
      } else {
        throw $p;
      }
    }
    finally {
      var tmp$ret$8;
      {
        var tmp_2;
        try {
          var tmp$ret$6;
          {
            var tmp0_success_0 = Companion_getInstance();
            var tmp1_success = Unit_getInstance();
            tmp$ret$6 = _Result___init__impl__xyqfz8(Unit_getInstance());
          }
          tmp_2 = tmp$ret$6;
        } catch ($p) {
          var tmp_3;
          if ($p instanceof Error) {
            var tmp$ret$7;
            {
              var tmp2_failure = Companion_getInstance();
              tmp$ret$7 = _Result___init__impl__xyqfz8(createFailure($p));
            }
            tmp_3 = tmp$ret$7;
          } else {
            throw $p;
          }
          tmp_2 = tmp_3;
        }
        tmp$ret$8 = tmp_2;
      }
      var result = tmp$ret$8;
      this.gn(fatalException, Result__exceptionOrNull_impl_p6xea9(result));
    }
  };
  DispatchedTask.prototype.gn = function (exception, finallyException) {
    if (exception === null ? finallyException === null : false)
      return Unit_getInstance();
    if (!(exception === null) ? !(finallyException === null) : false) {
      {
      }
    }
    var tmp0_elvis_lhs = exception;
    var cause = tmp0_elvis_lhs == null ? finallyException : tmp0_elvis_lhs;
    var reason = new CoroutinesInternalError('Fatal exception in coroutines machinery for ' + this + '. ' + "Please read KDoc to 'handleFatalException' method and report this incident to maintainers", ensureNotNull(cause));
    handleCoroutineException(this.rm().o3(), reason);
  };
  DispatchedTask.$metadata$ = classMeta('DispatchedTask', undefined, undefined, undefined, undefined, SchedulerTask.prototype);
  function get_MODE_UNINITIALIZED() {
    return MODE_UNINITIALIZED;
  }
  var MODE_UNINITIALIZED;
  function get_isReusableMode(_this__u8e3s4) {
    return _this__u8e3s4 === 2;
  }
  function get_MODE_CANCELLABLE_REUSABLE() {
    return MODE_CANCELLABLE_REUSABLE;
  }
  var MODE_CANCELLABLE_REUSABLE;
  function get_isCancellableMode(_this__u8e3s4) {
    return _this__u8e3s4 === 1 ? true : _this__u8e3s4 === 2;
  }
  function dispatch(_this__u8e3s4, mode) {
    {
    }
    var delegate = _this__u8e3s4.rm();
    var undispatched = mode === 4;
    var tmp;
    var tmp_0;
    if (!undispatched) {
      tmp_0 = delegate instanceof DispatchedContinuation;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = get_isCancellableMode(mode) === get_isCancellableMode(_this__u8e3s4.bm_1);
    } else {
      tmp = false;
    }
    if (tmp) {
      var dispatcher = delegate.hl_1;
      var context = delegate.o3();
      if (dispatcher.sn(context)) {
        dispatcher.tn(context, _this__u8e3s4);
      } else {
        resumeUnconfined(_this__u8e3s4);
      }
    } else {
      resume(_this__u8e3s4, delegate, undispatched);
    }
  }
  function get_MODE_ATOMIC() {
    return MODE_ATOMIC;
  }
  var MODE_ATOMIC;
  function runUnconfinedEventLoop(_this__u8e3s4, eventLoop, block) {
    eventLoop.ko(true);
    try {
      block();
      $l$loop: while (true) {
        if (!eventLoop.ao())
          break $l$loop;
      }
    } catch ($p) {
      if ($p instanceof Error) {
        _this__u8e3s4.gn($p, null);
      } else {
        throw $p;
      }
    }
    finally {
      eventLoop.lo(true);
    }
  }
  function resumeUnconfined(_this__u8e3s4) {
    var eventLoop = ThreadLocalEventLoop_getInstance().oo();
    if (eventLoop.ho()) {
      eventLoop.fo(_this__u8e3s4);
    } else {
      {
        eventLoop.ko(true);
        try {
          {
            resume(_this__u8e3s4, _this__u8e3s4.rm(), true);
          }
          $l$loop: while (true) {
            if (!eventLoop.ao())
              break $l$loop;
          }
        } catch ($p) {
          if ($p instanceof Error) {
            _this__u8e3s4.gn($p, null);
          } else {
            throw $p;
          }
        }
        finally {
          eventLoop.lo(true);
        }
      }
    }
  }
  function resume(_this__u8e3s4, delegate, undispatched) {
    var state = _this__u8e3s4.um();
    var exception = _this__u8e3s4.en(state);
    var tmp;
    if (!(exception == null)) {
      var tmp$ret$0;
      {
        var tmp0_failure = Companion_getInstance();
        tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(exception));
      }
      tmp = tmp$ret$0;
    } else {
      var tmp$ret$1;
      {
        var tmp1_success = Companion_getInstance();
        var tmp2_success = _this__u8e3s4.cn(state);
        tmp$ret$1 = _Result___init__impl__xyqfz8(tmp2_success);
      }
      tmp = tmp$ret$1;
    }
    var result = tmp;
    if (undispatched) {
      var tmp3_resumeUndispatchedWith = delegate instanceof DispatchedContinuation ? delegate : THROW_CCE();
      var tmp$ret$2;
      {
        var tmp0_withContinuationContext = tmp3_resumeUndispatchedWith.il_1;
        var tmp1_withContinuationContext = tmp3_resumeUndispatchedWith.kl_1;
        tmp$ret$2 = tmp3_resumeUndispatchedWith.il_1.m3(result);
      }
    } else
      delegate.m3(result);
  }
  function _InlineList___init__impl__z8n56(holder) {
    return holder;
  }
  function _InlineList___init__impl__z8n56_0(holder, $mask0, $marker) {
    if (!(($mask0 & 1) === 0))
      holder = null;
    var tmp = _InlineList___init__impl__z8n56(holder);
    return tmp;
  }
  function _get_holder__f6h5pd($this) {
    return $this;
  }
  function InlineList__plus_impl_nuetvo($this, element) {
    {
    }
    var tmp0_subject = _get_holder__f6h5pd($this);
    var tmp;
    if (tmp0_subject == null) {
      tmp = _InlineList___init__impl__z8n56(element);
    } else {
      if (tmp0_subject instanceof ArrayList) {
        var tmp_0 = _get_holder__f6h5pd($this);
        (tmp_0 instanceof ArrayList ? tmp_0 : THROW_CCE()).c(element);
        tmp = _InlineList___init__impl__z8n56(_get_holder__f6h5pd($this));
      } else {
        var list = ArrayList_init_$Create$(4);
        var tmp_1 = _get_holder__f6h5pd($this);
        list.c((tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE());
        list.c(element);
        tmp = _InlineList___init__impl__z8n56(list);
      }
    }
    return tmp;
  }
  function InlineList__forEachReversed_impl_jituug($this, action) {
    var tmp0_subject = _get_holder__f6h5pd($this);
    if (tmp0_subject == null)
      return Unit_getInstance();
    else {
      if (!(tmp0_subject instanceof ArrayList)) {
        var tmp = _get_holder__f6h5pd($this);
        action((tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE());
      } else {
        var tmp_0 = _get_holder__f6h5pd($this);
        var list = tmp_0 instanceof ArrayList ? tmp_0 : THROW_CCE();
        var inductionVariable = list.g() - 1 | 0;
        if (0 <= inductionVariable)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            action(list.h(i));
          }
           while (0 <= inductionVariable);
      }
    }
  }
  function InlineList__toString_impl_1aej86($this) {
    return 'InlineList(holder=' + toString($this) + ')';
  }
  function InlineList__hashCode_impl_n1kg11($this) {
    return $this == null ? 0 : hashCode($this);
  }
  function InlineList__equals_impl_wwe0i1($this, other) {
    if (!(other instanceof InlineList))
      return false;
    var tmp0_other_with_cast = other instanceof InlineList ? other.q18_1 : THROW_CCE();
    if (!equals($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function InlineList(holder) {
    this.q18_1 = holder;
  }
  InlineList.prototype.toString = function () {
    return InlineList__toString_impl_1aej86(this.q18_1);
  };
  InlineList.prototype.hashCode = function () {
    return InlineList__hashCode_impl_n1kg11(this.q18_1);
  };
  InlineList.prototype.equals = function (other) {
    return InlineList__equals_impl_wwe0i1(this.q18_1, other);
  };
  InlineList.$metadata$ = classMeta('InlineList');
  function bindCancellationFun(_this__u8e3s4, element, context) {
    return bindCancellationFun$lambda(_this__u8e3s4, element, context);
  }
  function UndeliveredElementException(message, cause) {
    RuntimeException_init_$Init$(message, cause, this);
    captureStack(this, UndeliveredElementException);
  }
  UndeliveredElementException.$metadata$ = classMeta('UndeliveredElementException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function callUndeliveredElementCatchingException(_this__u8e3s4, element, undeliveredElementException) {
    try {
      _this__u8e3s4(element);
    } catch ($p) {
      if ($p instanceof Error) {
        if (!(undeliveredElementException == null) ? !(undeliveredElementException.cause === $p) : false) {
          {
          }
        } else {
          return new UndeliveredElementException('Exception in undelivered element handler for ' + element, $p);
        }
      } else {
        throw $p;
      }
    }
    return undeliveredElementException;
  }
  function callUndeliveredElementCatchingException$default(_this__u8e3s4, element, undeliveredElementException, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      undeliveredElementException = null;
    return callUndeliveredElementCatchingException(_this__u8e3s4, element, undeliveredElementException);
  }
  function callUndeliveredElement(_this__u8e3s4, element, context) {
    var tmp0_safe_receiver = callUndeliveredElementCatchingException(_this__u8e3s4, element, null);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = handleCoroutineException(context, tmp0_safe_receiver);
      }
    }
  }
  function bindCancellationFun$lambda($this_bindCancellationFun, $element, $context) {
    return function (_anonymous_parameter_0__qggqh8) {
      callUndeliveredElement($this_bindCancellationFun, $element, $context);
      return Unit_getInstance();
    };
  }
  function ScopeCoroutine(context, uCont) {
    AbstractCoroutine.call(this, context, true, true);
    this.yk_1 = uCont;
  }
  ScopeCoroutine.prototype.zk = function () {
    return this.yk_1;
  };
  ScopeCoroutine.prototype.dk = function () {
    return true;
  };
  ScopeCoroutine.prototype.al = function () {
    var tmp0_safe_receiver = this.kj();
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.al();
  };
  ScopeCoroutine.prototype.cj = function (state) {
    var tmp = intercepted(this.yk_1);
    var tmp_0 = recoverResult(state, this.yk_1);
    resumeCancellableWith$default(tmp, tmp_0, null, 2, null);
  };
  ScopeCoroutine.prototype.bj = function (state) {
    this.yk_1.m3(recoverResult(state, this.yk_1));
  };
  ScopeCoroutine.$metadata$ = classMeta('ScopeCoroutine', [CoroutineStackFrame], undefined, undefined, undefined, AbstractCoroutine.prototype);
  function ContextScope(context) {
    this.r18_1 = context;
  }
  ContextScope.prototype.ri = function () {
    return this.r18_1;
  };
  ContextScope.prototype.toString = function () {
    return 'CoroutineScope(coroutineContext=' + this.r18_1 + ')';
  };
  ContextScope.$metadata$ = classMeta('ContextScope', [CoroutineScope]);
  function Symbol(symbol) {
    this.s18_1 = symbol;
  }
  Symbol.prototype.toString = function () {
    return '<' + this.s18_1 + '>';
  };
  Symbol.$metadata$ = classMeta('Symbol');
  function systemProp(propertyName, defaultValue, minValue, maxValue) {
    return systemProp_0(propertyName, toLong(defaultValue), toLong(minValue), toLong(maxValue)).s5();
  }
  function systemProp$default(propertyName, defaultValue, minValue, maxValue, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      minValue = 1;
    if (!(($mask0 & 8) === 0))
      maxValue = IntCompanionObject_getInstance().m_1;
    return systemProp(propertyName, defaultValue, minValue, maxValue);
  }
  function systemProp_0(propertyName, defaultValue, minValue, maxValue) {
    var tmp0_elvis_lhs = systemProp_1(propertyName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return defaultValue;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var value = tmp;
    var tmp1_elvis_lhs = toLongOrNull(value);
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      var tmp0_error = "System property '" + propertyName + "' has unrecognized value '" + value + "'";
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var parsed = tmp_0;
    if (!(minValue.r(parsed) <= 0 ? parsed.r(maxValue) <= 0 : false)) {
      {
        var tmp1_error = "System property '" + propertyName + "' should be in range " + toString_0(minValue) + '..' + toString_0(maxValue) + ", but is '" + toString_0(parsed) + "'";
        throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
      }
    }
    return parsed;
  }
  function startCoroutineCancellable(_this__u8e3s4, receiver, completion, onCancellation) {
    var tmp;
    try {
      var tmp_0 = intercepted(createCoroutineUnintercepted(_this__u8e3s4, receiver, completion));
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance();
        tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      }
      tmp = resumeCancellableWith(tmp_0, tmp$ret$0, onCancellation);
    } catch ($p) {
      var tmp_1;
      if ($p instanceof Error) {
        tmp_1 = dispatcherFailure$accessor$paksz7(completion, $p);
      } else {
        throw $p;
      }
      tmp = tmp_1;
    }
    return tmp;
  }
  function startCoroutineCancellable$default(_this__u8e3s4, receiver, completion, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      onCancellation = null;
    return startCoroutineCancellable(_this__u8e3s4, receiver, completion, onCancellation);
  }
  function dispatcherFailure(completion, e) {
    var tmp$ret$0;
    {
      var tmp0_failure = Companion_getInstance();
      tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(e));
    }
    completion.m3(tmp$ret$0);
    throw e;
  }
  function startCoroutineCancellable_0(_this__u8e3s4, fatalCompletion) {
    var tmp;
    try {
      var tmp_0 = intercepted(_this__u8e3s4);
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance();
        tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      }
      var tmp_1 = tmp$ret$0;
      tmp = resumeCancellableWith$default(tmp_0, tmp_1, null, 2, null);
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Error) {
        tmp_2 = dispatcherFailure$accessor$paksz7(fatalCompletion, $p);
      } else {
        throw $p;
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function dispatcherFailure$accessor$paksz7(completion, e) {
    return dispatcherFailure(completion, e);
  }
  function startDirect(completion, block) {
    var tmp$ret$0;
    {
      tmp$ret$0 = completion;
    }
    var actualCompletion = tmp$ret$0;
    var tmp;
    try {
      tmp = block(actualCompletion);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp0_failure = Companion_getInstance();
            tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure($p));
          }
          tmp$ret$2 = actualCompletion.m3(tmp$ret$1);
        }
        return Unit_getInstance();
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var value = tmp;
    if (!(value === get_COROUTINE_SUSPENDED())) {
      var tmp$ret$4;
      {
        var tmp0_resume = (value == null ? true : isObject(value)) ? value : THROW_CCE();
        var tmp$ret$3;
        {
          var tmp0_success = Companion_getInstance();
          tmp$ret$3 = _Result___init__impl__xyqfz8(tmp0_resume);
        }
        tmp$ret$4 = actualCompletion.m3(tmp$ret$3);
      }
    }
  }
  function startUndispatchedOrReturn(_this__u8e3s4, receiver, block) {
    var tmp$ret$3;
    $l$block_0: {
      var tmp;
      try {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              tmp$ret$0 = block;
            }
            var a = tmp$ret$0;
            tmp$ret$1 = typeof a === 'function' ? a(receiver, _this__u8e3s4) : block.dh(receiver, _this__u8e3s4);
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp = tmp$ret$2;
      } catch ($p) {
        var tmp_0;
        if ($p instanceof Error) {
          tmp_0 = CompletedExceptionally_init_$Create$($p, false, 2, null);
        } else {
          throw $p;
        }
        tmp = tmp_0;
      }
      var result = tmp;
      if (result === get_COROUTINE_SUSPENDED()) {
        tmp$ret$3 = get_COROUTINE_SUSPENDED();
        break $l$block_0;
      }
      var state = _this__u8e3s4.aj(result);
      if (state === get_COMPLETING_WAITING_CHILDREN()) {
        tmp$ret$3 = get_COROUTINE_SUSPENDED();
        break $l$block_0;
      }
      var tmp_1;
      if (state instanceof CompletedExceptionally) {
        var tmp_2;
        var tmp$ret$4;
        {
          var tmp0__anonymous__q1qw7t = state.xi_1;
          tmp$ret$4 = true;
        }
        if (tmp$ret$4) {
          throw recoverStackTrace(state.xi_1, _this__u8e3s4.yk_1);
        } else {
          if (result instanceof CompletedExceptionally) {
            throw recoverStackTrace(result.xi_1, _this__u8e3s4.yk_1);
          } else {
            tmp_2 = result;
          }
        }
        tmp_1 = tmp_2;
      } else {
        tmp_1 = unboxState(state);
      }
      tmp$ret$3 = tmp_1;
    }
    return tmp$ret$3;
  }
  function startCoroutineUndispatched(_this__u8e3s4, receiver, completion) {
    var tmp$ret$8;
    $l$block: {
      var tmp$ret$0;
      {
        tmp$ret$0 = completion;
      }
      var actualCompletion = tmp$ret$0;
      var tmp;
      try {
        var tmp$ret$5;
        {
          var tmp$ret$4;
          {
            var tmp0_withCoroutineContext = completion.o3();
            var tmp$ret$3;
            {
              var tmp$ret$2;
              {
                var tmp$ret$1;
                {
                  tmp$ret$1 = _this__u8e3s4;
                }
                var a = tmp$ret$1;
                tmp$ret$2 = typeof a === 'function' ? a(receiver, actualCompletion) : _this__u8e3s4.dh(receiver, actualCompletion);
              }
              tmp$ret$3 = tmp$ret$2;
            }
            tmp$ret$4 = tmp$ret$3;
          }
          tmp$ret$5 = tmp$ret$4;
        }
        tmp = tmp$ret$5;
      } catch ($p) {
        var tmp_0;
        if ($p instanceof Error) {
          var tmp$ret$7;
          {
            var tmp$ret$6;
            {
              var tmp0_failure = Companion_getInstance();
              tmp$ret$6 = _Result___init__impl__xyqfz8(createFailure($p));
            }
            tmp$ret$7 = actualCompletion.m3(tmp$ret$6);
          }
          tmp$ret$8 = Unit_getInstance();
          break $l$block;
        } else {
          throw $p;
        }
        tmp = tmp_0;
      }
      var value = tmp;
      if (!(value === get_COROUTINE_SUSPENDED())) {
        var tmp$ret$10;
        {
          var tmp0_resume = (value == null ? true : isObject(value)) ? value : THROW_CCE();
          var tmp$ret$9;
          {
            var tmp0_success = Companion_getInstance();
            tmp$ret$9 = _Result___init__impl__xyqfz8(tmp0_resume);
          }
          tmp$ret$10 = actualCompletion.m3(tmp$ret$9);
        }
      }
    }
  }
  function undispatchedResult(_this__u8e3s4, shouldThrow, startBlock) {
    var tmp;
    try {
      tmp = startBlock();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = CompletedExceptionally_init_$Create$($p, false, 2, null);
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var result = tmp;
    if (result === get_COROUTINE_SUSPENDED())
      return get_COROUTINE_SUSPENDED();
    var state = _this__u8e3s4.aj(result);
    if (state === get_COMPLETING_WAITING_CHILDREN())
      return get_COROUTINE_SUSPENDED();
    var tmp_1;
    if (state instanceof CompletedExceptionally) {
      var tmp_2;
      if (shouldThrow(state.xi_1)) {
        throw recoverStackTrace(state.xi_1, _this__u8e3s4.yk_1);
      } else {
        if (result instanceof CompletedExceptionally) {
          throw recoverStackTrace(result.xi_1, _this__u8e3s4.yk_1);
        } else {
          tmp_2 = result;
        }
      }
      tmp_1 = tmp_2;
    } else {
      tmp_1 = unboxState(state);
    }
    return tmp_1;
  }
  function SelectClause0() {
  }
  SelectClause0.$metadata$ = interfaceMeta('SelectClause0');
  function get_MAX_SPIN_CYCLES() {
    init_properties_Semaphore_kt_nhoai8();
    return MAX_SPIN_CYCLES;
  }
  var MAX_SPIN_CYCLES;
  function get_PERMIT() {
    init_properties_Semaphore_kt_nhoai8();
    return PERMIT;
  }
  var PERMIT;
  function get_TAKEN() {
    init_properties_Semaphore_kt_nhoai8();
    return TAKEN;
  }
  var TAKEN;
  function get_BROKEN() {
    init_properties_Semaphore_kt_nhoai8();
    return BROKEN;
  }
  var BROKEN;
  function get_CANCELLED() {
    init_properties_Semaphore_kt_nhoai8();
    return CANCELLED;
  }
  var CANCELLED;
  function get_SEGMENT_SIZE() {
    init_properties_Semaphore_kt_nhoai8();
    return SEGMENT_SIZE;
  }
  var SEGMENT_SIZE;
  function Semaphore() {
  }
  Semaphore.$metadata$ = interfaceMeta('Semaphore');
  function Semaphore_0(permits, acquiredPermits) {
    init_properties_Semaphore_kt_nhoai8();
    return new SemaphoreImpl(permits, acquiredPermits);
  }
  function Semaphore$default(permits, acquiredPermits, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      acquiredPermits = 0;
    return Semaphore_0(permits, acquiredPermits);
  }
  function acquireSlowPath($this, $cont) {
    var tmp$ret$1;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = getOrCreateCancellableContinuation(intercepted(tmp0__anonymous__q1qw7t));
      var tmp$ret$0;
      $l$block_0: {
        while (true) {
          if (addAcquireToQueue($this, cancellable)) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block_0;
          }
          var p = $this.y18_1.atomicfu$getAndDecrement();
          if (p > 0) {
            cancellable.fl(Unit_getInstance(), $this.z18_1);
            tmp$ret$0 = Unit_getInstance();
            break $l$block_0;
          }
        }
      }
      tmp$ret$1 = cancellable.uk();
    }
    return tmp$ret$1;
  }
  function addAcquireToQueue($this, cont) {
    var curTail = $this.w18_1.zh_1;
    var enqIdx = $this.x18_1.atomicfu$getAndIncrement$long();
    var tmp$ret$7;
    $l$block_3: {
      var tmp1_findSegmentAndMoveForward = $this.w18_1;
      var tmp$ret$0;
      {
        var tmp0_div = get_SEGMENT_SIZE();
        tmp$ret$0 = enqIdx.x4(toLong(tmp0_div));
      }
      var tmp2_findSegmentAndMoveForward = tmp$ret$0;
      while (true) {
        var tmp$ret$1;
        $l$block: {
          var cur = curTail;
          $l$loop: while (cur.t17_1.r(tmp2_findSegmentAndMoveForward) < 0 ? true : cur.v17()) {
            var tmp$ret$4;
            {
              var tmp1_nextOrIfClosed = cur;
              var tmp$ret$3;
              {
                var tmp0_let = _get_nextOrClosed__w0gmuv(tmp1_nextOrIfClosed);
                {
                }
                var tmp$ret$2;
                {
                  var tmp;
                  if (tmp0_let === get_CLOSED()) {
                    tmp$ret$1 = _SegmentOrClosed___init__impl__jnexvb(get_CLOSED());
                    break $l$block;
                  } else {
                    tmp = (tmp0_let == null ? true : tmp0_let instanceof ConcurrentLinkedListNode) ? tmp0_let : THROW_CCE();
                  }
                  tmp$ret$2 = tmp;
                }
                tmp$ret$3 = tmp$ret$2;
              }
              tmp$ret$4 = tmp$ret$3;
            }
            var next = tmp$ret$4;
            if (!(next == null)) {
              cur = next;
              continue $l$loop;
            }
            var tmp$ret$5;
            {
              var tmp2_plus = cur.t17_1;
              tmp$ret$5 = tmp2_plus.z4(new Long(1, 0));
            }
            var newTail = createSegment(tmp$ret$5, cur);
            if (cur.z17(newTail)) {
              if (cur.v17())
                cur.y17();
              cur = newTail;
            }
          }
          tmp$ret$1 = _SegmentOrClosed___init__impl__jnexvb(cur);
        }
        var s = tmp$ret$1;
        var tmp_0;
        if (_SegmentOrClosed___get_isClosed__impl__qmxmlo(s)) {
          tmp_0 = true;
        } else {
          var tmp$ret$6;
          $l$block_2: {
            var tmp4_moveForward = _SegmentOrClosed___get_segment__impl__jvcr9l(s);
            while (true) {
              {
                var tmp3__anonymous__ufb84q = tmp1_findSegmentAndMoveForward.zh_1;
                if (tmp3__anonymous__ufb84q.t17_1.r(tmp4_moveForward.t17_1) >= 0) {
                  tmp$ret$6 = true;
                  break $l$block_2;
                }
                if (!tmp4_moveForward.a18()) {
                  tmp$ret$6 = false;
                  break $l$block_2;
                }
                if (tmp1_findSegmentAndMoveForward.atomicfu$compareAndSet(tmp3__anonymous__ufb84q, tmp4_moveForward)) {
                  if (tmp3__anonymous__ufb84q.b18())
                    tmp3__anonymous__ufb84q.y17();
                  tmp$ret$6 = true;
                  break $l$block_2;
                }
                if (tmp4_moveForward.b18())
                  tmp4_moveForward.y17();
              }
            }
            tmp$ret$6 = Unit_getInstance();
          }
          tmp_0 = tmp$ret$6;
        }
        if (tmp_0) {
          tmp$ret$7 = s;
          break $l$block_3;
        }
      }
    }
    var segment = _SegmentOrClosed___get_segment__impl__jvcr9l(tmp$ret$7);
    var tmp$ret$8;
    {
      var tmp3_rem = get_SEGMENT_SIZE();
      tmp$ret$8 = enqIdx.z5(toLong(tmp3_rem));
    }
    var i = tmp$ret$8.s5();
    var tmp$ret$9;
    {
      tmp$ret$9 = segment.e19_1.atomicfu$get(i).atomicfu$compareAndSet(null, cont);
    }
    if (tmp$ret$9) {
      var tmp$ret$11;
      {
        var tmp4__get_asHandler__z7w7dj = new CancelSemaphoreAcquisitionHandler(segment, i);
        var tmp$ret$10;
        {
          tmp$ret$10 = tmp4__get_asHandler__z7w7dj;
        }
        tmp$ret$11 = tmp$ret$10;
      }
      cont.el(tmp$ret$11);
      return true;
    }
    var tmp$ret$12;
    {
      var tmp5_cas = get_PERMIT();
      var tmp6_cas = get_TAKEN();
      tmp$ret$12 = segment.e19_1.atomicfu$get(i).atomicfu$compareAndSet(tmp5_cas, tmp6_cas);
    }
    if (tmp$ret$12) {
      cont.fl(Unit_getInstance(), $this.z18_1);
      return true;
    }
    {
    }
    return false;
  }
  function tryResumeNextFromQueue($this) {
    var curHead = $this.u18_1.zh_1;
    var deqIdx = $this.v18_1.atomicfu$getAndIncrement$long();
    var tmp$ret$0;
    {
      var tmp0_div = get_SEGMENT_SIZE();
      tmp$ret$0 = deqIdx.x4(toLong(tmp0_div));
    }
    var id = tmp$ret$0;
    var tmp$ret$7;
    $l$block_3: {
      var tmp1_findSegmentAndMoveForward = $this.u18_1;
      while (true) {
        var tmp$ret$1;
        $l$block: {
          var cur = curHead;
          $l$loop: while (cur.t17_1.r(id) < 0 ? true : cur.v17()) {
            var tmp$ret$4;
            {
              var tmp1_nextOrIfClosed = cur;
              var tmp$ret$3;
              {
                var tmp0_let = _get_nextOrClosed__w0gmuv(tmp1_nextOrIfClosed);
                {
                }
                var tmp$ret$2;
                {
                  var tmp;
                  if (tmp0_let === get_CLOSED()) {
                    tmp$ret$1 = _SegmentOrClosed___init__impl__jnexvb(get_CLOSED());
                    break $l$block;
                  } else {
                    tmp = (tmp0_let == null ? true : tmp0_let instanceof ConcurrentLinkedListNode) ? tmp0_let : THROW_CCE();
                  }
                  tmp$ret$2 = tmp;
                }
                tmp$ret$3 = tmp$ret$2;
              }
              tmp$ret$4 = tmp$ret$3;
            }
            var next = tmp$ret$4;
            if (!(next == null)) {
              cur = next;
              continue $l$loop;
            }
            var tmp$ret$5;
            {
              var tmp2_plus = cur.t17_1;
              tmp$ret$5 = tmp2_plus.z4(new Long(1, 0));
            }
            var newTail = createSegment(tmp$ret$5, cur);
            if (cur.z17(newTail)) {
              if (cur.v17())
                cur.y17();
              cur = newTail;
            }
          }
          tmp$ret$1 = _SegmentOrClosed___init__impl__jnexvb(cur);
        }
        var s = tmp$ret$1;
        var tmp_0;
        if (_SegmentOrClosed___get_isClosed__impl__qmxmlo(s)) {
          tmp_0 = true;
        } else {
          var tmp$ret$6;
          $l$block_2: {
            var tmp4_moveForward = _SegmentOrClosed___get_segment__impl__jvcr9l(s);
            while (true) {
              {
                var tmp3__anonymous__ufb84q = tmp1_findSegmentAndMoveForward.zh_1;
                if (tmp3__anonymous__ufb84q.t17_1.r(tmp4_moveForward.t17_1) >= 0) {
                  tmp$ret$6 = true;
                  break $l$block_2;
                }
                if (!tmp4_moveForward.a18()) {
                  tmp$ret$6 = false;
                  break $l$block_2;
                }
                if (tmp1_findSegmentAndMoveForward.atomicfu$compareAndSet(tmp3__anonymous__ufb84q, tmp4_moveForward)) {
                  if (tmp3__anonymous__ufb84q.b18())
                    tmp3__anonymous__ufb84q.y17();
                  tmp$ret$6 = true;
                  break $l$block_2;
                }
                if (tmp4_moveForward.b18())
                  tmp4_moveForward.y17();
              }
            }
            tmp$ret$6 = Unit_getInstance();
          }
          tmp_0 = tmp$ret$6;
        }
        if (tmp_0) {
          tmp$ret$7 = s;
          break $l$block_3;
        }
      }
    }
    var segment = _SegmentOrClosed___get_segment__impl__jvcr9l(tmp$ret$7);
    segment.j18();
    if (segment.c18().r(id) > 0)
      return false;
    var tmp$ret$8;
    {
      var tmp2_rem = get_SEGMENT_SIZE();
      tmp$ret$8 = deqIdx.z5(toLong(tmp2_rem));
    }
    var i = tmp$ret$8.s5();
    var tmp$ret$9;
    {
      var tmp3_getAndSet = get_PERMIT();
      tmp$ret$9 = segment.e19_1.atomicfu$get(i).atomicfu$getAndSet(tmp3_getAndSet);
    }
    var cellState = tmp$ret$9;
    if (cellState === null) {
      {
        var tmp4_repeat = get_MAX_SPIN_CYCLES();
        {
        }
        var inductionVariable = 0;
        if (inductionVariable < tmp4_repeat)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            {
              var tmp$ret$10;
              {
                tmp$ret$10 = segment.e19_1.atomicfu$get(i).zh_1;
              }
              if (tmp$ret$10 === get_TAKEN())
                return true;
            }
          }
           while (inductionVariable < tmp4_repeat);
      }
      var tmp$ret$11;
      {
        var tmp5_cas = get_PERMIT();
        var tmp6_cas = get_BROKEN();
        tmp$ret$11 = segment.e19_1.atomicfu$get(i).atomicfu$compareAndSet(tmp5_cas, tmp6_cas);
      }
      return !tmp$ret$11;
    } else if (cellState === get_CANCELLED())
      return false;
    else {
      return tryResumeAcquire((!(cellState == null) ? isInterface(cellState, CancellableContinuation) : false) ? cellState : THROW_CCE(), $this);
    }
  }
  function tryResumeAcquire(_this__u8e3s4, $this) {
    var tmp0_elvis_lhs = _this__u8e3s4.cl(Unit_getInstance(), null, $this.z18_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var token = tmp;
    _this__u8e3s4.dl(token);
    return true;
  }
  function SemaphoreImpl$onCancellationRelease$lambda(this$0) {
    return function (_anonymous_parameter_0__qggqh8) {
      this$0.un();
      return Unit_getInstance();
    };
  }
  function SemaphoreImpl(permits, acquiredPermits) {
    this.t18_1 = permits;
    this.v18_1 = atomic$long$1(new Long(0, 0));
    this.x18_1 = atomic$long$1(new Long(0, 0));
    {
      var tmp0_require = this.t18_1 > 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Semaphore should have at least 1 permit, but had ' + this.t18_1;
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString_0(message));
      }
    }
    {
      var tmp1_require = 0 <= acquiredPermits ? acquiredPermits <= this.t18_1 : false;
      {
      }
      if (!tmp1_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'The number of acquired permits should be in 0..' + this.t18_1;
        }
        var message_0 = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString_0(message_0));
      }
    }
    var s = new SemaphoreSegment(new Long(0, 0), null, 2);
    this.u18_1 = atomic$ref$1(s);
    this.w18_1 = atomic$ref$1(s);
    this.y18_1 = atomic$int$1(this.t18_1 - acquiredPermits | 0);
    var tmp = this;
    tmp.z18_1 = SemaphoreImpl$onCancellationRelease$lambda(this);
  }
  SemaphoreImpl.prototype.p11 = function ($cont) {
    var p = this.y18_1.atomicfu$getAndDecrement();
    if (p > 0)
      return Unit_getInstance();
    return acquireSlowPath(this, $cont);
  };
  SemaphoreImpl.prototype.un = function () {
    while (true) {
      var tmp$ret$2;
      $l$block: {
        var tmp0_getAndUpdate = this.y18_1;
        while (true) {
          var cur = tmp0_getAndUpdate.ai_1;
          var tmp$ret$1;
          {
            {
              var tmp0_check = cur < this.t18_1;
              {
              }
              if (!tmp0_check) {
                var tmp$ret$0;
                {
                  tmp$ret$0 = 'The number of released permits cannot be greater than ' + this.t18_1;
                }
                var message = tmp$ret$0;
                throw IllegalStateException_init_$Create$(toString_0(message));
              }
            }
            tmp$ret$1 = cur + 1 | 0;
          }
          var upd = tmp$ret$1;
          if (tmp0_getAndUpdate.atomicfu$compareAndSet(cur, upd)) {
            tmp$ret$2 = cur;
            break $l$block;
          }
        }
      }
      var p = tmp$ret$2;
      if (p >= 0)
        return Unit_getInstance();
      if (tryResumeNextFromQueue(this))
        return Unit_getInstance();
    }
  };
  SemaphoreImpl.$metadata$ = classMeta('SemaphoreImpl', [Semaphore]);
  function SemaphoreSegment(id, prev, pointers) {
    Segment.call(this, id, prev, pointers);
    this.e19_1 = atomicfu$AtomicRefArray$ofNulls(get_SEGMENT_SIZE());
  }
  SemaphoreSegment.prototype.f19 = function () {
    return this.e19_1;
  };
  SemaphoreSegment.prototype.d18 = function () {
    return get_SEGMENT_SIZE();
  };
  SemaphoreSegment.prototype.h = function (index) {
    return this.e19_1.atomicfu$get(index).zh_1;
  };
  SemaphoreSegment.prototype.g19 = function (index, value) {
    this.e19_1.atomicfu$get(index).zh_1 = value;
  };
  SemaphoreSegment.prototype.h19 = function (index, expected, value) {
    return this.e19_1.atomicfu$get(index).atomicfu$compareAndSet(expected, value);
  };
  SemaphoreSegment.prototype.i19 = function (index, value) {
    return this.e19_1.atomicfu$get(index).atomicfu$getAndSet(value);
  };
  SemaphoreSegment.prototype.j19 = function (index) {
    {
      var tmp0_set = get_CANCELLED();
      this.e19_1.atomicfu$get(index).zh_1 = tmp0_set;
    }
    this.f18();
  };
  SemaphoreSegment.prototype.toString = function () {
    return 'SemaphoreSegment[id=' + toString_0(this.c18()) + ', hashCode=' + hashCode(this) + ']';
  };
  SemaphoreSegment.$metadata$ = classMeta('SemaphoreSegment', undefined, undefined, undefined, undefined, Segment.prototype);
  function createSegment(id, prev) {
    init_properties_Semaphore_kt_nhoai8();
    return new SemaphoreSegment(id, prev, 0);
  }
  function CancelSemaphoreAcquisitionHandler(segment, index) {
    CancelHandler.call(this);
    this.k19_1 = segment;
    this.l19_1 = index;
  }
  CancelSemaphoreAcquisitionHandler.prototype.vl = function (cause) {
    this.k19_1.j19(this.l19_1);
  };
  CancelSemaphoreAcquisitionHandler.prototype.invoke = function (cause) {
    return this.vl(cause);
  };
  CancelSemaphoreAcquisitionHandler.prototype.toString = function () {
    return 'CancelSemaphoreAcquisitionHandler[' + this.k19_1 + ', ' + this.l19_1 + ']';
  };
  CancelSemaphoreAcquisitionHandler.$metadata$ = classMeta('CancelSemaphoreAcquisitionHandler', undefined, undefined, undefined, undefined, CancelHandler.prototype);
  var properties_initialized_Semaphore_kt_uqcwok;
  function init_properties_Semaphore_kt_nhoai8() {
    if (properties_initialized_Semaphore_kt_uqcwok) {
    } else {
      properties_initialized_Semaphore_kt_uqcwok = true;
      MAX_SPIN_CYCLES = systemProp$default('kotlinx.coroutines.semaphore.maxSpinCycles', 100, 0, 0, 12, null);
      PERMIT = new Symbol('PERMIT');
      TAKEN = new Symbol('TAKEN');
      BROKEN = new Symbol('BROKEN');
      CANCELLED = new Symbol('CANCELLED');
      SEGMENT_SIZE = systemProp$default('kotlinx.coroutines.semaphore.segmentSize', 16, 0, 0, 12, null);
    }
  }
  function CompletionHandlerBase() {
    LinkedListNode.call(this);
  }
  CompletionHandlerBase.$metadata$ = classMeta('CompletionHandlerBase', undefined, undefined, undefined, undefined, LinkedListNode.prototype);
  function invokeIt(_this__u8e3s4, cause) {
    var tmp0_subject = typeof _this__u8e3s4;
    if (tmp0_subject === 'function')
      _this__u8e3s4(cause);
    else {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$0.invoke(cause);
    }
  }
  function get_asHandler(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0;
  }
  function get_asHandler_0(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0;
  }
  function CancelHandlerBase() {
  }
  CancelHandlerBase.$metadata$ = classMeta('CancelHandlerBase');
  function toDebugString(_this__u8e3s4) {
    return toString_0(_this__u8e3s4);
  }
  function withCoroutineContext(context, countOrElement, block) {
    return block();
  }
  function withContinuationContext(continuation, countOrElement, block) {
    return block();
  }
  function createDefaultDispatcher() {
    var tmp;
    if (isJsdom()) {
      tmp = NodeDispatcher_getInstance();
    } else {
      var tmp_0;
      var tmp_1;
      if (!(typeof window === 'undefined')) {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = window;
          tmp$ret$0 = tmp0_asDynamic;
        }
        tmp_1 = tmp$ret$0 != null;
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        var tmp$ret$1;
        {
          var tmp1_asDynamic = window;
          tmp$ret$1 = tmp1_asDynamic;
        }
        tmp_0 = !(typeof tmp$ret$1.addEventListener === 'undefined');
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = asCoroutineDispatcher(window);
      } else {
        if (typeof process === 'undefined' ? true : typeof process.nextTick === 'undefined') {
          tmp = SetTimeoutDispatcher_getInstance();
        } else {
          tmp = NodeDispatcher_getInstance();
        }
      }
    }
    return tmp;
  }
  function isJsdom() {
    return ((((!(typeof navigator === 'undefined') ? navigator != null : false) ? navigator.userAgent != null : false) ? !(typeof navigator.userAgent === 'undefined') : false) ? !(typeof navigator.userAgent.match === 'undefined') : false) ? navigator.userAgent.match('\\bjsdom\\b') : false;
  }
  function newCoroutineContext(_this__u8e3s4, context) {
    var combined = _this__u8e3s4.ri().g4(context);
    return (!(combined === Dispatchers_getInstance().sr_1) ? combined.z3(Key_getInstance()) == null : false) ? combined.g4(Dispatchers_getInstance().sr_1) : combined;
  }
  function get_coroutineName(_this__u8e3s4) {
    return null;
  }
  function newCoroutineContext_0(_this__u8e3s4, addedContext) {
    return _this__u8e3s4.g4(addedContext);
  }
  function UndispatchedCoroutine(context, uCont) {
    ScopeCoroutine.call(this, context, uCont);
  }
  UndispatchedCoroutine.prototype.bj = function (state) {
    return this.zk().m3(recoverResult(state, this.zk()));
  };
  UndispatchedCoroutine.$metadata$ = classMeta('UndispatchedCoroutine', undefined, undefined, undefined, undefined, ScopeCoroutine.prototype);
  function handleCoroutineExceptionImpl(context, exception) {
    console.error(exception);
  }
  var counter;
  function get_DEBUG() {
    return DEBUG;
  }
  var DEBUG;
  function get_classSimpleName(_this__u8e3s4) {
    var tmp0_elvis_lhs = getKClassFromExpression(_this__u8e3s4).xc();
    return tmp0_elvis_lhs == null ? 'Unknown' : tmp0_elvis_lhs;
  }
  function get_hexAddress(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var result = tmp$ret$0.__debug_counter;
    if (!(typeof result === 'number')) {
      counter = counter + 1 | 0;
      result = counter;
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4;
      }
      tmp$ret$1.__debug_counter = result;
    }
    return ((!(result == null) ? typeof result === 'number' : false) ? result : THROW_CCE()).toString();
  }
  function assert(value) {
  }
  function Dispatchers() {
    Dispatchers_instance = this;
    this.sr_1 = createDefaultDispatcher();
    this.tr_1 = Unconfined_getInstance();
    this.ur_1 = new JsMainDispatcher(this.sr_1, false);
    this.vr_1 = null;
  }
  Dispatchers.prototype.wr = function () {
    var tmp0_elvis_lhs = this.vr_1;
    return tmp0_elvis_lhs == null ? this.ur_1 : tmp0_elvis_lhs;
  };
  Dispatchers.$metadata$ = objectMeta('Dispatchers');
  var Dispatchers_instance;
  function Dispatchers_getInstance() {
    if (Dispatchers_instance == null)
      new Dispatchers();
    return Dispatchers_instance;
  }
  function JsMainDispatcher(delegate, invokeImmediately) {
    MainCoroutineDispatcher.call(this);
    this.r19_1 = delegate;
    this.s19_1 = invokeImmediately;
    this.t19_1 = this.s19_1 ? this : new JsMainDispatcher(this.r19_1, true);
  }
  JsMainDispatcher.prototype.qr = function () {
    return this.t19_1;
  };
  JsMainDispatcher.prototype.sn = function (context) {
    return !this.s19_1;
  };
  JsMainDispatcher.prototype.tn = function (context, block) {
    return this.r19_1.tn(context, block);
  };
  JsMainDispatcher.prototype.toString = function () {
    var tmp0_elvis_lhs = this.rr();
    return tmp0_elvis_lhs == null ? this.r19_1.toString() : tmp0_elvis_lhs;
  };
  JsMainDispatcher.$metadata$ = classMeta('JsMainDispatcher', undefined, undefined, undefined, undefined, MainCoroutineDispatcher.prototype);
  function createEventLoop() {
    return new UnconfinedEventLoop();
  }
  function UnconfinedEventLoop() {
    EventLoop.call(this);
  }
  UnconfinedEventLoop.prototype.tn = function (context, block) {
    unsupported();
  };
  UnconfinedEventLoop.$metadata$ = classMeta('UnconfinedEventLoop', undefined, undefined, undefined, undefined, EventLoop.prototype);
  function unsupported() {
    throw UnsupportedOperationException_init_$Create$('runBlocking event loop is not supported');
  }
  function JobCancellationException(message, cause, job) {
    CancellationException_init_$Init$(message, cause, this);
    this.y19_1 = job;
    captureStack(this, JobCancellationException);
  }
  JobCancellationException.prototype.toString = function () {
    return CancellationException.prototype.toString.call(this) + '; job=' + this.y19_1;
  };
  JobCancellationException.prototype.equals = function (other) {
    var tmp;
    if (other === this) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      var tmp_2;
      if (other instanceof JobCancellationException) {
        tmp_2 = other.message == this.message;
      } else {
        tmp_2 = false;
      }
      if (tmp_2) {
        tmp_1 = equals(other.y19_1, this.y19_1);
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = equals(other.cause, this.cause);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  JobCancellationException.prototype.hashCode = function () {
    var tmp = imul(imul(getStringHashCode(ensureNotNull(this.message)), 31) + hashCode(this.y19_1) | 0, 31);
    var tmp0_safe_receiver = this.cause;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
  };
  JobCancellationException.$metadata$ = classMeta('JobCancellationException', undefined, undefined, undefined, undefined, CancellationException.prototype);
  function addSuppressedThrowable(_this__u8e3s4, other) {
  }
  function NodeDispatcher() {
    NodeDispatcher_instance = this;
    SetTimeoutBasedDispatcher.call(this);
  }
  NodeDispatcher.prototype.b1a = function () {
    process.nextTick(this.l1a().h1a_1);
  };
  NodeDispatcher.$metadata$ = objectMeta('NodeDispatcher', undefined, undefined, undefined, undefined, SetTimeoutBasedDispatcher.prototype);
  var NodeDispatcher_instance;
  function NodeDispatcher_getInstance() {
    if (NodeDispatcher_instance == null)
      new NodeDispatcher();
    return NodeDispatcher_instance;
  }
  function SetTimeoutDispatcher() {
    SetTimeoutDispatcher_instance = this;
    SetTimeoutBasedDispatcher.call(this);
  }
  SetTimeoutDispatcher.prototype.b1a = function () {
    setTimeout(this.l1a().h1a_1, 0);
  };
  SetTimeoutDispatcher.$metadata$ = objectMeta('SetTimeoutDispatcher', undefined, undefined, undefined, undefined, SetTimeoutBasedDispatcher.prototype);
  var SetTimeoutDispatcher_instance;
  function SetTimeoutDispatcher_getInstance() {
    if (SetTimeoutDispatcher_instance == null)
      new SetTimeoutDispatcher();
    return SetTimeoutDispatcher_instance;
  }
  function SetTimeoutBasedDispatcher$ScheduledMessageQueue$processQueue$lambda(this$0) {
    return function () {
      this$0.t1a();
      return Unit_getInstance();
    };
  }
  function ScheduledMessageQueue($outer) {
    this.i1a_1 = $outer;
    MessageQueue.call(this);
    var tmp = this;
    tmp.h1a_1 = SetTimeoutBasedDispatcher$ScheduledMessageQueue$processQueue$lambda(this);
  }
  ScheduledMessageQueue.prototype.u1a = function () {
    this.i1a_1.b1a();
  };
  ScheduledMessageQueue.prototype.v1a = function () {
    setTimeout(this.h1a_1, 0);
  };
  ScheduledMessageQueue.$metadata$ = classMeta('ScheduledMessageQueue', undefined, undefined, undefined, undefined, MessageQueue.prototype);
  function SetTimeoutBasedDispatcher() {
    CoroutineDispatcher.call(this);
    this.k1a_1 = new ScheduledMessageQueue(this);
  }
  SetTimeoutBasedDispatcher.prototype.l1a = function () {
    return this.k1a_1;
  };
  SetTimeoutBasedDispatcher.prototype.tn = function (context, block) {
    this.k1a_1.w1a(block);
  };
  SetTimeoutBasedDispatcher.$metadata$ = classMeta('SetTimeoutBasedDispatcher', [Delay], undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function MessageQueue() {
    ArrayQueue.call(this);
    this.r1a_1 = 16;
    this.s1a_1 = false;
  }
  MessageQueue.prototype.w1a = function (element) {
    this.go(element);
    if (!this.s1a_1) {
      this.s1a_1 = true;
      this.u1a();
    }
  };
  MessageQueue.prototype.t1a = function () {
    try {
      {
        var tmp0_repeat = this.r1a_1;
        {
        }
        var inductionVariable = 0;
        if (inductionVariable < tmp0_repeat)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            {
              var tmp0_elvis_lhs = this.eo();
              var tmp;
              if (tmp0_elvis_lhs == null) {
                return Unit_getInstance();
              } else {
                tmp = tmp0_elvis_lhs;
              }
              var element = tmp;
              element.fn();
            }
          }
           while (inductionVariable < tmp0_repeat);
      }
    }finally {
      if (this.jo()) {
        this.s1a_1 = false;
      } else {
        this.v1a();
      }
    }
  };
  MessageQueue.$metadata$ = classMeta('MessageQueue', undefined, undefined, undefined, undefined, ArrayQueue.prototype);
  function WindowDispatcher(window_0) {
    CoroutineDispatcher.call(this);
    this.y1a_1 = window_0;
    this.z1a_1 = new WindowMessageQueue(this.y1a_1);
  }
  WindowDispatcher.prototype.tn = function (context, block) {
    return this.z1a_1.w1a(block);
  };
  WindowDispatcher.$metadata$ = classMeta('WindowDispatcher', [Delay], undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function WindowMessageQueue$lambda(this$0) {
    return function (event) {
      var tmp;
      if (event.source == this$0.f1b_1 ? event.data == this$0.g1b_1 : false) {
        event.stopPropagation();
        tmp = this$0.t1a();
      }
      return Unit_getInstance();
    };
  }
  function WindowMessageQueue$schedule$lambda(this$0) {
    return function (it) {
      this$0.t1a();
      return Unit_getInstance();
    };
  }
  function WindowMessageQueue(window_0) {
    MessageQueue.call(this);
    this.f1b_1 = window_0;
    this.g1b_1 = 'dispatchCoroutine';
    this.f1b_1.addEventListener('message', WindowMessageQueue$lambda(this), true);
  }
  WindowMessageQueue.prototype.u1a = function () {
    var tmp = Promise.resolve(Unit_getInstance());
    tmp.then(WindowMessageQueue$schedule$lambda(this));
  };
  WindowMessageQueue.prototype.v1a = function () {
    this.f1b_1.postMessage(this.g1b_1, '*');
  };
  WindowMessageQueue.$metadata$ = classMeta('WindowMessageQueue', undefined, undefined, undefined, undefined, MessageQueue.prototype);
  function Runnable() {
  }
  Runnable.$metadata$ = interfaceMeta('Runnable');
  function Runnable_0(block) {
    return new _no_name_provided__qut3iv_6(block);
  }
  function _no_name_provided__qut3iv_6($block) {
    this.h1b_1 = $block;
  }
  _no_name_provided__qut3iv_6.prototype.fn = function () {
    this.h1b_1();
  };
  _no_name_provided__qut3iv_6.$metadata$ = classMeta(undefined, [Runnable]);
  function SchedulerTask() {
  }
  SchedulerTask.$metadata$ = classMeta('SchedulerTask', [Runnable]);
  function get_taskContext(_this__u8e3s4) {
    return Unit_getInstance();
  }
  function asCoroutineDispatcher(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var tmp0_elvis_lhs = tmp$ret$0.coroutineDispatcher;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$2;
      {
        var tmp0_also = new WindowDispatcher(_this__u8e3s4);
        {
        }
        {
          var tmp$ret$1;
          {
            tmp$ret$1 = _this__u8e3s4;
          }
          tmp$ret$1.coroutineDispatcher = tmp0_also;
        }
        tmp$ret$2 = tmp0_also;
      }
      tmp = tmp$ret$2;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function AbortFlowException(owner) {
    CancellationException_init_$Init$_0('Flow was aborted, no more elements needed', this);
    this.l10_1 = owner;
    captureStack(this, AbortFlowException);
  }
  AbortFlowException.$metadata$ = classMeta('AbortFlowException', undefined, undefined, undefined, undefined, CancellationException.prototype);
  function SafeCollector$collectContextSize$lambda() {
    return function (count, _anonymous_parameter_1__qggqgd) {
      return count + 1 | 0;
    };
  }
  function SafeCollector(collector, collectContext) {
    this.yy_1 = collector;
    this.zy_1 = collectContext;
    var tmp = this;
    tmp.az_1 = this.zy_1.f4(0, SafeCollector$collectContextSize$lambda());
    this.bz_1 = null;
  }
  SafeCollector.prototype.wx = function (value, $cont) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = $cont.o3();
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var currentContext = tmp$ret$1;
    ensureActive(currentContext);
    if (!(this.bz_1 === currentContext)) {
      checkContext(this, currentContext);
      this.bz_1 = currentContext;
    }
    return this.yy_1.wx(value, $cont);
  };
  SafeCollector.prototype.cz = function () {
  };
  SafeCollector.$metadata$ = classMeta('SafeCollector', [FlowCollector]);
  function identitySet(expectedSize) {
    return HashSet_init_$Create$(expectedSize);
  }
  function NoOpLock() {
  }
  NoOpLock.$metadata$ = classMeta('NoOpLock');
  function withLock(_this__u8e3s4, action) {
    return action();
  }
  function LinkedListHead() {
    LinkedListNode.call(this);
  }
  LinkedListHead.prototype.zl = function () {
    throw UnsupportedOperationException_init_$Create$_0();
  };
  LinkedListHead.$metadata$ = classMeta('LinkedListHead', undefined, undefined, undefined, undefined, LinkedListNode.prototype);
  function LinkedListNode() {
    this.wl_1 = this;
    this.xl_1 = this;
    this.yl_1 = false;
  }
  LinkedListNode.prototype.yo = function () {
    return this.wl_1;
  };
  LinkedListNode.prototype.cp = function () {
    return this.wl_1;
  };
  LinkedListNode.prototype.dp = function () {
    return this.xl_1;
  };
  LinkedListNode.prototype.ep = function () {
    return this.yl_1;
  };
  LinkedListNode.prototype.fp = function (node) {
    var prev = this.xl_1;
    node.wl_1 = this;
    node.xl_1 = prev;
    prev.wl_1 = node;
    this.xl_1 = node;
  };
  LinkedListNode.prototype.zl = function () {
    return this.gp();
  };
  LinkedListNode.prototype.gp = function () {
    if (this.yl_1)
      return false;
    var prev = this.xl_1;
    var next = this.wl_1;
    prev.wl_1 = next;
    next.xl_1 = prev;
    this.yl_1 = true;
    return true;
  };
  LinkedListNode.prototype.qp = function (node) {
    if (!(this.wl_1 === this))
      return false;
    this.fp(node);
    return true;
  };
  LinkedListNode.prototype.hp = function (node, condition) {
    if (!condition())
      return false;
    this.fp(node);
    return true;
  };
  LinkedListNode.prototype.ip = function (node, predicate) {
    if (!predicate(this.xl_1))
      return false;
    this.fp(node);
    return true;
  };
  LinkedListNode.prototype.jp = function (node, predicate, condition) {
    if (!predicate(this.xl_1))
      return false;
    if (!condition())
      return false;
    this.fp(node);
    return true;
  };
  LinkedListNode.prototype.kp = function () {
  };
  LinkedListNode.$metadata$ = classMeta('LinkedListNode');
  function probeCoroutineCreated(completion) {
    return completion;
  }
  function unwrap(exception) {
    return exception;
  }
  function CoroutineStackFrame() {
  }
  CoroutineStackFrame.$metadata$ = interfaceMeta('CoroutineStackFrame');
  function recoverStackTrace(exception, continuation) {
    return exception;
  }
  function synchronized(lock, block) {
    return block();
  }
  function systemProp_1(propertyName) {
    return null;
  }
  function threadContextElements(context) {
    return 0;
  }
  function CommonThreadLocal() {
    this.po_1 = null;
  }
  CommonThreadLocal.prototype.qo = function () {
    var tmp = this.po_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  CommonThreadLocal.prototype.ro = function (value) {
    this.po_1 = value;
  };
  CommonThreadLocal.$metadata$ = classMeta('CommonThreadLocal');
  //region block: post-declaration
  JobSupport.prototype.tj = invokeOnCompletion$default;
  JobSupport.prototype.g4 = plus;
  JobSupport.prototype.z3 = get;
  JobSupport.prototype.f4 = fold;
  JobSupport.prototype.e4 = minusKey;
  AbstractCoroutine.prototype.tj = invokeOnCompletion$default;
  AbstractCoroutine.prototype.g4 = plus;
  AbstractCoroutine.prototype.z3 = get;
  AbstractCoroutine.prototype.f4 = fold;
  AbstractCoroutine.prototype.e4 = minusKey;
  StandaloneCoroutine.prototype.tj = invokeOnCompletion$default;
  StandaloneCoroutine.prototype.g4 = plus;
  StandaloneCoroutine.prototype.z3 = get;
  StandaloneCoroutine.prototype.f4 = fold;
  StandaloneCoroutine.prototype.e4 = minusKey;
  LazyStandaloneCoroutine.prototype.tj = invokeOnCompletion$default;
  LazyStandaloneCoroutine.prototype.g4 = plus;
  LazyStandaloneCoroutine.prototype.z3 = get;
  LazyStandaloneCoroutine.prototype.f4 = fold;
  LazyStandaloneCoroutine.prototype.e4 = minusKey;
  ScopeCoroutine.prototype.tj = invokeOnCompletion$default;
  ScopeCoroutine.prototype.g4 = plus;
  ScopeCoroutine.prototype.z3 = get;
  ScopeCoroutine.prototype.f4 = fold;
  ScopeCoroutine.prototype.e4 = minusKey;
  DispatchedCoroutine.prototype.tj = invokeOnCompletion$default;
  DispatchedCoroutine.prototype.g4 = plus;
  DispatchedCoroutine.prototype.z3 = get;
  DispatchedCoroutine.prototype.f4 = fold;
  DispatchedCoroutine.prototype.e4 = minusKey;
  CoroutineDispatcher.prototype.z3 = get_0;
  CoroutineDispatcher.prototype.f4 = fold;
  CoroutineDispatcher.prototype.e4 = minusKey_0;
  CoroutineDispatcher.prototype.g4 = plus;
  EventLoop.prototype.g4 = plus;
  EventLoop.prototype.z3 = get_0;
  EventLoop.prototype.f4 = fold;
  EventLoop.prototype.e4 = minusKey_0;
  JobImpl.prototype.tj = invokeOnCompletion$default;
  JobImpl.prototype.g4 = plus;
  JobImpl.prototype.z3 = get;
  JobImpl.prototype.f4 = fold;
  JobImpl.prototype.e4 = minusKey;
  MainCoroutineDispatcher.prototype.g4 = plus;
  MainCoroutineDispatcher.prototype.z3 = get_0;
  MainCoroutineDispatcher.prototype.f4 = fold;
  MainCoroutineDispatcher.prototype.e4 = minusKey_0;
  NonCancellable.prototype.tj = invokeOnCompletion$default;
  NonCancellable.prototype.z3 = get;
  NonCancellable.prototype.f4 = fold;
  NonCancellable.prototype.e4 = minusKey;
  NonCancellable.prototype.g4 = plus;
  Unconfined.prototype.g4 = plus;
  Unconfined.prototype.z3 = get_0;
  Unconfined.prototype.f4 = fold;
  Unconfined.prototype.e4 = minusKey_0;
  AbstractSendChannel.prototype.yu = close$default;
  AbstractChannel.prototype.yu = close$default;
  ArrayChannel.prototype.yu = close$default;
  ChannelCoroutine.prototype.yu = close$default;
  ChannelCoroutine.prototype.tj = invokeOnCompletion$default;
  ChannelCoroutine.prototype.g4 = plus;
  ChannelCoroutine.prototype.z3 = get;
  ChannelCoroutine.prototype.f4 = fold;
  ChannelCoroutine.prototype.e4 = minusKey;
  ConflatedChannel.prototype.yu = close$default;
  LinkedListChannel.prototype.yu = close$default;
  ProducerCoroutine.prototype.yu = close$default;
  ProducerCoroutine.prototype.tj = invokeOnCompletion$default;
  ProducerCoroutine.prototype.g4 = plus;
  ProducerCoroutine.prototype.z3 = get;
  ProducerCoroutine.prototype.f4 = fold;
  ProducerCoroutine.prototype.e4 = minusKey;
  RendezvousChannel.prototype.yu = close$default;
  UndispatchedCoroutine.prototype.tj = invokeOnCompletion$default;
  UndispatchedCoroutine.prototype.g4 = plus;
  UndispatchedCoroutine.prototype.z3 = get;
  UndispatchedCoroutine.prototype.f4 = fold;
  UndispatchedCoroutine.prototype.e4 = minusKey;
  JsMainDispatcher.prototype.g4 = plus;
  JsMainDispatcher.prototype.z3 = get_0;
  JsMainDispatcher.prototype.f4 = fold;
  JsMainDispatcher.prototype.e4 = minusKey_0;
  UnconfinedEventLoop.prototype.g4 = plus;
  UnconfinedEventLoop.prototype.z3 = get_0;
  UnconfinedEventLoop.prototype.f4 = fold;
  UnconfinedEventLoop.prototype.e4 = minusKey_0;
  SetTimeoutBasedDispatcher.prototype.g4 = plus;
  SetTimeoutBasedDispatcher.prototype.z3 = get_0;
  SetTimeoutBasedDispatcher.prototype.f4 = fold;
  SetTimeoutBasedDispatcher.prototype.e4 = minusKey_0;
  NodeDispatcher.prototype.g4 = plus;
  NodeDispatcher.prototype.z3 = get_0;
  NodeDispatcher.prototype.f4 = fold;
  NodeDispatcher.prototype.e4 = minusKey_0;
  SetTimeoutDispatcher.prototype.g4 = plus;
  SetTimeoutDispatcher.prototype.z3 = get_0;
  SetTimeoutDispatcher.prototype.f4 = fold;
  SetTimeoutDispatcher.prototype.e4 = minusKey_0;
  WindowDispatcher.prototype.g4 = plus;
  WindowDispatcher.prototype.z3 = get_0;
  WindowDispatcher.prototype.f4 = fold;
  WindowDispatcher.prototype.e4 = minusKey_0;
  //endregion
  //region block: init
  UNDECIDED = 0;
  SUSPENDED = 1;
  RESUMED = 2;
  UNDECIDED_0 = 0;
  SUSPENDED_0 = 1;
  RESUMED_0 = 2;
  FALSE = 0;
  TRUE = 1;
  DEFAULT_CLOSE_MESSAGE = 'Channel was closed';
  MODE_CANCELLABLE = 1;
  MODE_UNINITIALIZED = -1;
  MODE_CANCELLABLE_REUSABLE = 2;
  MODE_ATOMIC = 0;
  counter = 0;
  DEBUG = false;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = collect;
  _.$_$.b = emitAll_0;
  _.$_$.c = withContext;
  _.$_$.d = toList$default;
  _.$_$.e = Job$default;
  _.$_$.f = Dispatchers_getInstance;
  _.$_$.g = NonCancellable_getInstance;
  _.$_$.h = FlowCollector;
  _.$_$.i = Flow;
  _.$_$.j = asFlow;
  _.$_$.k = flatMapMerge;
  _.$_$.l = flow;
  _.$_$.m = transformWhile;
  _.$_$.n = CancellableContinuationImpl;
  _.$_$.o = CoroutineScope_0;
  _.$_$.p = CoroutineScope;
  _.$_$.q = get_MODE_CANCELLABLE;
  _.$_$.r = Runnable;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(737), __nccwpck_require__(771)));

//# sourceMappingURL=kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js.map

/***/ }),

/***/ 36:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, $module$_actions_core_fx0i1v, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core) {
  'use strict';
  //region block: imports
  var getInput = $module$_actions_core_fx0i1v.getInput;
  var setFailed = $module$_actions_core_fx0i1v.setFailed;
  var Unit_getInstance = kotlin_kotlin.$_$.m3;
  var Job$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.e;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.o;
  var startCoroutine = kotlin_kotlin.$_$.l6;
  var EmptyCoroutineContext_getInstance = kotlin_kotlin.$_$.v2;
  var Runnable = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.r;
  var classMeta = kotlin_kotlin.$_$.u6;
  var Dispatchers_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.f;
  var Result__exceptionOrNull_impl_p6xea9 = kotlin_kotlin.$_$.g2;
  var _Result___get_value__impl__bjfvqg = kotlin_kotlin.$_$.h2;
  var THROW_CCE = kotlin_kotlin.$_$.k9;
  var isObject = kotlin_kotlin.$_$.l7;
  var Continuation = kotlin_kotlin.$_$.a6;
  //endregion
  //region block: pre-declaration
  //endregion
  function getInput_0(name, required, trimWhitespace) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_unsafeCast = {};
          tmp$ret$0 = tmp0_unsafeCast;
        }
        var tmp1_apply = tmp$ret$0;
        {
        }
        {
          tmp1_apply.required = required;
          tmp1_apply.trimWhitespace = trimWhitespace;
        }
        tmp$ret$1 = tmp1_apply;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return getInput(name, tmp$ret$2);
  }
  function getInput$default(name, required, trimWhitespace, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      required = false;
    if (!(($mask0 & 4) === 0))
      trimWhitespace = true;
    return getInput_0(name, required, trimWhitespace);
  }
  function jsObject(config) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = {};
        tmp$ret$0 = tmp0_unsafeCast;
      }
      var tmp1_apply = tmp$ret$0;
      {
      }
      config(tmp1_apply);
      tmp$ret$1 = tmp1_apply;
    }
    return tmp$ret$1;
  }
  function runAction(context, block) {
    var job = Job$default(null, 1, null);
    job.on(runAction$lambda(context));
    var completion = new runAction$completion$1(context, job);
    startCoroutine(block, CoroutineScope(completion.u2a_1), completion);
  }
  function runAction$default(context, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      context = EmptyCoroutineContext_getInstance();
    return runAction(context, block);
  }
  function _no_name_provided__qut3iv($ex) {
    this.w2a_1 = $ex;
  }
  _no_name_provided__qut3iv.prototype.fn = function () {
    {
      if (!(this.w2a_1 == null)) {
        setFailed(this.w2a_1);
      }
    }
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Runnable]);
  function runAction$lambda($context) {
    return function (ex) {
      var tmp = Dispatchers_getInstance().sr_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = new _no_name_provided__qut3iv(ex);
      }
      tmp.tn($context, tmp$ret$0);
      return Unit_getInstance();
    };
  }
  function runAction$completion$1($context, $job) {
    this.v2a_1 = $job;
    this.u2a_1 = $context.g4($job);
  }
  runAction$completion$1.prototype.o3 = function () {
    return this.u2a_1;
  };
  runAction$completion$1.prototype.n3 = function (result) {
    var tmp$ret$2;
    {
      {
      }
      var exception = Result__exceptionOrNull_impl_p6xea9(result);
      var tmp;
      if (exception == null) {
        var tmp$ret$0;
        {
          var tmp_0 = _Result___get_value__impl__bjfvqg(result);
          var tmp0__anonymous__q1qw7t = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
          tmp$ret$0 = this.v2a_1.mn();
        }
        tmp = tmp$ret$0;
      } else {
        var tmp$ret$1;
        {
          tmp$ret$1 = this.v2a_1.nn(exception);
        }
        tmp = tmp$ret$1;
      }
      tmp$ret$2 = tmp;
    }
  };
  runAction$completion$1.prototype.m3 = function (result) {
    return this.n3(result);
  };
  runAction$completion$1.$metadata$ = classMeta(undefined, [Continuation]);
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = getInput$default;
  _.$_$.b = runAction$default;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(403), __nccwpck_require__(737), __nccwpck_require__(915)));

//# sourceMappingURL=repo-access-action-actions-toolkit.js.map

/***/ }),

/***/ 790:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, github_Process_4jksas, github_Https_a0cnpc, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var PluginGeneratedSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a2;
  var IntSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m;
  var StringSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o;
  var Unit_getInstance = kotlin_kotlin.$_$.m3;
  var UnknownFieldException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d;
  var THROW_CCE = kotlin_kotlin.$_$.k9;
  var typeParametersSerializers = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v1;
  var GeneratedSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w1;
  var objectMeta = kotlin_kotlin.$_$.r7;
  var throwMissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d2;
  var BooleanSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l;
  var LinkedHashMapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x1;
  var get_nullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r;
  var LongSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n;
  var Long = kotlin_kotlin.$_$.g9;
  var classMeta = kotlin_kotlin.$_$.u6;
  var getStringHashCode = kotlin_kotlin.$_$.z6;
  var LinkedHashSetSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y1;
  var ArrayListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t1;
  var startsWith$default = kotlin_kotlin.$_$.n;
  var toString = kotlin_kotlin.$_$.v7;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.p1;
  var getKClass = kotlin_kotlin.$_$.e;
  var arrayOf = kotlin_kotlin.$_$.t9;
  var createKType = kotlin_kotlin.$_$.b;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p2;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i2;
  var isInterface = kotlin_kotlin.$_$.j7;
  var flow = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.l;
  var transformWhile = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.m;
  var hashCode = kotlin_kotlin.$_$.a7;
  var equals = kotlin_kotlin.$_$.w6;
  var CoroutineImpl = kotlin_kotlin.$_$.h6;
  var FlowCollector = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.h;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.b2;
  var contains$default = kotlin_kotlin.$_$.k;
  var Char = kotlin_kotlin.$_$.y8;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.s5;
  var Collection = kotlin_kotlin.$_$.o3;
  var asFlow = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.j;
  var emitAll = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.b;
  var serializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o2;
  var Json$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var createInvariantKTypeProjection = kotlin_kotlin.$_$.a;
  var interfaceMeta = kotlin_kotlin.$_$.b7;
  var RuntimeException = kotlin_kotlin.$_$.j9;
  var RuntimeException_init_$Init$ = kotlin_kotlin.$_$.v1;
  var captureStack = kotlin_kotlin.$_$.p6;
  var STRING_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f;
  var PrimitiveSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.p;
  var NonCancellable_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.g;
  var withContext = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.c;
  var SuspendFunction1 = kotlin_kotlin.$_$.i6;
  var SuspendFunction2 = kotlin_kotlin.$_$.j6;
  var resume = kotlin_kotlin.$_$.k6;
  var Companion_getInstance = kotlin_kotlin.$_$.h3;
  var createFailure = kotlin_kotlin.$_$.v9;
  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.f2;
  var copyToArray = kotlin_kotlin.$_$.q4;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var intercepted = kotlin_kotlin.$_$.u5;
  var get_MODE_CANCELLABLE = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.q;
  var CancellableContinuationImpl = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.n;
  var returnIfSuspended = kotlin_kotlin.$_$.g;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.p;
  var numberToInt = kotlin_kotlin.$_$.q7;
  var lazy = kotlin_kotlin.$_$.ba;
  var KProperty1 = kotlin_kotlin.$_$.b8;
  var getPropertyCallableRef = kotlin_kotlin.$_$.y6;
  //endregion
  //region block: pre-declaration
  Github$fetchPages$slambda.prototype = Object.create(CoroutineImpl.prototype);
  Github$fetchPages$slambda.prototype.constructor = Github$fetchPages$slambda;
  Github$fetchCollection$slambda.prototype = Object.create(CoroutineImpl.prototype);
  Github$fetchCollection$slambda.prototype.constructor = Github$fetchCollection$slambda;
  $fetchCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $fetchCOROUTINE$0.prototype.constructor = $fetchCOROUTINE$0;
  $deleteCOROUTINE$1.prototype = Object.create(CoroutineImpl.prototype);
  $deleteCOROUTINE$1.prototype.constructor = $deleteCOROUTINE$1;
  $putCOROUTINE$2.prototype = Object.create(CoroutineImpl.prototype);
  $putCOROUTINE$2.prototype.constructor = $putCOROUTINE$2;
  $updateRepoTeamPermissionCOROUTINE$3.prototype = Object.create(CoroutineImpl.prototype);
  $updateRepoTeamPermissionCOROUTINE$3.prototype.constructor = $updateRepoTeamPermissionCOROUTINE$3;
  GithubException.prototype = Object.create(RuntimeException.prototype);
  GithubException.prototype.constructor = GithubException;
  useGithub$slambda.prototype = Object.create(CoroutineImpl.prototype);
  useGithub$slambda.prototype.constructor = useGithub$slambda;
  $useGithubCOROUTINE$4.prototype = Object.create(CoroutineImpl.prototype);
  $useGithubCOROUTINE$4.prototype.constructor = $useGithubCOROUTINE$4;
  $requestForTextCOROUTINE$5.prototype = Object.create(CoroutineImpl.prototype);
  $requestForTextCOROUTINE$5.prototype.constructor = $requestForTextCOROUTINE$5;
  //endregion
  function $serializer() {
    $serializer_instance = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.User', this, 4);
    tmp0_serialDesc.y1k('id', false);
    tmp0_serialDesc.y1k('login', false);
    tmp0_serialDesc.y1k('name', false);
    tmp0_serialDesc.y1k('email', false);
    this.y21_1 = tmp0_serialDesc;
  }
  $serializer.prototype.i1b = function () {
    return this.y21_1;
  };
  $serializer.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer.prototype.k1b = function (decoder) {
    var tmp0_desc = this.y21_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_input = decoder.c1e(tmp0_desc);
    if (tmp8_input.q1e()) {
      tmp4_local0 = tmp8_input.h1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp8_input.m1e(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp8_input.m1e(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp8_input.m1e(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp8_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp8_input.h1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp8_input.m1e(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp8_input.m1e(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp8_input.m1e(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp8_input.d1e(tmp0_desc);
    return User_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
  };
  $serializer.prototype.z21 = function (encoder, value) {
    var tmp0_desc = this.y21_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.j1f(tmp0_desc, 0, value.a22_1);
    tmp1_output.o1f(tmp0_desc, 1, value.b22_1);
    tmp1_output.o1f(tmp0_desc, 2, value.c22_1);
    tmp1_output.o1f(tmp0_desc, 3, value.d22_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer.prototype.j1b = function (encoder, value) {
    return this.z21(encoder, value instanceof User ? value : THROW_CCE());
  };
  $serializer.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance;
  function $serializer_getInstance() {
    if ($serializer_instance == null)
      new $serializer();
    return $serializer_instance;
  }
  function User_init_$Init$(seen1, id, login, name, email, serializationConstructorMarker, $this) {
    if (!(15 === (15 & seen1)))
      throwMissingFieldException(seen1, 15, $serializer_getInstance().y21_1);
    $this.a22_1 = id;
    $this.b22_1 = login;
    $this.c22_1 = name;
    $this.d22_1 = email;
    return $this;
  }
  function User_init_$Create$(seen1, id, login, name, email, serializationConstructorMarker) {
    return User_init_$Init$(seen1, id, login, name, email, serializationConstructorMarker, Object.create(User.prototype));
  }
  function Companion() {
    Companion_instance = this;
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_0() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function $serializer_0() {
    $serializer_instance_0 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Organization', this, 2);
    tmp0_serialDesc.y1k('id', false);
    tmp0_serialDesc.y1k('name', false);
    this.e22_1 = tmp0_serialDesc;
  }
  $serializer_0.prototype.i1b = function () {
    return this.e22_1;
  };
  $serializer_0.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), StringSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_0.prototype.k1b = function (decoder) {
    var tmp0_desc = this.e22_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_input = decoder.c1e(tmp0_desc);
    if (tmp6_input.q1e()) {
      tmp4_local0 = tmp6_input.h1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.m1e(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.h1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.m1e(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.d1e(tmp0_desc);
    return Organization_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer_0.prototype.f22 = function (encoder, value) {
    var tmp0_desc = this.e22_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.j1f(tmp0_desc, 0, value.g22_1);
    tmp1_output.o1f(tmp0_desc, 1, value.h22_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_0.prototype.j1b = function (encoder, value) {
    return this.f22(encoder, value instanceof Organization ? value : THROW_CCE());
  };
  $serializer_0.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_0;
  function $serializer_getInstance_0() {
    if ($serializer_instance_0 == null)
      new $serializer_0();
    return $serializer_instance_0;
  }
  function Organization_init_$Init$(seen1, id, name, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1)))
      throwMissingFieldException(seen1, 3, $serializer_getInstance_0().e22_1);
    $this.g22_1 = id;
    $this.h22_1 = name;
    return $this;
  }
  function Organization_init_$Create$(seen1, id, name, serializationConstructorMarker) {
    return Organization_init_$Init$(seen1, id, name, serializationConstructorMarker, Object.create(Organization.prototype));
  }
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_1() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function $serializer_1() {
    $serializer_instance_1 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Team', this, 4);
    tmp0_serialDesc.y1k('id', false);
    tmp0_serialDesc.y1k('name', false);
    tmp0_serialDesc.y1k('slug', false);
    tmp0_serialDesc.y1k('permissions', true);
    this.i22_1 = tmp0_serialDesc;
  }
  $serializer_1.prototype.i1b = function () {
    return this.i22_1;
  };
  $serializer_1.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), get_nullable(new LinkedHashMapSerializer(StringSerializer_getInstance(), BooleanSerializer_getInstance()))];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_1.prototype.k1b = function (decoder) {
    var tmp0_desc = this.i22_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_input = decoder.c1e(tmp0_desc);
    if (tmp8_input.q1e()) {
      tmp4_local0 = tmp8_input.h1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp8_input.m1e(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp8_input.m1e(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp8_input.p1e(tmp0_desc, 3, new LinkedHashMapSerializer(StringSerializer_getInstance(), BooleanSerializer_getInstance()), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp8_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp8_input.h1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp8_input.m1e(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp8_input.m1e(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp8_input.p1e(tmp0_desc, 3, new LinkedHashMapSerializer(StringSerializer_getInstance(), BooleanSerializer_getInstance()), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp8_input.d1e(tmp0_desc);
    return Team_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
  };
  $serializer_1.prototype.j22 = function (encoder, value) {
    var tmp0_desc = this.i22_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.j1f(tmp0_desc, 0, value.k22_1);
    tmp1_output.o1f(tmp0_desc, 1, value.l22_1);
    tmp1_output.o1f(tmp0_desc, 2, value.m22_1);
    if (tmp1_output.v1f(tmp0_desc, 3) ? true : !(value.n22_1 == null))
      tmp1_output.r1f(tmp0_desc, 3, new LinkedHashMapSerializer(StringSerializer_getInstance(), BooleanSerializer_getInstance()), value.n22_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_1.prototype.j1b = function (encoder, value) {
    return this.j22(encoder, value instanceof Team ? value : THROW_CCE());
  };
  $serializer_1.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_1;
  function $serializer_getInstance_1() {
    if ($serializer_instance_1 == null)
      new $serializer_1();
    return $serializer_instance_1;
  }
  function Team_init_$Init$(seen1, id, name, slug, permissions, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1)))
      throwMissingFieldException(seen1, 7, $serializer_getInstance_1().i22_1);
    $this.k22_1 = id;
    $this.l22_1 = name;
    $this.m22_1 = slug;
    if (0 === (seen1 & 8))
      $this.n22_1 = null;
    else
      $this.n22_1 = permissions;
    return $this;
  }
  function Team_init_$Create$(seen1, id, name, slug, permissions, serializationConstructorMarker) {
    return Team_init_$Init$(seen1, id, name, slug, permissions, serializationConstructorMarker, Object.create(Team.prototype));
  }
  function $serializer_2() {
    $serializer_instance_2 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Artifact', this, 5);
    tmp0_serialDesc.y1k('id', false);
    tmp0_serialDesc.y1k('name', false);
    tmp0_serialDesc.y1k('size_in_bytes', false);
    tmp0_serialDesc.y1k('expired', false);
    tmp0_serialDesc.y1k('created_at', false);
    this.o22_1 = tmp0_serialDesc;
  }
  $serializer_2.prototype.i1b = function () {
    return this.o22_1;
  };
  $serializer_2.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), StringSerializer_getInstance(), LongSerializer_getInstance(), BooleanSerializer_getInstance(), new InstantSerializer()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_2.prototype.k1b = function (decoder) {
    var tmp0_desc = this.o22_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_local2 = new Long(0, 0);
    var tmp7_local3 = false;
    var tmp8_local4 = null;
    var tmp9_input = decoder.c1e(tmp0_desc);
    if (tmp9_input.q1e()) {
      tmp4_local0 = tmp9_input.h1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp9_input.m1e(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp9_input.i1e(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp9_input.e1e(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp9_input.n1e(tmp0_desc, 4, new InstantSerializer(), tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp9_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp9_input.h1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp9_input.m1e(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp9_input.i1e(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp9_input.e1e(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp9_input.n1e(tmp0_desc, 4, new InstantSerializer(), tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp9_input.d1e(tmp0_desc);
    return Artifact_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
  };
  $serializer_2.prototype.p22 = function (encoder, value) {
    var tmp0_desc = this.o22_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.j1f(tmp0_desc, 0, value.q22_1);
    tmp1_output.o1f(tmp0_desc, 1, value.r22_1);
    tmp1_output.k1f(tmp0_desc, 2, value.s22_1);
    tmp1_output.g1f(tmp0_desc, 3, value.t22_1);
    tmp1_output.p1f(tmp0_desc, 4, new InstantSerializer(), value.u22_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_2.prototype.j1b = function (encoder, value) {
    return this.p22(encoder, value instanceof Artifact ? value : THROW_CCE());
  };
  $serializer_2.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_2;
  function $serializer_getInstance_2() {
    if ($serializer_instance_2 == null)
      new $serializer_2();
    return $serializer_instance_2;
  }
  function Artifact_init_$Init$(seen1, id, name, sizeInBytes, isExpired, createdAt, serializationConstructorMarker, $this) {
    if (!(31 === (31 & seen1)))
      throwMissingFieldException(seen1, 31, $serializer_getInstance_2().o22_1);
    $this.q22_1 = id;
    $this.r22_1 = name;
    $this.s22_1 = sizeInBytes;
    $this.t22_1 = isExpired;
    $this.u22_1 = createdAt;
    return $this;
  }
  function Artifact_init_$Create$(seen1, id, name, sizeInBytes, isExpired, createdAt, serializationConstructorMarker) {
    return Artifact_init_$Init$(seen1, id, name, sizeInBytes, isExpired, createdAt, serializationConstructorMarker, Object.create(Artifact.prototype));
  }
  function $serializer_3() {
    $serializer_instance_3 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Repository.Permissions', this, 3);
    tmp0_serialDesc.y1k('admin', false);
    tmp0_serialDesc.y1k('push', false);
    tmp0_serialDesc.y1k('pull', false);
    this.v22_1 = tmp0_serialDesc;
  }
  $serializer_3.prototype.i1b = function () {
    return this.v22_1;
  };
  $serializer_3.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [BooleanSerializer_getInstance(), BooleanSerializer_getInstance(), BooleanSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_3.prototype.k1b = function (decoder) {
    var tmp0_desc = this.v22_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = false;
    var tmp5_local1 = false;
    var tmp6_local2 = false;
    var tmp7_input = decoder.c1e(tmp0_desc);
    if (tmp7_input.q1e()) {
      tmp4_local0 = tmp7_input.e1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.e1e(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.e1e(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.e1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.e1e(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.e1e(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.d1e(tmp0_desc);
    return Permissions_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  $serializer_3.prototype.w22 = function (encoder, value) {
    var tmp0_desc = this.v22_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.g1f(tmp0_desc, 0, value.x22_1);
    tmp1_output.g1f(tmp0_desc, 1, value.y22_1);
    tmp1_output.g1f(tmp0_desc, 2, value.z22_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_3.prototype.j1b = function (encoder, value) {
    return this.w22(encoder, value instanceof Permissions ? value : THROW_CCE());
  };
  $serializer_3.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_3;
  function $serializer_getInstance_3() {
    if ($serializer_instance_3 == null)
      new $serializer_3();
    return $serializer_instance_3;
  }
  function Permissions_init_$Init$(seen1, admin, push, pull, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1)))
      throwMissingFieldException(seen1, 7, $serializer_getInstance_3().v22_1);
    $this.x22_1 = admin;
    $this.y22_1 = push;
    $this.z22_1 = pull;
    return $this;
  }
  function Permissions_init_$Create$(seen1, admin, push, pull, serializationConstructorMarker) {
    return Permissions_init_$Init$(seen1, admin, push, pull, serializationConstructorMarker, Object.create(Permissions.prototype));
  }
  function $serializer_4() {
    $serializer_instance_4 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Repository.Owner', this, 3);
    tmp0_serialDesc.y1k('id', false);
    tmp0_serialDesc.y1k('login', false);
    tmp0_serialDesc.y1k('type', false);
    this.a23_1 = tmp0_serialDesc;
  }
  $serializer_4.prototype.i1b = function () {
    return this.a23_1;
  };
  $serializer_4.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_4.prototype.k1b = function (decoder) {
    var tmp0_desc = this.a23_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_input = decoder.c1e(tmp0_desc);
    if (tmp7_input.q1e()) {
      tmp4_local0 = tmp7_input.h1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.m1e(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.m1e(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.h1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.m1e(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.m1e(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.d1e(tmp0_desc);
    return Owner_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  $serializer_4.prototype.b23 = function (encoder, value) {
    var tmp0_desc = this.a23_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.j1f(tmp0_desc, 0, value.c23_1);
    tmp1_output.o1f(tmp0_desc, 1, value.d23_1);
    tmp1_output.o1f(tmp0_desc, 2, value.e23_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_4.prototype.j1b = function (encoder, value) {
    return this.b23(encoder, value instanceof Owner ? value : THROW_CCE());
  };
  $serializer_4.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_4;
  function $serializer_getInstance_4() {
    if ($serializer_instance_4 == null)
      new $serializer_4();
    return $serializer_instance_4;
  }
  function Owner_init_$Init$(seen1, id, login, type, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1)))
      throwMissingFieldException(seen1, 7, $serializer_getInstance_4().a23_1);
    $this.c23_1 = id;
    $this.d23_1 = login;
    $this.e23_1 = type;
    return $this;
  }
  function Owner_init_$Create$(seen1, id, login, type, serializationConstructorMarker) {
    return Owner_init_$Init$(seen1, id, login, type, serializationConstructorMarker, Object.create(Owner.prototype));
  }
  function Permissions() {
  }
  Permissions.prototype.toString = function () {
    return 'Permissions(admin=' + this.x22_1 + ', push=' + this.y22_1 + ', pull=' + this.z22_1 + ')';
  };
  Permissions.prototype.hashCode = function () {
    var result = this.x22_1 | 0;
    result = imul(result, 31) + (this.y22_1 | 0) | 0;
    result = imul(result, 31) + (this.z22_1 | 0) | 0;
    return result;
  };
  Permissions.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Permissions))
      return false;
    var tmp0_other_with_cast = other instanceof Permissions ? other : THROW_CCE();
    if (!(this.x22_1 === tmp0_other_with_cast.x22_1))
      return false;
    if (!(this.y22_1 === tmp0_other_with_cast.y22_1))
      return false;
    if (!(this.z22_1 === tmp0_other_with_cast.z22_1))
      return false;
    return true;
  };
  Permissions.$metadata$ = classMeta('Permissions', undefined, undefined, {0: $serializer_getInstance_3});
  function Owner() {
  }
  Owner.prototype.toString = function () {
    return 'Owner(id=' + this.c23_1 + ', login=' + this.d23_1 + ', type=' + this.e23_1 + ')';
  };
  Owner.prototype.hashCode = function () {
    var result = this.c23_1;
    result = imul(result, 31) + getStringHashCode(this.d23_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.e23_1) | 0;
    return result;
  };
  Owner.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Owner))
      return false;
    var tmp0_other_with_cast = other instanceof Owner ? other : THROW_CCE();
    if (!(this.c23_1 === tmp0_other_with_cast.c23_1))
      return false;
    if (!(this.d23_1 === tmp0_other_with_cast.d23_1))
      return false;
    if (!(this.e23_1 === tmp0_other_with_cast.e23_1))
      return false;
    return true;
  };
  Owner.$metadata$ = classMeta('Owner', undefined, undefined, {0: $serializer_getInstance_4});
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_2() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function $serializer_5() {
    $serializer_instance_5 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Repository', this, 10);
    tmp0_serialDesc.y1k('id', false);
    tmp0_serialDesc.y1k('name', false);
    tmp0_serialDesc.y1k('private', false);
    tmp0_serialDesc.y1k('archived', false);
    tmp0_serialDesc.y1k('visibility', false);
    tmp0_serialDesc.y1k('topics', false);
    tmp0_serialDesc.y1k('url', false);
    tmp0_serialDesc.y1k('permissions', false);
    tmp0_serialDesc.y1k('owner', false);
    tmp0_serialDesc.y1k('default_branch', false);
    this.f23_1 = tmp0_serialDesc;
  }
  $serializer_5.prototype.i1b = function () {
    return this.f23_1;
  };
  $serializer_5.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), StringSerializer_getInstance(), BooleanSerializer_getInstance(), BooleanSerializer_getInstance(), StringSerializer_getInstance(), new LinkedHashSetSerializer(StringSerializer_getInstance()), StringSerializer_getInstance(), $serializer_getInstance_3(), $serializer_getInstance_4(), StringSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_5.prototype.k1b = function (decoder) {
    var tmp0_desc = this.f23_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_local2 = false;
    var tmp7_local3 = false;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_local6 = null;
    var tmp11_local7 = null;
    var tmp12_local8 = null;
    var tmp13_local9 = null;
    var tmp14_input = decoder.c1e(tmp0_desc);
    if (tmp14_input.q1e()) {
      tmp4_local0 = tmp14_input.h1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp14_input.m1e(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp14_input.e1e(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp14_input.e1e(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp14_input.m1e(tmp0_desc, 4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp14_input.n1e(tmp0_desc, 5, new LinkedHashSetSerializer(StringSerializer_getInstance()), tmp9_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp10_local6 = tmp14_input.m1e(tmp0_desc, 6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
      tmp11_local7 = tmp14_input.n1e(tmp0_desc, 7, $serializer_getInstance_3(), tmp11_local7);
      tmp3_bitMask0 = tmp3_bitMask0 | 128;
      tmp12_local8 = tmp14_input.n1e(tmp0_desc, 8, $serializer_getInstance_4(), tmp12_local8);
      tmp3_bitMask0 = tmp3_bitMask0 | 256;
      tmp13_local9 = tmp14_input.m1e(tmp0_desc, 9);
      tmp3_bitMask0 = tmp3_bitMask0 | 512;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp14_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp14_input.h1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp14_input.m1e(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp14_input.e1e(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp14_input.e1e(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp14_input.m1e(tmp0_desc, 4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp14_input.n1e(tmp0_desc, 5, new LinkedHashSetSerializer(StringSerializer_getInstance()), tmp9_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp10_local6 = tmp14_input.m1e(tmp0_desc, 6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          case 7:
            tmp11_local7 = tmp14_input.n1e(tmp0_desc, 7, $serializer_getInstance_3(), tmp11_local7);
            tmp3_bitMask0 = tmp3_bitMask0 | 128;
            break;
          case 8:
            tmp12_local8 = tmp14_input.n1e(tmp0_desc, 8, $serializer_getInstance_4(), tmp12_local8);
            tmp3_bitMask0 = tmp3_bitMask0 | 256;
            break;
          case 9:
            tmp13_local9 = tmp14_input.m1e(tmp0_desc, 9);
            tmp3_bitMask0 = tmp3_bitMask0 | 512;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp14_input.d1e(tmp0_desc);
    return Repository_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, tmp13_local9, null);
  };
  $serializer_5.prototype.g23 = function (encoder, value) {
    var tmp0_desc = this.f23_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.j1f(tmp0_desc, 0, value.h23_1);
    tmp1_output.o1f(tmp0_desc, 1, value.i23_1);
    tmp1_output.g1f(tmp0_desc, 2, value.j23_1);
    tmp1_output.g1f(tmp0_desc, 3, value.k23_1);
    tmp1_output.o1f(tmp0_desc, 4, value.l23_1);
    tmp1_output.p1f(tmp0_desc, 5, new LinkedHashSetSerializer(StringSerializer_getInstance()), value.m23_1);
    tmp1_output.o1f(tmp0_desc, 6, value.n23_1);
    tmp1_output.p1f(tmp0_desc, 7, $serializer_getInstance_3(), value.o23_1);
    tmp1_output.p1f(tmp0_desc, 8, $serializer_getInstance_4(), value.p23_1);
    tmp1_output.o1f(tmp0_desc, 9, value.q23_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_5.prototype.j1b = function (encoder, value) {
    return this.g23(encoder, value instanceof Repository ? value : THROW_CCE());
  };
  $serializer_5.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_5;
  function $serializer_getInstance_5() {
    if ($serializer_instance_5 == null)
      new $serializer_5();
    return $serializer_instance_5;
  }
  function Repository_init_$Init$(seen1, id, name, isPrivate, isArchived, visibility, topics, url, permissions, owner, defaultBranch, serializationConstructorMarker, $this) {
    if (!(1023 === (1023 & seen1)))
      throwMissingFieldException(seen1, 1023, $serializer_getInstance_5().f23_1);
    $this.h23_1 = id;
    $this.i23_1 = name;
    $this.j23_1 = isPrivate;
    $this.k23_1 = isArchived;
    $this.l23_1 = visibility;
    $this.m23_1 = topics;
    $this.n23_1 = url;
    $this.o23_1 = permissions;
    $this.p23_1 = owner;
    $this.q23_1 = defaultBranch;
    return $this;
  }
  function Repository_init_$Create$(seen1, id, name, isPrivate, isArchived, visibility, topics, url, permissions, owner, defaultBranch, serializationConstructorMarker) {
    return Repository_init_$Init$(seen1, id, name, isPrivate, isArchived, visibility, topics, url, permissions, owner, defaultBranch, serializationConstructorMarker, Object.create(Repository.prototype));
  }
  function $serializer_6() {
    $serializer_instance_6 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Environment.ProtectionRule', this, 2);
    tmp0_serialDesc.y1k('id', false);
    tmp0_serialDesc.y1k('type', false);
    this.r23_1 = tmp0_serialDesc;
  }
  $serializer_6.prototype.i1b = function () {
    return this.r23_1;
  };
  $serializer_6.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), StringSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_6.prototype.k1b = function (decoder) {
    var tmp0_desc = this.r23_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_input = decoder.c1e(tmp0_desc);
    if (tmp6_input.q1e()) {
      tmp4_local0 = tmp6_input.h1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.m1e(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.h1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.m1e(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.d1e(tmp0_desc);
    return ProtectionRule_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer_6.prototype.s23 = function (encoder, value) {
    var tmp0_desc = this.r23_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.j1f(tmp0_desc, 0, value.t23_1);
    tmp1_output.o1f(tmp0_desc, 1, value.u23_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_6.prototype.j1b = function (encoder, value) {
    return this.s23(encoder, value instanceof ProtectionRule ? value : THROW_CCE());
  };
  $serializer_6.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_6;
  function $serializer_getInstance_6() {
    if ($serializer_instance_6 == null)
      new $serializer_6();
    return $serializer_instance_6;
  }
  function ProtectionRule_init_$Init$(seen1, id, type, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1)))
      throwMissingFieldException(seen1, 3, $serializer_getInstance_6().r23_1);
    $this.t23_1 = id;
    $this.u23_1 = type;
    return $this;
  }
  function ProtectionRule_init_$Create$(seen1, id, type, serializationConstructorMarker) {
    return ProtectionRule_init_$Init$(seen1, id, type, serializationConstructorMarker, Object.create(ProtectionRule.prototype));
  }
  function $serializer_7() {
    $serializer_instance_7 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Environment.DeploymentBranchPolicy', this, 1);
    tmp0_serialDesc.y1k('protected_branches', false);
    this.v23_1 = tmp0_serialDesc;
  }
  $serializer_7.prototype.i1b = function () {
    return this.v23_1;
  };
  $serializer_7.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [BooleanSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_7.prototype.k1b = function (decoder) {
    var tmp0_desc = this.v23_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = false;
    var tmp5_input = decoder.c1e(tmp0_desc);
    if (tmp5_input.q1e()) {
      tmp4_local0 = tmp5_input.e1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.e1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.d1e(tmp0_desc);
    return DeploymentBranchPolicy_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_7.prototype.w23 = function (encoder, value) {
    var tmp0_desc = this.v23_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.g1f(tmp0_desc, 0, value.x23_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_7.prototype.j1b = function (encoder, value) {
    return this.w23(encoder, value instanceof DeploymentBranchPolicy ? value : THROW_CCE());
  };
  $serializer_7.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_7;
  function $serializer_getInstance_7() {
    if ($serializer_instance_7 == null)
      new $serializer_7();
    return $serializer_instance_7;
  }
  function DeploymentBranchPolicy_init_$Init$(seen1, protectedBranches, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1)))
      throwMissingFieldException(seen1, 1, $serializer_getInstance_7().v23_1);
    $this.x23_1 = protectedBranches;
    return $this;
  }
  function DeploymentBranchPolicy_init_$Create$(seen1, protectedBranches, serializationConstructorMarker) {
    return DeploymentBranchPolicy_init_$Init$(seen1, protectedBranches, serializationConstructorMarker, Object.create(DeploymentBranchPolicy.prototype));
  }
  function ProtectionRule() {
  }
  ProtectionRule.prototype.toString = function () {
    return 'ProtectionRule(id=' + this.t23_1 + ', type=' + this.u23_1 + ')';
  };
  ProtectionRule.prototype.hashCode = function () {
    var result = this.t23_1;
    result = imul(result, 31) + getStringHashCode(this.u23_1) | 0;
    return result;
  };
  ProtectionRule.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ProtectionRule))
      return false;
    var tmp0_other_with_cast = other instanceof ProtectionRule ? other : THROW_CCE();
    if (!(this.t23_1 === tmp0_other_with_cast.t23_1))
      return false;
    if (!(this.u23_1 === tmp0_other_with_cast.u23_1))
      return false;
    return true;
  };
  ProtectionRule.$metadata$ = classMeta('ProtectionRule', undefined, undefined, {0: $serializer_getInstance_6});
  function DeploymentBranchPolicy() {
  }
  DeploymentBranchPolicy.prototype.toString = function () {
    return 'DeploymentBranchPolicy(protectedBranches=' + this.x23_1 + ')';
  };
  DeploymentBranchPolicy.prototype.hashCode = function () {
    return this.x23_1 | 0;
  };
  DeploymentBranchPolicy.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DeploymentBranchPolicy))
      return false;
    var tmp0_other_with_cast = other instanceof DeploymentBranchPolicy ? other : THROW_CCE();
    if (!(this.x23_1 === tmp0_other_with_cast.x23_1))
      return false;
    return true;
  };
  DeploymentBranchPolicy.$metadata$ = classMeta('DeploymentBranchPolicy', undefined, undefined, {0: $serializer_getInstance_7});
  function $serializer_8() {
    $serializer_instance_8 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Environment', this, 4);
    tmp0_serialDesc.y1k('id', false);
    tmp0_serialDesc.y1k('name', false);
    tmp0_serialDesc.y1k('protection_rules', false);
    tmp0_serialDesc.y1k('deployment_branch_policy', true);
    this.y23_1 = tmp0_serialDesc;
  }
  $serializer_8.prototype.i1b = function () {
    return this.y23_1;
  };
  $serializer_8.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [IntSerializer_getInstance(), StringSerializer_getInstance(), new ArrayListSerializer($serializer_getInstance_6()), get_nullable($serializer_getInstance_7())];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_8.prototype.k1b = function (decoder) {
    var tmp0_desc = this.y23_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_input = decoder.c1e(tmp0_desc);
    if (tmp8_input.q1e()) {
      tmp4_local0 = tmp8_input.h1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp8_input.m1e(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp8_input.n1e(tmp0_desc, 2, new ArrayListSerializer($serializer_getInstance_6()), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp8_input.p1e(tmp0_desc, 3, $serializer_getInstance_7(), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp8_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp8_input.h1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp8_input.m1e(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp8_input.n1e(tmp0_desc, 2, new ArrayListSerializer($serializer_getInstance_6()), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp8_input.p1e(tmp0_desc, 3, $serializer_getInstance_7(), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp8_input.d1e(tmp0_desc);
    return Environment_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
  };
  $serializer_8.prototype.z23 = function (encoder, value) {
    var tmp0_desc = this.y23_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.j1f(tmp0_desc, 0, value.a24_1);
    tmp1_output.o1f(tmp0_desc, 1, value.b24_1);
    tmp1_output.p1f(tmp0_desc, 2, new ArrayListSerializer($serializer_getInstance_6()), value.c24_1);
    if (tmp1_output.v1f(tmp0_desc, 3) ? true : !(value.d24_1 == null))
      tmp1_output.r1f(tmp0_desc, 3, $serializer_getInstance_7(), value.d24_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_8.prototype.j1b = function (encoder, value) {
    return this.z23(encoder, value instanceof Environment ? value : THROW_CCE());
  };
  $serializer_8.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_8;
  function $serializer_getInstance_8() {
    if ($serializer_instance_8 == null)
      new $serializer_8();
    return $serializer_instance_8;
  }
  function Environment_init_$Init$(seen1, id, name, protectionRules, deploymentBranchPolicy, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1)))
      throwMissingFieldException(seen1, 7, $serializer_getInstance_8().y23_1);
    $this.a24_1 = id;
    $this.b24_1 = name;
    $this.c24_1 = protectionRules;
    if (0 === (seen1 & 8))
      $this.d24_1 = null;
    else
      $this.d24_1 = deploymentBranchPolicy;
    return $this;
  }
  function Environment_init_$Create$(seen1, id, name, protectionRules, deploymentBranchPolicy, serializationConstructorMarker) {
    return Environment_init_$Init$(seen1, id, name, protectionRules, deploymentBranchPolicy, serializationConstructorMarker, Object.create(Environment.prototype));
  }
  function $serializer_9() {
    $serializer_instance_9 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Branch', this, 2);
    tmp0_serialDesc.y1k('name', false);
    tmp0_serialDesc.y1k('protected', false);
    this.e24_1 = tmp0_serialDesc;
  }
  $serializer_9.prototype.i1b = function () {
    return this.e24_1;
  };
  $serializer_9.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [StringSerializer_getInstance(), BooleanSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_9.prototype.k1b = function (decoder) {
    var tmp0_desc = this.e24_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = false;
    var tmp6_input = decoder.c1e(tmp0_desc);
    if (tmp6_input.q1e()) {
      tmp4_local0 = tmp6_input.m1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.e1e(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.m1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.e1e(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.d1e(tmp0_desc);
    return Branch_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer_9.prototype.f24 = function (encoder, value) {
    var tmp0_desc = this.e24_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.o1f(tmp0_desc, 0, value.g24_1);
    tmp1_output.g1f(tmp0_desc, 1, value.h24_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_9.prototype.j1b = function (encoder, value) {
    return this.f24(encoder, value instanceof Branch ? value : THROW_CCE());
  };
  $serializer_9.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_9;
  function $serializer_getInstance_9() {
    if ($serializer_instance_9 == null)
      new $serializer_9();
    return $serializer_instance_9;
  }
  function Branch_init_$Init$(seen1, name, isProtected, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1)))
      throwMissingFieldException(seen1, 3, $serializer_getInstance_9().e24_1);
    $this.g24_1 = name;
    $this.h24_1 = isProtected;
    return $this;
  }
  function Branch_init_$Create$(seen1, name, isProtected, serializationConstructorMarker) {
    return Branch_init_$Init$(seen1, name, isProtected, serializationConstructorMarker, Object.create(Branch.prototype));
  }
  function Companion_2() {
    Companion_instance_2 = this;
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_3() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function $serializer_10() {
    $serializer_instance_10 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.Error', this, 2);
    tmp0_serialDesc.y1k('message', false);
    tmp0_serialDesc.y1k('documentation_url', true);
    this.i24_1 = tmp0_serialDesc;
  }
  $serializer_10.prototype.i1b = function () {
    return this.i24_1;
  };
  $serializer_10.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance())];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_10.prototype.k1b = function (decoder) {
    var tmp0_desc = this.i24_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_input = decoder.c1e(tmp0_desc);
    if (tmp6_input.q1e()) {
      tmp4_local0 = tmp6_input.m1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.p1e(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.m1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.p1e(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.d1e(tmp0_desc);
    return Error_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer_10.prototype.j24 = function (encoder, value) {
    var tmp0_desc = this.i24_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.o1f(tmp0_desc, 0, value.k24_1);
    if (tmp1_output.v1f(tmp0_desc, 1) ? true : !(value.l24_1 == null))
      tmp1_output.r1f(tmp0_desc, 1, StringSerializer_getInstance(), value.l24_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_10.prototype.j1b = function (encoder, value) {
    return this.j24(encoder, value instanceof Error_0 ? value : THROW_CCE());
  };
  $serializer_10.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_10;
  function $serializer_getInstance_10() {
    if ($serializer_instance_10 == null)
      new $serializer_10();
    return $serializer_instance_10;
  }
  function Error_init_$Init$(seen1, message, documentationUrl, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1)))
      throwMissingFieldException(seen1, 1, $serializer_getInstance_10().i24_1);
    $this.k24_1 = message;
    if (0 === (seen1 & 2))
      $this.l24_1 = null;
    else
      $this.l24_1 = documentationUrl;
    return $this;
  }
  function Error_init_$Create$(seen1, message, documentationUrl, serializationConstructorMarker) {
    return Error_init_$Init$(seen1, message, documentationUrl, serializationConstructorMarker, Object.create(Error_0.prototype));
  }
  function Companion_3() {
    Companion_instance_3 = this;
  }
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_4() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function $serializer_11() {
    $serializer_instance_11 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('github.Github.RepoTeamPutPermissionBody', this, 1);
    tmp0_serialDesc.y1k('permission', false);
    this.m24_1 = tmp0_serialDesc;
  }
  $serializer_11.prototype.i1b = function () {
    return this.m24_1;
  };
  $serializer_11.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [StringSerializer_getInstance()];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer_11.prototype.k1b = function (decoder) {
    var tmp0_desc = this.m24_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.c1e(tmp0_desc);
    if (tmp5_input.q1e()) {
      tmp4_local0 = tmp5_input.m1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.m1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.d1e(tmp0_desc);
    return RepoTeamPutPermissionBody_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_11.prototype.n24 = function (encoder, value) {
    var tmp0_desc = this.m24_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.o1f(tmp0_desc, 0, value.o24_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer_11.prototype.j1b = function (encoder, value) {
    return this.n24(encoder, value instanceof RepoTeamPutPermissionBody ? value : THROW_CCE());
  };
  $serializer_11.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance_11;
  function $serializer_getInstance_11() {
    if ($serializer_instance_11 == null)
      new $serializer_11();
    return $serializer_instance_11;
  }
  function RepoTeamPutPermissionBody_init_$Init$(seen1, permission, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1)))
      throwMissingFieldException(seen1, 1, $serializer_getInstance_11().m24_1);
    $this.o24_1 = permission;
    return $this;
  }
  function RepoTeamPutPermissionBody_init_$Create$(seen1, permission, serializationConstructorMarker) {
    return RepoTeamPutPermissionBody_init_$Init$(seen1, permission, serializationConstructorMarker, Object.create(RepoTeamPutPermissionBody.prototype));
  }
  function Github_init_$Init$(backend, defaultPageSize, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      defaultPageSize = 30;
    Github.call($this, backend, defaultPageSize);
    return $this;
  }
  function Github_init_$Create$(backend, defaultPageSize, $mask0, $marker) {
    return Github_init_$Init$(backend, defaultPageSize, $mask0, $marker, Object.create(Github.prototype));
  }
  function verifySuccessful($this, path, response, accept204) {
    if (response.p24_1 === 200) {
    } else {
      if (response.p24_1 === 204 ? accept204 : false) {
      } else {
        var tmp;
        if (!(response.q24_1 == null)) {
          var tmp$ret$1;
          {
            var tmp0_lowercase = response.q24_1;
            var tmp$ret$0;
            {
              tmp$ret$0 = tmp0_lowercase;
            }
            tmp$ret$1 = tmp$ret$0.toLowerCase();
          }
          var tmp_0 = tmp$ret$1;
          tmp = startsWith$default(tmp_0, 'application/json', false, 2, null);
        } else {
          tmp = false;
        }
        if (tmp) {
          var tmp$ret$4;
          {
            var tmp1_decodeFromString = $this.u24_1;
            var tmp2_decodeFromString = response.r24_1;
            var tmp$ret$3;
            {
              var tmp1_serializer = tmp1_decodeFromString.b1c();
              var tmp$ret$2;
              {
                var tmp0_cast = serializer(tmp1_serializer, createKType(getKClass(Error_0), arrayOf([]), false));
                tmp$ret$2 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
              }
              tmp$ret$3 = tmp$ret$2;
            }
            tmp$ret$4 = tmp1_decodeFromString.a1c(tmp$ret$3, tmp2_decodeFromString);
          }
          throw new GithubException(path, response.p24_1, tmp$ret$4);
        } else {
          {
            var tmp3_error = path + ': HTTP error ' + response.p24_1;
            throw IllegalStateException_init_$Create$(toString(tmp3_error));
          }
        }
      }
    }
  }
  function verifySuccessful$default($this, path, response, accept204, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      accept204 = false;
    return verifySuccessful($this, path, response, accept204);
  }
  function fetch($this, deserializer, path, $cont) {
    var tmp = new $fetchCOROUTINE$0($this, deserializer, path, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  }
  function delete_0($this, path, $cont) {
    var tmp = new $deleteCOROUTINE$1($this, path, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  }
  function put($this, path, body, serializer, $cont) {
    var tmp = new $putCOROUTINE$2($this, path, body, serializer, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  }
  function fetchPages($this, deserializer, path, pageSize) {
    return flow(Github$fetchPages$slambda_0($this, deserializer, path, pageSize, null));
  }
  function fetchCollection($this, deserializer, path, pageSize) {
    var tmp = fetchPages($this, deserializer, path, pageSize);
    return transformWhile(tmp, Github$fetchCollection$slambda_0(pageSize, null));
  }
  function User() {
  }
  User.prototype.toString = function () {
    return 'User(id=' + this.a22_1 + ', login=' + this.b22_1 + ', name=' + this.c22_1 + ', email=' + this.d22_1 + ')';
  };
  User.prototype.hashCode = function () {
    var result = this.a22_1;
    result = imul(result, 31) + getStringHashCode(this.b22_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.c22_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.d22_1) | 0;
    return result;
  };
  User.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof User))
      return false;
    var tmp0_other_with_cast = other instanceof User ? other : THROW_CCE();
    if (!(this.a22_1 === tmp0_other_with_cast.a22_1))
      return false;
    if (!(this.b22_1 === tmp0_other_with_cast.b22_1))
      return false;
    if (!(this.c22_1 === tmp0_other_with_cast.c22_1))
      return false;
    if (!(this.d22_1 === tmp0_other_with_cast.d22_1))
      return false;
    return true;
  };
  User.$metadata$ = classMeta('User', undefined, undefined, {0: $serializer_getInstance});
  function Organization(id, name) {
    Companion_getInstance_0();
    this.g22_1 = id;
    this.h22_1 = name;
  }
  Organization.prototype.toString = function () {
    return 'Organization(id=' + this.g22_1 + ', name=' + this.h22_1 + ')';
  };
  Organization.prototype.hashCode = function () {
    var result = this.g22_1;
    result = imul(result, 31) + getStringHashCode(this.h22_1) | 0;
    return result;
  };
  Organization.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Organization))
      return false;
    var tmp0_other_with_cast = other instanceof Organization ? other : THROW_CCE();
    if (!(this.g22_1 === tmp0_other_with_cast.g22_1))
      return false;
    if (!(this.h22_1 === tmp0_other_with_cast.h22_1))
      return false;
    return true;
  };
  Organization.$metadata$ = classMeta('Organization', undefined, undefined, {0: $serializer_getInstance_0});
  function Team(id, name, slug, permissions) {
    Companion_getInstance_1();
    this.k22_1 = id;
    this.l22_1 = name;
    this.m22_1 = slug;
    this.n22_1 = permissions;
  }
  Team.prototype.toString = function () {
    return 'Team(id=' + this.k22_1 + ', name=' + this.l22_1 + ', slug=' + this.m22_1 + ', permissions=' + this.n22_1 + ')';
  };
  Team.prototype.hashCode = function () {
    var result = this.k22_1;
    result = imul(result, 31) + getStringHashCode(this.l22_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.m22_1) | 0;
    result = imul(result, 31) + (this.n22_1 == null ? 0 : hashCode(this.n22_1)) | 0;
    return result;
  };
  Team.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Team))
      return false;
    var tmp0_other_with_cast = other instanceof Team ? other : THROW_CCE();
    if (!(this.k22_1 === tmp0_other_with_cast.k22_1))
      return false;
    if (!(this.l22_1 === tmp0_other_with_cast.l22_1))
      return false;
    if (!(this.m22_1 === tmp0_other_with_cast.m22_1))
      return false;
    if (!equals(this.n22_1, tmp0_other_with_cast.n22_1))
      return false;
    return true;
  };
  Team.$metadata$ = classMeta('Team', undefined, undefined, {0: $serializer_getInstance_1});
  function Artifact() {
  }
  Artifact.prototype.toString = function () {
    return 'Artifact(id=' + this.q22_1 + ', name=' + this.r22_1 + ', sizeInBytes=' + toString(this.s22_1) + ', isExpired=' + this.t22_1 + ', createdAt=' + this.u22_1 + ')';
  };
  Artifact.prototype.hashCode = function () {
    var result = this.q22_1;
    result = imul(result, 31) + getStringHashCode(this.r22_1) | 0;
    result = imul(result, 31) + this.s22_1.hashCode() | 0;
    result = imul(result, 31) + (this.t22_1 | 0) | 0;
    result = imul(result, 31) + hashCode(this.u22_1) | 0;
    return result;
  };
  Artifact.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Artifact))
      return false;
    var tmp0_other_with_cast = other instanceof Artifact ? other : THROW_CCE();
    if (!(this.q22_1 === tmp0_other_with_cast.q22_1))
      return false;
    if (!(this.r22_1 === tmp0_other_with_cast.r22_1))
      return false;
    if (!this.s22_1.equals(tmp0_other_with_cast.s22_1))
      return false;
    if (!(this.t22_1 === tmp0_other_with_cast.t22_1))
      return false;
    if (!equals(this.u22_1, tmp0_other_with_cast.u22_1))
      return false;
    return true;
  };
  Artifact.$metadata$ = classMeta('Artifact', undefined, undefined, {0: $serializer_getInstance_2});
  function Repository(id, name, isPrivate, isArchived, visibility, topics, url, permissions, owner, defaultBranch) {
    Companion_getInstance_2();
    this.h23_1 = id;
    this.i23_1 = name;
    this.j23_1 = isPrivate;
    this.k23_1 = isArchived;
    this.l23_1 = visibility;
    this.m23_1 = topics;
    this.n23_1 = url;
    this.o23_1 = permissions;
    this.p23_1 = owner;
    this.q23_1 = defaultBranch;
  }
  Repository.prototype.toString = function () {
    return 'Repository(id=' + this.h23_1 + ', name=' + this.i23_1 + ', isPrivate=' + this.j23_1 + ', isArchived=' + this.k23_1 + ', visibility=' + this.l23_1 + ', topics=' + this.m23_1 + ', url=' + this.n23_1 + ', permissions=' + this.o23_1 + ', owner=' + this.p23_1 + ', defaultBranch=' + this.q23_1 + ')';
  };
  Repository.prototype.hashCode = function () {
    var result = this.h23_1;
    result = imul(result, 31) + getStringHashCode(this.i23_1) | 0;
    result = imul(result, 31) + (this.j23_1 | 0) | 0;
    result = imul(result, 31) + (this.k23_1 | 0) | 0;
    result = imul(result, 31) + getStringHashCode(this.l23_1) | 0;
    result = imul(result, 31) + hashCode(this.m23_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.n23_1) | 0;
    result = imul(result, 31) + this.o23_1.hashCode() | 0;
    result = imul(result, 31) + this.p23_1.hashCode() | 0;
    result = imul(result, 31) + getStringHashCode(this.q23_1) | 0;
    return result;
  };
  Repository.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Repository))
      return false;
    var tmp0_other_with_cast = other instanceof Repository ? other : THROW_CCE();
    if (!(this.h23_1 === tmp0_other_with_cast.h23_1))
      return false;
    if (!(this.i23_1 === tmp0_other_with_cast.i23_1))
      return false;
    if (!(this.j23_1 === tmp0_other_with_cast.j23_1))
      return false;
    if (!(this.k23_1 === tmp0_other_with_cast.k23_1))
      return false;
    if (!(this.l23_1 === tmp0_other_with_cast.l23_1))
      return false;
    if (!equals(this.m23_1, tmp0_other_with_cast.m23_1))
      return false;
    if (!(this.n23_1 === tmp0_other_with_cast.n23_1))
      return false;
    if (!this.o23_1.equals(tmp0_other_with_cast.o23_1))
      return false;
    if (!this.p23_1.equals(tmp0_other_with_cast.p23_1))
      return false;
    if (!(this.q23_1 === tmp0_other_with_cast.q23_1))
      return false;
    return true;
  };
  Repository.$metadata$ = classMeta('Repository', undefined, undefined, {0: $serializer_getInstance_5});
  function Environment() {
  }
  Environment.prototype.toString = function () {
    return 'Environment(id=' + this.a24_1 + ', name=' + this.b24_1 + ', protectionRules=' + this.c24_1 + ', deploymentBranchPolicy=' + this.d24_1 + ')';
  };
  Environment.prototype.hashCode = function () {
    var result = this.a24_1;
    result = imul(result, 31) + getStringHashCode(this.b24_1) | 0;
    result = imul(result, 31) + hashCode(this.c24_1) | 0;
    result = imul(result, 31) + (this.d24_1 == null ? 0 : this.d24_1.hashCode()) | 0;
    return result;
  };
  Environment.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Environment))
      return false;
    var tmp0_other_with_cast = other instanceof Environment ? other : THROW_CCE();
    if (!(this.a24_1 === tmp0_other_with_cast.a24_1))
      return false;
    if (!(this.b24_1 === tmp0_other_with_cast.b24_1))
      return false;
    if (!equals(this.c24_1, tmp0_other_with_cast.c24_1))
      return false;
    if (!equals(this.d24_1, tmp0_other_with_cast.d24_1))
      return false;
    return true;
  };
  Environment.$metadata$ = classMeta('Environment', undefined, undefined, {0: $serializer_getInstance_8});
  function Branch() {
  }
  Branch.prototype.toString = function () {
    return 'Branch(name=' + this.g24_1 + ', isProtected=' + this.h24_1 + ')';
  };
  Branch.prototype.hashCode = function () {
    var result = getStringHashCode(this.g24_1);
    result = imul(result, 31) + (this.h24_1 | 0) | 0;
    return result;
  };
  Branch.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Branch))
      return false;
    var tmp0_other_with_cast = other instanceof Branch ? other : THROW_CCE();
    if (!(this.g24_1 === tmp0_other_with_cast.g24_1))
      return false;
    if (!(this.h24_1 === tmp0_other_with_cast.h24_1))
      return false;
    return true;
  };
  Branch.$metadata$ = classMeta('Branch', undefined, undefined, {0: $serializer_getInstance_9});
  function Error_0(message, documentationUrl) {
    Companion_getInstance_3();
    this.k24_1 = message;
    this.l24_1 = documentationUrl;
  }
  Error_0.prototype.toString = function () {
    return 'Error(message=' + this.k24_1 + ', documentationUrl=' + this.l24_1 + ')';
  };
  Error_0.prototype.hashCode = function () {
    var result = getStringHashCode(this.k24_1);
    result = imul(result, 31) + (this.l24_1 == null ? 0 : getStringHashCode(this.l24_1)) | 0;
    return result;
  };
  Error_0.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Error_0))
      return false;
    var tmp0_other_with_cast = other instanceof Error_0 ? other : THROW_CCE();
    if (!(this.k24_1 === tmp0_other_with_cast.k24_1))
      return false;
    if (!(this.l24_1 == tmp0_other_with_cast.l24_1))
      return false;
    return true;
  };
  Error_0.$metadata$ = classMeta('Error', undefined, undefined, {0: $serializer_getInstance_10});
  function RepoTeamPutPermissionBody(permission) {
    Companion_getInstance_4();
    this.o24_1 = permission;
  }
  RepoTeamPutPermissionBody.prototype.toString = function () {
    return 'RepoTeamPutPermissionBody(permission=' + this.o24_1 + ')';
  };
  RepoTeamPutPermissionBody.prototype.hashCode = function () {
    return getStringHashCode(this.o24_1);
  };
  RepoTeamPutPermissionBody.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof RepoTeamPutPermissionBody))
      return false;
    var tmp0_other_with_cast = other instanceof RepoTeamPutPermissionBody ? other : THROW_CCE();
    if (!(this.o24_1 === tmp0_other_with_cast.o24_1))
      return false;
    return true;
  };
  RepoTeamPutPermissionBody.$metadata$ = classMeta('RepoTeamPutPermissionBody', undefined, undefined, {0: $serializer_getInstance_11});
  function Github$jsonFormat$lambda() {
    return function ($this$Json) {
      $this$Json.t1s_1 = true;
      return Unit_getInstance();
    };
  }
  function Github$fetchPages$slambda(this$0, $deserializer, $path, $pageSize, resultContinuation) {
    this.k26_1 = this$0;
    this.l26_1 = $deserializer;
    this.m26_1 = $path;
    this.n26_1 = $pageSize;
    CoroutineImpl.call(this, resultContinuation);
  }
  Github$fetchPages$slambda.prototype.t26 = function ($this$flow, $cont) {
    var tmp = this.u26($this$flow, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  Github$fetchPages$slambda.prototype.dh = function (p1, $cont) {
    return this.t26((!(p1 == null) ? isInterface(p1, FlowCollector) : false) ? p1 : THROW_CCE(), $cont);
  };
  Github$fetchPages$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 6;
            this.p26_1 = 1;
            this.sg_1 = 1;
            continue $sm;
          case 1:
            if (false) {}

            this.tg_1 = 3;
            this.sg_1 = 2;
            var tmp_0;
            var tmp_1 = _Char___init__impl__6a9atx(63);
            if (contains$default(this.m26_1, tmp_1, false, 2, null)) {
              tmp_0 = _Char___init__impl__6a9atx(38);
            } else {
              tmp_0 = _Char___init__impl__6a9atx(63);
            }

            suspendResult = fetch(this.k26_1, this.l26_1, this.m26_1 + new Char(tmp_0) + 'page=' + this.p26_1 + '&per_page=' + this.n26_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.q26_1 = suspendResult;
            this.tg_1 = 6;
            this.sg_1 = 4;
            continue $sm;
          case 3:
            this.tg_1 = 6;
            var tmp_2 = this.vg_1;
            if (tmp_2 instanceof GithubException) {
              this.r26_1 = this.vg_1;
              var tmp_3 = this;
              if (this.r26_1.w26_1 === 404 ? this.p26_1 === 1 : false)
                return Unit_getInstance();
              throw this.r26_1;
            } else {
              throw this.vg_1;
            }

            break;
          case 4:
            this.tg_1 = 6;
            this.s26_1 = this.q26_1;
            this.sg_1 = 5;
            suspendResult = this.o26_1.wx(this.s26_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 5:
            this.p26_1 = this.p26_1 + 1 | 0;
            ;
            this.sg_1 = 1;
            continue $sm;
          case 6:
            throw this.vg_1;
          case 7:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.tg_1 === 6) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  Github$fetchPages$slambda.prototype.u26 = function ($this$flow, completion) {
    var i = new Github$fetchPages$slambda(this.k26_1, this.l26_1, this.m26_1, this.n26_1, completion);
    i.o26_1 = $this$flow;
    return i;
  };
  Github$fetchPages$slambda.$metadata$ = classMeta('Github$fetchPages$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function Github$fetchPages$slambda_0(this$0, $deserializer, $path, $pageSize, resultContinuation) {
    var i = new Github$fetchPages$slambda(this$0, $deserializer, $path, $pageSize, resultContinuation);
    var l = function ($this$flow, $cont) {
      return i.t26($this$flow, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function Github$fetchCollection$slambda($pageSize, resultContinuation) {
    this.g27_1 = $pageSize;
    CoroutineImpl.call(this, resultContinuation);
  }
  Github$fetchCollection$slambda.prototype.j27 = function ($this$transformWhile, page, $cont) {
    var tmp = this.k27($this$transformWhile, page, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  Github$fetchCollection$slambda.prototype.r6 = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, FlowCollector) : false) ? p1 : THROW_CCE();
    return this.j27(tmp, (!(p2 == null) ? isInterface(p2, Collection) : false) ? p2 : THROW_CCE(), $cont);
  };
  Github$fetchCollection$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = emitAll(this.h27_1, asFlow(this.i27_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return this.i27_1.g() === this.g27_1;
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  Github$fetchCollection$slambda.prototype.k27 = function ($this$transformWhile, page, completion) {
    var i = new Github$fetchCollection$slambda(this.g27_1, completion);
    i.h27_1 = $this$transformWhile;
    i.i27_1 = page;
    return i;
  };
  Github$fetchCollection$slambda.$metadata$ = classMeta('Github$fetchCollection$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function Github$fetchCollection$slambda_0($pageSize, resultContinuation) {
    var i = new Github$fetchCollection$slambda($pageSize, resultContinuation);
    var l = function ($this$transformWhile, page, $cont) {
      return i.j27($this$transformWhile, page, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function $fetchCOROUTINE$0(_this__u8e3s4, deserializer, path, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.d25_1 = _this__u8e3s4;
    this.e25_1 = deserializer;
    this.f25_1 = path;
  }
  $fetchCOROUTINE$0.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = this.d25_1.s24_1.l27('GET', this.f25_1, null, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var response = suspendResult;
            verifySuccessful$default(this.d25_1, this.f25_1, response, false, 8, null);
            return this.d25_1.u24_1.a1c(this.e25_1, response.r24_1);
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $fetchCOROUTINE$0.$metadata$ = classMeta('$fetchCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $deleteCOROUTINE$1(_this__u8e3s4, path, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.o25_1 = _this__u8e3s4;
    this.p25_1 = path;
  }
  $deleteCOROUTINE$1.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = this.o25_1.s24_1.l27('DELETE', this.p25_1, null, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var response = suspendResult;
            verifySuccessful(this.o25_1, this.p25_1, response, true);
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $deleteCOROUTINE$1.$metadata$ = classMeta('$deleteCOROUTINE$1', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $putCOROUTINE$2(_this__u8e3s4, path, body, serializer, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.y25_1 = _this__u8e3s4;
    this.z25_1 = path;
    this.a26_1 = body;
    this.b26_1 = serializer;
  }
  $putCOROUTINE$2.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = this.y25_1.s24_1.l27('PUT', this.z25_1, this.y25_1.u24_1.c1s(this.b26_1, this.a26_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var response = suspendResult;
            verifySuccessful(this.y25_1, this.z25_1, response, true);
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $putCOROUTINE$2.$metadata$ = classMeta('$putCOROUTINE$2', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $updateRepoTeamPermissionCOROUTINE$3(_this__u8e3s4, orgName, teamSlug, ownerName, repoName, permission, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.u27_1 = _this__u8e3s4;
    this.v27_1 = orgName;
    this.w27_1 = teamSlug;
    this.x27_1 = ownerName;
    this.y27_1 = repoName;
    this.z27_1 = permission;
  }
  $updateRepoTeamPermissionCOROUTINE$3.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            var tmp_0 = this;
            tmp_0.a28_1 = '/orgs/' + this.v27_1 + '/teams/' + this.w27_1 + '/repos/' + this.x27_1 + '/' + this.y27_1;
            var tmp_1 = this;
            tmp_1.b28_1 = new RepoTeamPutPermissionBody(this.z27_1);
            this.sg_1 = 1;
            var tmp_2 = this;
            tmp_2.c28_1 = serializer_0(createKType(getKClass(RepoTeamPutPermissionBody), arrayOf([]), false));
            var tmp_3 = this.c28_1;
            suspendResult = put(this.u27_1, this.a28_1, this.b28_1, isInterface(tmp_3, KSerializer) ? tmp_3 : THROW_CCE(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $updateRepoTeamPermissionCOROUTINE$3.$metadata$ = classMeta('$updateRepoTeamPermissionCOROUTINE$3', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function Github(backend, defaultPageSize) {
    this.s24_1 = backend;
    this.t24_1 = defaultPageSize;
    var tmp = this;
    tmp.u24_1 = Json$default(null, Github$jsonFormat$lambda(), 1, null);
  }
  Github.prototype.d28 = function (orgName, $cont) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_cast = serializer_0(createKType(getKClass(Organization), arrayOf([]), false));
        tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return fetch(this, tmp$ret$1, '/orgs/' + orgName, $cont);
  };
  Github.prototype.e28 = function (orgName, pageSize) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_cast = serializer_0(createKType(getKClass(Collection), arrayOf([createInvariantKTypeProjection(createKType(getKClass(Team), arrayOf([]), false))]), false));
        tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return fetchCollection(this, tmp$ret$1, '/orgs/' + orgName + '/teams', pageSize);
  };
  Github.prototype.f28 = function (org, pageSize) {
    return this.e28(org.h22_1, pageSize);
  };
  Github.prototype.g28 = function (org, pageSize, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      pageSize = this.t24_1;
    return this.f28(org, pageSize);
  };
  Github.prototype.h28 = function (orgName, teamSlug, pageSize) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_cast = serializer_0(createKType(getKClass(Collection), arrayOf([createInvariantKTypeProjection(createKType(getKClass(Repository), arrayOf([]), false))]), false));
        tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return fetchCollection(this, tmp$ret$1, '/orgs/' + orgName + '/teams/' + teamSlug + '/repos', pageSize);
  };
  Github.prototype.i28 = function (org, team, pageSize) {
    return this.h28(org.h22_1, team.m22_1, pageSize);
  };
  Github.prototype.j28 = function (org, team, pageSize, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      pageSize = this.t24_1;
    return this.i28(org, team, pageSize);
  };
  Github.prototype.k28 = function (ownerName, repoName, pageSize) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_cast = serializer_0(createKType(getKClass(Collection), arrayOf([createInvariantKTypeProjection(createKType(getKClass(Team), arrayOf([]), false))]), false));
        tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return fetchCollection(this, tmp$ret$1, '/repos/' + ownerName + '/' + repoName + '/teams', pageSize);
  };
  Github.prototype.l28 = function (repo, pageSize) {
    return this.k28(repo.p23_1.d23_1, repo.i23_1, pageSize);
  };
  Github.prototype.m28 = function (repo, pageSize, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      pageSize = this.t24_1;
    return this.l28(repo, pageSize);
  };
  Github.prototype.n28 = function (orgName, teamSlug, ownerName, repoName, $cont) {
    return delete_0(this, '/orgs/' + orgName + '/teams/' + teamSlug + '/repos/' + ownerName + '/' + repoName, $cont);
  };
  Github.prototype.o28 = function (orgName, teamSlug, repo, $cont) {
    return this.n28(orgName, teamSlug, repo.p23_1.d23_1, repo.i23_1, $cont);
  };
  Github.prototype.p28 = function (org, team, repo, $cont) {
    return this.o28(org.h22_1, team.m22_1, repo, $cont);
  };
  Github.prototype.q28 = function (orgName, teamSlug, ownerName, repoName, permission, $cont) {
    var tmp = new $updateRepoTeamPermissionCOROUTINE$3(this, orgName, teamSlug, ownerName, repoName, permission, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  Github.prototype.r28 = function (orgName, teamSlug, repo, permission, $cont) {
    return this.q28(orgName, teamSlug, repo.p23_1.d23_1, repo.i23_1, permission, $cont);
  };
  Github.prototype.s28 = function (orgName, team, repo, permission, $cont) {
    return this.r28(orgName, team.m22_1, repo, permission, $cont);
  };
  Github.prototype.t28 = function (org, team, repo, permission, $cont) {
    return this.s28(org.h22_1, team, repo, permission, $cont);
  };
  Github.$metadata$ = classMeta('Github');
  function useGithub(githubToken, block, $cont) {
    var tmp = new $useGithubCOROUTINE$4(githubToken, block, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  }
  function useGithub$default(githubToken, block, $cont, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      var tmp0_elvis_lhs = get_defaultGithubToken();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        throw IllegalStateException_init_$Create$('No GITHUB_TOKEN in environment');
      } else {
        tmp = tmp0_elvis_lhs;
      }
      githubToken = tmp;
    }
    return useGithub(githubToken, block, $cont);
  }
  function TextResponse(status, contentType, text) {
    this.p24_1 = status;
    this.q24_1 = contentType;
    this.r24_1 = text;
  }
  TextResponse.prototype.toString = function () {
    return 'TextResponse(status=' + this.p24_1 + ', contentType=' + this.q24_1 + ', text=' + this.r24_1 + ')';
  };
  TextResponse.prototype.hashCode = function () {
    var result = this.p24_1;
    result = imul(result, 31) + (this.q24_1 == null ? 0 : getStringHashCode(this.q24_1)) | 0;
    result = imul(result, 31) + getStringHashCode(this.r24_1) | 0;
    return result;
  };
  TextResponse.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof TextResponse))
      return false;
    var tmp0_other_with_cast = other instanceof TextResponse ? other : THROW_CCE();
    if (!(this.p24_1 === tmp0_other_with_cast.p24_1))
      return false;
    if (!(this.q24_1 == tmp0_other_with_cast.q24_1))
      return false;
    if (!(this.r24_1 === tmp0_other_with_cast.r24_1))
      return false;
    return true;
  };
  TextResponse.$metadata$ = classMeta('TextResponse');
  function GithubBackend() {
  }
  GithubBackend.$metadata$ = interfaceMeta('GithubBackend');
  function GithubException(path, statusCode, error) {
    RuntimeException_init_$Init$(!(error.l24_1 == null) ? path + ': [HTTP ' + statusCode + '] ' + error.k24_1 + ' (' + error.l24_1 + ')' : path + ': [HTTP ' + statusCode + '] ' + error.k24_1, this);
    this.v26_1 = path;
    this.w26_1 = statusCode;
    this.x26_1 = error;
    captureStack(this, GithubException);
  }
  GithubException.$metadata$ = classMeta('GithubException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function InstantSerializer() {
  }
  InstantSerializer.prototype.i1b = function () {
    return PrimitiveSerialDescriptor('instant', STRING_getInstance());
  };
  InstantSerializer.prototype.k1b = function (decoder) {
    return parseISOInstant(decoder.y1d());
  };
  InstantSerializer.prototype.j29 = function (encoder, value) {
    return encoder.e1f(value.toISOString());
  };
  InstantSerializer.prototype.j1b = function (encoder, value) {
    return this.j29(encoder, value instanceof Date ? value : THROW_CCE());
  };
  InstantSerializer.$metadata$ = classMeta('InstantSerializer', [KSerializer]);
  function get_defaultGithubToken() {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = github_Process_4jksas.env['GITHUB_TOKEN'];
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function useGithub$slambda($backend, resultContinuation) {
    this.s29_1 = $backend;
    CoroutineImpl.call(this, resultContinuation);
  }
  useGithub$slambda.prototype.e10 = function ($this$withContext, $cont) {
    var tmp = this.f10($this$withContext, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  useGithub$slambda.prototype.dh = function (p1, $cont) {
    return this.e10((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  useGithub$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = this.s29_1.i29(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  useGithub$slambda.prototype.f10 = function ($this$withContext, completion) {
    var i = new useGithub$slambda(this.s29_1, completion);
    i.t29_1 = $this$withContext;
    return i;
  };
  useGithub$slambda.$metadata$ = classMeta('useGithub$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function useGithub$slambda_0($backend, resultContinuation) {
    var i = new useGithub$slambda($backend, resultContinuation);
    var l = function ($this$withContext, $cont) {
      return i.e10($this$withContext, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function $useGithubCOROUTINE$4(githubToken, block, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.c29_1 = githubToken;
    this.d29_1 = block;
  }
  $useGithubCOROUTINE$4.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 7;
            this.e29_1 = createGithubBackend(this.c29_1);
            this.sg_1 = 1;
            continue $sm;
          case 1:
            this.tg_1 = 5;
            this.sg_1 = 2;
            suspendResult = this.d29_1(Github_init_$Create$(this.e29_1, 0, 2, null), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.f29_1 = suspendResult;
            this.tg_1 = 7;
            this.sg_1 = 3;
            continue $sm;
          case 3:
            this.g29_1 = this.f29_1;
            this.sg_1 = 4;
            var tmp_0 = NonCancellable_getInstance();
            suspendResult = withContext(tmp_0, useGithub$slambda_0(this.e29_1, null), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            return this.g29_1;
          case 5:
            this.tg_1 = 7;
            this.h29_1 = this.vg_1;
            this.sg_1 = 6;
            var tmp_1 = NonCancellable_getInstance();
            suspendResult = withContext(tmp_1, useGithub$slambda_0(this.e29_1, null), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            throw this.h29_1;
          case 7:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 7) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $useGithubCOROUTINE$4.$metadata$ = classMeta('$useGithubCOROUTINE$4', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function createGithubBackend(githubToken) {
    return new GithubJS(githubToken);
  }
  function parseISOInstant(input) {
    return new Date(input);
  }
  function _get_authorizationHeader__qz366t($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = authorizationHeader$factory();
      tmp$ret$0 = $this.w29_1.l1();
    }
    return tmp$ret$0;
  }
  function GithubJS$authorizationHeader$delegate$lambda(this$0) {
    return function () {
      var base64input = ':' + this$0.u29_1;
      var base64output = Buffer.from(base64input).toString('base64');
      return 'Basic ' + base64output;
    };
  }
  function resume$ref($boundThis) {
    var l = function (p0) {
      resume($boundThis, p0);
      return Unit_getInstance();
    };
    l.callableName = 'resume';
    return l;
  }
  function GithubJS$requestForText$lambda($cancellable) {
    return function (ex) {
      var tmp$ret$3;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = ex;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        var tmp0_resumeWithException = tmp$ret$1;
        var tmp$ret$2;
        {
          var tmp0_failure = Companion_getInstance();
          tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(tmp0_resumeWithException));
        }
        tmp$ret$3 = $cancellable.m3(tmp$ret$2);
      }
      return Unit_getInstance();
    };
  }
  function GithubJS$requestForText$lambda_0($req) {
    return function (ex) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = ex;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      $req.destroy(tmp$ret$1);
      return Unit_getInstance();
    };
  }
  function GithubJS$requestForText$lambda_1($chunks) {
    return function (chunk) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = chunk;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      var tmp0_plusAssign = tmp$ret$1;
      $chunks.c(tmp0_plusAssign);
      return Unit_getInstance();
    };
  }
  function GithubJS$requestForText$lambda_2($cancellable) {
    return function (err) {
      var tmp$ret$3;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = err;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        var tmp0_resumeWithException = tmp$ret$1;
        var tmp$ret$2;
        {
          var tmp0_failure = Companion_getInstance();
          tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(tmp0_resumeWithException));
        }
        tmp$ret$3 = $cancellable.m3(tmp$ret$2);
      }
      return Unit_getInstance();
    };
  }
  function GithubJS$requestForText$lambda_3($chunks, $cancellable) {
    return function (it) {
      var tmp$ret$2;
      {
        var tmp0_subject = $chunks.g();
        var tmp;
        switch (tmp0_subject) {
          case 0:
            tmp = '';
            break;
          case 1:
            tmp = $chunks.h(0).toString('utf-8');
            break;
          default:
            var tmp_0 = Buffer;
            var tmp$ret$0;
            {
              tmp$ret$0 = copyToArray($chunks);
            }

            tmp = tmp_0.concat(tmp$ret$0).toString('utf-8');
            break;
        }
        var tmp0_resume = tmp;
        var tmp$ret$1;
        {
          var tmp0_success = Companion_getInstance();
          tmp$ret$1 = _Result___init__impl__xyqfz8(tmp0_resume);
        }
        tmp$ret$2 = $cancellable.m3(tmp$ret$1);
      }
      return Unit_getInstance();
    };
  }
  function GithubJS$requestForText$lambda_4($res) {
    return function (ex) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = ex;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      $res.destroy(tmp$ret$1);
      return Unit_getInstance();
    };
  }
  function $requestForTextCOROUTINE$5(_this__u8e3s4, method, path, body, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.f2a_1 = _this__u8e3s4;
    this.g2a_1 = method;
    this.h2a_1 = path;
    this.i2a_1 = body;
  }
  $requestForTextCOROUTINE$5.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 3;
            var tmp_0 = this;
            tmp_0.j2a_1 = startsWith$default(this.h2a_1, '/', false, 2, null);
            if (!this.j2a_1) {
              var message = "path should start with '/': " + this.h2a_1;
              throw IllegalArgumentException_init_$Create$(toString(message));
            }

            var tmp_1 = this;
            var tmp_2 = this;
            var tmp1_unsafeCast = {};
            tmp_2.k2a_1 = tmp1_unsafeCast;
            var tmp_3 = this;
            var tmp0_unsafeCast = {};
            tmp_3.l2a_1 = tmp0_unsafeCast;
            this.l2a_1['User-Agent'] = 'github-repo-access/0.0';
            this.l2a_1['Accept'] = 'application/vnd.github.v3+json';
            this.l2a_1['Authorization'] = _get_authorizationHeader__qz366t(this.f2a_1);
            this.k2a_1.headers = this.l2a_1;
            this.k2a_1.method = this.g2a_1;
            tmp_1.m2a_1 = this.k2a_1;
            this.sg_1 = 1;
            var tmp_4 = this;
            tmp_4.n2a_1 = this;
            this.o2a_1 = new CancellableContinuationImpl(intercepted(this.n2a_1), get_MODE_CANCELLABLE());
            this.o2a_1.sm();
            var tmp_5 = this;
            var tmp_6 = github_Https_a0cnpc;
            var tmp_7 = 'https://api.github.com' + this.h2a_1;
            tmp_5.p2a_1 = tmp_6.request(tmp_7, this.m2a_1, resume$ref(this.o2a_1));
            this.p2a_1.on('error', GithubJS$requestForText$lambda(this.o2a_1));
            this.o2a_1.el(GithubJS$requestForText$lambda_0(this.p2a_1));
            if (!(this.i2a_1 == null)) {
              this.p2a_1.end(this.i2a_1, 'utf-8');
            } else {
              this.p2a_1.end();
            }

            suspendResult = returnIfSuspended(this.o2a_1.uk(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.q2a_1 = suspendResult;
            this.sg_1 = 2;
            var tmp_8 = this;
            tmp_8.r2a_1 = this;
            this.s2a_1 = new CancellableContinuationImpl(intercepted(this.r2a_1), get_MODE_CANCELLABLE());
            this.s2a_1.sm();
            var tmp_9 = this;
            tmp_9.t2a_1 = ArrayList_init_$Create$();
            this.q2a_1.on('data', GithubJS$requestForText$lambda_1(this.t2a_1));
            this.q2a_1.on('error', GithubJS$requestForText$lambda_2(this.s2a_1));
            this.q2a_1.on('end', GithubJS$requestForText$lambda_3(this.t2a_1, this.s2a_1));
            this.s2a_1.el(GithubJS$requestForText$lambda_4(this.q2a_1));
            suspendResult = returnIfSuspended(this.s2a_1.uk(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var text = suspendResult;
            var tmp_10 = numberToInt(this.q2a_1.statusCode);
            var tmp4_get = this.q2a_1.headers;
            var tmp3_unsafeCast = tmp4_get['content-type'];
            var tmp0_safe_receiver = tmp3_unsafeCast;
            return new TextResponse(tmp_10, tmp0_safe_receiver == null ? null : toString(tmp0_safe_receiver), text);
          case 3:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 3) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $requestForTextCOROUTINE$5.$metadata$ = classMeta('$requestForTextCOROUTINE$5', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function GithubJS(token) {
    this.u29_1 = token;
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_unsafeCast = {};
          tmp$ret$0 = tmp0_unsafeCast;
        }
        var tmp1_apply = tmp$ret$0;
        {
        }
        {
          tmp1_apply.keepAlive = true;
        }
        tmp$ret$1 = tmp1_apply;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    tmp.v29_1 = new github_Https_a0cnpc.Agent(tmp$ret$2);
    var tmp_0 = this;
    tmp_0.w29_1 = lazy(GithubJS$authorizationHeader$delegate$lambda(this));
  }
  GithubJS.prototype.l27 = function (method, path, body, $cont) {
    var tmp = new $requestForTextCOROUTINE$5(this, method, path, body, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  GithubJS.prototype.i29 = function ($cont) {
    this.v29_1.destroy();
    return Unit_getInstance();
  };
  GithubJS.$metadata$ = classMeta('GithubJS', [GithubBackend]);
  function jsObject(config) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = {};
        tmp$ret$0 = tmp0_unsafeCast;
      }
      var tmp1_apply = tmp$ret$0;
      {
      }
      config(tmp1_apply);
      tmp$ret$1 = tmp1_apply;
    }
    return tmp$ret$1;
  }
  function authorizationHeader$factory() {
    return getPropertyCallableRef('authorizationHeader', 1, KProperty1, function (receiver) {
      return _get_authorizationHeader__qz366t(receiver);
    }, null);
  }
  //region block: post-declaration
  $serializer.prototype.b1l = typeParametersSerializers;
  $serializer_0.prototype.b1l = typeParametersSerializers;
  $serializer_1.prototype.b1l = typeParametersSerializers;
  $serializer_2.prototype.b1l = typeParametersSerializers;
  $serializer_3.prototype.b1l = typeParametersSerializers;
  $serializer_4.prototype.b1l = typeParametersSerializers;
  $serializer_5.prototype.b1l = typeParametersSerializers;
  $serializer_6.prototype.b1l = typeParametersSerializers;
  $serializer_7.prototype.b1l = typeParametersSerializers;
  $serializer_8.prototype.b1l = typeParametersSerializers;
  $serializer_9.prototype.b1l = typeParametersSerializers;
  $serializer_10.prototype.b1l = typeParametersSerializers;
  $serializer_11.prototype.b1l = typeParametersSerializers;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = Artifact;
  _.$_$.b = Branch;
  _.$_$.c = Environment;
  _.$_$.d = Organization;
  _.$_$.e = Repository;
  _.$_$.f = Team;
  _.$_$.g = User;
  _.$_$.h = Github;
  _.$_$.i = useGithub$default;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(282), __nccwpck_require__(687), __nccwpck_require__(180), __nccwpck_require__(737), __nccwpck_require__(915), __nccwpck_require__(596)));

//# sourceMappingURL=repo-access-action-github-client.js.map

/***/ }),

/***/ 856:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, action_Filesystem_jaamil, $module$_actions_core_fx0i1v, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_repo_access_action_github_client, kotlin_repo_access_action_actions_toolkit, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var debug = $module$_actions_core_fx0i1v.debug;
  var info = $module$_actions_core_fx0i1v.info;
  var notice = $module$_actions_core_fx0i1v.notice;
  var warning = $module$_actions_core_fx0i1v.warning;
  var error = $module$_actions_core_fx0i1v.error;
  var objectMeta = kotlin_kotlin.$_$.r7;
  var PluginGeneratedSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a2;
  var StringSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o;
  var LinkedHashMapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x1;
  var LinkedHashSetSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y1;
  var Unit_getInstance = kotlin_kotlin.$_$.m3;
  var UnknownFieldException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d;
  var THROW_CCE = kotlin_kotlin.$_$.k9;
  var typeParametersSerializers = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v1;
  var GeneratedSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w1;
  var throwMissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d2;
  var getStringHashCode = kotlin_kotlin.$_$.z6;
  var hashCode = kotlin_kotlin.$_$.a7;
  var equals = kotlin_kotlin.$_$.w6;
  var classMeta = kotlin_kotlin.$_$.u6;
  var Enum = kotlin_kotlin.$_$.c9;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.y;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.a1;
  var toString = kotlin_kotlin.$_$.v7;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.p1;
  var mapCapacity = kotlin_kotlin.$_$.d5;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.x;
  var Companion_getInstance = kotlin_kotlin.$_$.h3;
  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.f2;
  var createFailure = kotlin_kotlin.$_$.v9;
  var CoroutineImpl = kotlin_kotlin.$_$.h6;
  var intercepted = kotlin_kotlin.$_$.u5;
  var SafeContinuation_init_$Create$ = kotlin_kotlin.$_$.g1;
  var returnIfSuspended = kotlin_kotlin.$_$.g;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.s5;
  var List = kotlin_kotlin.$_$.v3;
  var getKClass = kotlin_kotlin.$_$.e;
  var arrayOf = kotlin_kotlin.$_$.t9;
  var createKType = kotlin_kotlin.$_$.b;
  var createInvariantKTypeProjection = kotlin_kotlin.$_$.a;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p2;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i2;
  var isInterface = kotlin_kotlin.$_$.j7;
  var Json$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var coerceAtLeast = kotlin_kotlin.$_$.w7;
  var joinToString$default = kotlin_kotlin.$_$.j;
  var User = kotlin_repo_access_action_github_client.$_$.g;
  var Artifact = kotlin_repo_access_action_github_client.$_$.a;
  var Branch = kotlin_repo_access_action_github_client.$_$.b;
  var Organization = kotlin_repo_access_action_github_client.$_$.d;
  var Team = kotlin_repo_access_action_github_client.$_$.f;
  var Environment = kotlin_repo_access_action_github_client.$_$.c;
  var Repository = kotlin_repo_access_action_github_client.$_$.e;
  var runAction$default = kotlin_repo_access_action_actions_toolkit.$_$.b;
  var flatMapMerge = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.k;
  var collect = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.a;
  var interfaceMeta = kotlin_kotlin.$_$.b7;
  var sequence = kotlin_kotlin.$_$.e8;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var Flow = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.i;
  var toList$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.d;
  var FlowCollector = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.h;
  var Github = kotlin_repo_access_action_github_client.$_$.h;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.p;
  var getInput$default = kotlin_repo_access_action_actions_toolkit.$_$.a;
  var useGithub$default = kotlin_repo_access_action_github_client.$_$.i;
  var isObject = kotlin_kotlin.$_$.l7;
  var flow = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.l;
  var SequenceScope = kotlin_kotlin.$_$.d8;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.p;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.e4;
  var to = kotlin_kotlin.$_$.ha;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.u1;
  var listOf = kotlin_kotlin.$_$.c5;
  var SuspendFunction1 = kotlin_kotlin.$_$.i6;
  var NoSuchElementException_init_$Create$_0 = kotlin_kotlin.$_$.s1;
  var Iterator = kotlin_kotlin.$_$.s3;
  var Comparator = kotlin_kotlin.$_$.z8;
  var compareValues = kotlin_kotlin.$_$.q5;
  var sortedWith = kotlin_kotlin.$_$.j5;
  var compareTo = kotlin_kotlin.$_$.v6;
  //endregion
  //region block: pre-declaration
  AccessType.prototype = Object.create(Enum.prototype);
  AccessType.prototype.constructor = AccessType;
  $readAccessConfigFileCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $readAccessConfigFileCOROUTINE$0.prototype.constructor = $readAccessConfigFileCOROUTINE$0;
  main$slambda$slambda$o$collect$slambda.prototype = Object.create(CoroutineImpl.prototype);
  main$slambda$slambda$o$collect$slambda.prototype.constructor = main$slambda$slambda$o$collect$slambda;
  $collectCOROUTINE$1.prototype = Object.create(CoroutineImpl.prototype);
  $collectCOROUTINE$1.prototype.constructor = $collectCOROUTINE$1;
  main$slambda$slambda$slambda.prototype = Object.create(CoroutineImpl.prototype);
  main$slambda$slambda$slambda.prototype.constructor = main$slambda$slambda$slambda;
  main$slambda$slambda.prototype = Object.create(CoroutineImpl.prototype);
  main$slambda$slambda.prototype.constructor = main$slambda$slambda;
  main$slambda.prototype = Object.create(CoroutineImpl.prototype);
  main$slambda.prototype.constructor = main$slambda;
  collectConcurrently$slambda$slambda.prototype = Object.create(CoroutineImpl.prototype);
  collectConcurrently$slambda$slambda.prototype.constructor = collectConcurrently$slambda$slambda;
  collectConcurrently$slambda.prototype = Object.create(CoroutineImpl.prototype);
  collectConcurrently$slambda.prototype.constructor = collectConcurrently$slambda;
  syncRepoAccess$slambda.prototype = Object.create(CoroutineImpl.prototype);
  syncRepoAccess$slambda.prototype.constructor = syncRepoAccess$slambda;
  State.prototype = Object.create(Enum.prototype);
  State.prototype.constructor = State;
  mergeMaps$slambda.prototype = Object.create(CoroutineImpl.prototype);
  mergeMaps$slambda.prototype.constructor = mergeMaps$slambda;
  //endregion
  function get_jsonFormat() {
    init_properties_AccessConfig_kt_d2hnxo();
    return jsonFormat;
  }
  var jsonFormat;
  function get_accessTypeNames() {
    init_properties_AccessConfig_kt_d2hnxo();
    return accessTypeNames;
  }
  var accessTypeNames;
  function Companion() {
    Companion_instance = this;
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_0() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function $serializer() {
    $serializer_instance = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('action.RepositoryGroup', this, 3);
    tmp0_serialDesc.y1k('description', false);
    tmp0_serialDesc.y1k('teams', false);
    tmp0_serialDesc.y1k('repos', false);
    this.x2a_1 = tmp0_serialDesc;
  }
  $serializer.prototype.i1b = function () {
    return this.x2a_1;
  };
  $serializer.prototype.a1l = function () {
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [StringSerializer_getInstance(), new LinkedHashMapSerializer(StringSerializer_getInstance(), StringSerializer_getInstance()), new LinkedHashSetSerializer(StringSerializer_getInstance())];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  $serializer.prototype.k1b = function (decoder) {
    var tmp0_desc = this.x2a_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_input = decoder.c1e(tmp0_desc);
    if (tmp7_input.q1e()) {
      tmp4_local0 = tmp7_input.m1e(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.n1e(tmp0_desc, 1, new LinkedHashMapSerializer(StringSerializer_getInstance(), StringSerializer_getInstance()), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.n1e(tmp0_desc, 2, new LinkedHashSetSerializer(StringSerializer_getInstance()), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.r1e(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.m1e(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.n1e(tmp0_desc, 1, new LinkedHashMapSerializer(StringSerializer_getInstance(), StringSerializer_getInstance()), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.n1e(tmp0_desc, 2, new LinkedHashSetSerializer(StringSerializer_getInstance()), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.d1e(tmp0_desc);
    return RepositoryGroup_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  $serializer.prototype.y2a = function (encoder, value) {
    var tmp0_desc = this.x2a_1;
    var tmp1_output = encoder.c1e(tmp0_desc);
    tmp1_output.o1f(tmp0_desc, 0, value.z2a_1);
    tmp1_output.p1f(tmp0_desc, 1, new LinkedHashMapSerializer(StringSerializer_getInstance(), StringSerializer_getInstance()), value.a2b_1);
    tmp1_output.p1f(tmp0_desc, 2, new LinkedHashSetSerializer(StringSerializer_getInstance()), value.b2b_1);
    tmp1_output.d1e(tmp0_desc);
  };
  $serializer.prototype.j1b = function (encoder, value) {
    return this.y2a(encoder, value instanceof RepositoryGroup ? value : THROW_CCE());
  };
  $serializer.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance;
  function $serializer_getInstance() {
    if ($serializer_instance == null)
      new $serializer();
    return $serializer_instance;
  }
  function RepositoryGroup_init_$Init$(seen1, description, teams, repos, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1)))
      throwMissingFieldException(seen1, 7, $serializer_getInstance().x2a_1);
    $this.z2a_1 = description;
    $this.a2b_1 = teams;
    $this.b2b_1 = repos;
    return $this;
  }
  function RepositoryGroup_init_$Create$(seen1, description, teams, repos, serializationConstructorMarker) {
    return RepositoryGroup_init_$Init$(seen1, description, teams, repos, serializationConstructorMarker, Object.create(RepositoryGroup.prototype));
  }
  function RepositoryGroup(description, teams, repos) {
    Companion_getInstance_0();
    this.z2a_1 = description;
    this.a2b_1 = teams;
    this.b2b_1 = repos;
  }
  RepositoryGroup.prototype.c2b = function () {
    return this.z2a_1;
  };
  RepositoryGroup.prototype.d2b = function () {
    return this.a2b_1;
  };
  RepositoryGroup.prototype.e2b = function () {
    return this.b2b_1;
  };
  RepositoryGroup.prototype.toString = function () {
    return 'RepositoryGroup(description=' + this.z2a_1 + ', teams=' + this.a2b_1 + ', repos=' + this.b2b_1 + ')';
  };
  RepositoryGroup.prototype.hashCode = function () {
    var result = getStringHashCode(this.z2a_1);
    result = imul(result, 31) + hashCode(this.a2b_1) | 0;
    result = imul(result, 31) + hashCode(this.b2b_1) | 0;
    return result;
  };
  RepositoryGroup.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof RepositoryGroup))
      return false;
    var tmp0_other_with_cast = other instanceof RepositoryGroup ? other : THROW_CCE();
    if (!(this.z2a_1 === tmp0_other_with_cast.z2a_1))
      return false;
    if (!equals(this.a2b_1, tmp0_other_with_cast.a2b_1))
      return false;
    if (!equals(this.b2b_1, tmp0_other_with_cast.b2b_1))
      return false;
    return true;
  };
  RepositoryGroup.$metadata$ = classMeta('RepositoryGroup', undefined, undefined, {0: $serializer_getInstance});
  function readAccessConfigFile(filename, $cont) {
    var tmp = new $readAccessConfigFileCOROUTINE$0(filename, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  }
  var AccessType_ADMIN_instance;
  var AccessType_MAINTAIN_instance;
  var AccessType_TRIAGE_instance;
  var AccessType_PUSH_instance;
  var AccessType_PULL_instance;
  function values() {
    return [AccessType_ADMIN_getInstance(), AccessType_MAINTAIN_getInstance(), AccessType_TRIAGE_getInstance(), AccessType_PUSH_getInstance(), AccessType_PULL_getInstance()];
  }
  var AccessType_entriesInitialized;
  function AccessType_initEntries() {
    if (AccessType_entriesInitialized)
      return Unit_getInstance();
    AccessType_entriesInitialized = true;
    AccessType_ADMIN_instance = new AccessType('ADMIN', 0);
    AccessType_MAINTAIN_instance = new AccessType('MAINTAIN', 1);
    AccessType_TRIAGE_instance = new AccessType('TRIAGE', 2);
    AccessType_PUSH_instance = new AccessType('PUSH', 3);
    AccessType_PULL_instance = new AccessType('PULL', 4);
  }
  function AccessType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  AccessType.prototype.s2b = function () {
    var tmp$ret$1;
    {
      var tmp0_lowercase = this.tf();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_lowercase;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    return tmp$ret$1;
  };
  AccessType.$metadata$ = classMeta('AccessType', undefined, undefined, undefined, undefined, Enum.prototype);
  function RepoAccessConfig(teams) {
    this.t2b_1 = teams;
  }
  RepoAccessConfig.prototype.toString = function () {
    return 'RepoAccessConfig(teams=' + this.t2b_1 + ')';
  };
  RepoAccessConfig.prototype.hashCode = function () {
    return hashCode(this.t2b_1);
  };
  RepoAccessConfig.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof RepoAccessConfig))
      return false;
    var tmp0_other_with_cast = other instanceof RepoAccessConfig ? other : THROW_CCE();
    if (!equals(this.t2b_1, tmp0_other_with_cast.t2b_1))
      return false;
    return true;
  };
  RepoAccessConfig.$metadata$ = classMeta('RepoAccessConfig');
  function invertAccessConfig(accessConfig) {
    init_properties_AccessConfig_kt_d2hnxo();
    var tmp$ret$10;
    {
      {
      }
      var tmp$ret$9;
      {
        var tmp$ret$8;
        {
          var tmp0_apply = LinkedHashMap_init_$Create$();
          {
          }
          {
            var tmp$ret$0;
            {
              tmp$ret$0 = LinkedHashSet_init_$Create$();
            }
            var seenRepos = tmp$ret$0;
            var tmp0_iterator = accessConfig.d();
            while (tmp0_iterator.e()) {
              var level = tmp0_iterator.f();
              var tmp1_iterator = level.b2b_1.d();
              while (tmp1_iterator.e()) {
                var repo = tmp1_iterator.f();
                if (!seenRepos.c(repo)) {
                  {
                    var tmp0_error = 'Repo "' + repo + '" listed twice';
                    throw IllegalStateException_init_$Create$(toString(tmp0_error));
                  }
                }
                var tmp$ret$7;
                {
                  var tmp1_mapValues = level.a2b_1;
                  var tmp$ret$6;
                  {
                    var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp1_mapValues.g()));
                    var tmp$ret$5;
                    {
                      var tmp0_associateByTo = tmp1_mapValues.j();
                      var tmp0_iterator_0 = tmp0_associateByTo.d();
                      while (tmp0_iterator_0.e()) {
                        var element = tmp0_iterator_0.f();
                        var tmp$ret$1;
                        {
                          tmp$ret$1 = element.j1();
                        }
                        var tmp = tmp$ret$1;
                        var tmp$ret$4;
                        {
                          var tmp$ret$2;
                          {
                            tmp$ret$2 = element.j1();
                          }
                          var team = tmp$ret$2;
                          var tmp$ret$3;
                          {
                            tmp$ret$3 = element.l1();
                          }
                          var accessTypeString = tmp$ret$3;
                          var tmp0_elvis_lhs = get_accessTypeNames().v1(accessTypeString);
                          var tmp_0;
                          if (tmp0_elvis_lhs == null) {
                            var tmp0_error_0 = 'Unrecognised access type "' + accessTypeString + '" for "' + team + '" in "' + level.z2a_1 + '"';
                            throw IllegalStateException_init_$Create$(toString(tmp0_error_0));
                          } else {
                            tmp_0 = tmp0_elvis_lhs;
                          }
                          tmp$ret$4 = tmp_0;
                        }
                        tmp1_mapValuesTo.a(tmp, tmp$ret$4);
                      }
                      tmp$ret$5 = tmp1_mapValuesTo;
                    }
                    tmp$ret$6 = tmp$ret$5;
                  }
                  tmp$ret$7 = tmp$ret$6;
                }
                tmp0_apply.a(repo, new RepoAccessConfig(tmp$ret$7));
              }
            }
          }
          tmp$ret$8 = tmp0_apply;
        }
        tmp$ret$9 = tmp$ret$8.x2();
      }
      tmp$ret$10 = tmp$ret$9;
    }
    return tmp$ret$10;
  }
  function jsonFormat$lambda() {
    return function ($this$Json) {
      $this$Json.t1s_1 = true;
      return Unit_getInstance();
    };
  }
  function readAccessConfigFile$lambda($safe) {
    return function (ex, data) {
      var tmp;
      if (!(ex == null)) {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_failure = Companion_getInstance();
            tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(ex));
          }
          tmp$ret$1 = $safe.m3(tmp$ret$0);
        }
        tmp = tmp$ret$1;
      } else {
        var tmp$ret$5;
        {
          var tmp$ret$3;
          {
            var tmp$ret$2;
            {
              tmp$ret$2 = data;
            }
            tmp$ret$3 = tmp$ret$2;
          }
          var tmp0_resume = tmp$ret$3;
          var tmp$ret$4;
          {
            var tmp0_success = Companion_getInstance();
            tmp$ret$4 = _Result___init__impl__xyqfz8(tmp0_resume);
          }
          tmp$ret$5 = $safe.m3(tmp$ret$4);
        }
        tmp = tmp$ret$5;
      }
      return Unit_getInstance();
    };
  }
  function AccessType_ADMIN_getInstance() {
    AccessType_initEntries();
    return AccessType_ADMIN_instance;
  }
  function AccessType_MAINTAIN_getInstance() {
    AccessType_initEntries();
    return AccessType_MAINTAIN_instance;
  }
  function AccessType_TRIAGE_getInstance() {
    AccessType_initEntries();
    return AccessType_TRIAGE_instance;
  }
  function AccessType_PUSH_getInstance() {
    AccessType_initEntries();
    return AccessType_PUSH_instance;
  }
  function AccessType_PULL_getInstance() {
    AccessType_initEntries();
    return AccessType_PULL_instance;
  }
  function $readAccessConfigFileCOROUTINE$0(filename, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.n2b_1 = filename;
  }
  $readAccessConfigFileCOROUTINE$0.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            var tmp_0 = this;
            tmp_0.o2b_1 = this;
            this.p2b_1 = SafeContinuation_init_$Create$(intercepted(this.o2b_1));
            var tmp_1 = action_Filesystem_jaamil;
            tmp_1.readFile(this.n2b_1, 'utf-8', readAccessConfigFile$lambda(this.p2b_1));
            suspendResult = returnIfSuspended(this.p2b_1.tc(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fileText = suspendResult;
            var tmp0_decodeFromString = get_jsonFormat();
            var tmp1_serializer = tmp0_decodeFromString.b1c();
            var tmp0_cast = serializer(tmp1_serializer, createKType(getKClass(List), arrayOf([createInvariantKTypeProjection(createKType(getKClass(RepositoryGroup), arrayOf([]), false))]), false));
            return tmp0_decodeFromString.a1c(isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE(), fileText);
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $readAccessConfigFileCOROUTINE$0.$metadata$ = classMeta('$readAccessConfigFileCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  var properties_initialized_AccessConfig_kt_a0aoqg;
  function init_properties_AccessConfig_kt_d2hnxo() {
    if (properties_initialized_AccessConfig_kt_a0aoqg) {
    } else {
      properties_initialized_AccessConfig_kt_a0aoqg = true;
      jsonFormat = Json$default(null, jsonFormat$lambda(), 1, null);
      var tmp$ret$2;
      {
        var tmp0_associateBy = values();
        var capacity = coerceAtLeast(mapCapacity(tmp0_associateBy.length), 16);
        var tmp$ret$1;
        {
          var tmp0_associateByTo = LinkedHashMap_init_$Create$_0(capacity);
          var indexedObject = tmp0_associateBy;
          var inductionVariable = 0;
          var last = indexedObject.length;
          while (inductionVariable < last) {
            var element = indexedObject[inductionVariable];
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$0;
            {
              tmp$ret$0 = element.s2b();
            }
            tmp0_associateByTo.a(tmp$ret$0, element);
          }
          tmp$ret$1 = tmp0_associateByTo;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      accessTypeNames = tmp$ret$2;
    }
  }
  function composeMessage($this, parts) {
    return joinToString$default(parts, ': ', null, null, 0, null, GithubMessages$composeMessage$lambda(), 30, null);
  }
  function GithubMessages$composeMessage$lambda() {
    return function (it) {
      var tmp0_subject = it;
      var tmp;
      if (tmp0_subject instanceof Repository) {
        tmp = 'repo "' + it.p23_1.d23_1 + '/' + it.i23_1 + '"';
      } else {
        if (tmp0_subject instanceof Environment) {
          tmp = 'environment "' + it.b24_1 + '"';
        } else {
          if (tmp0_subject instanceof Team) {
            tmp = 'team "' + it.m22_1 + '"';
          } else {
            if (tmp0_subject instanceof Organization) {
              tmp = 'org "' + it.h22_1 + '"';
            } else {
              if (tmp0_subject instanceof Branch) {
                tmp = 'branch "' + it.g24_1 + '"';
              } else {
                if (tmp0_subject instanceof Artifact) {
                  tmp = 'artifact "' + it.r22_1 + '"';
                } else {
                  if (tmp0_subject instanceof User) {
                    tmp = 'user "' + it.b22_1 + '"';
                  } else {
                    tmp = toString(it);
                  }
                }
              }
            }
          }
        }
      }
      return tmp;
    };
  }
  function GithubMessages() {
    GithubMessages_instance = this;
  }
  GithubMessages.prototype.u2b = function (parts) {
    debug(composeMessage(this, parts));
  };
  GithubMessages.prototype.v2b = function (parts) {
    info(composeMessage(this, parts));
  };
  GithubMessages.prototype.w2b = function (parts) {
    notice(composeMessage(this, parts));
  };
  GithubMessages.prototype.x2b = function (parts) {
    warning(composeMessage(this, parts));
  };
  GithubMessages.prototype.y2b = function (parts) {
    error(composeMessage(this, parts));
  };
  GithubMessages.$metadata$ = objectMeta('GithubMessages');
  var GithubMessages_instance;
  function GithubMessages_getInstance() {
    if (GithubMessages_instance == null)
      new GithubMessages();
    return GithubMessages_instance;
  }
  function get_rankedAccessTypes() {
    init_properties_Main_kt_x4808v();
    return rankedAccessTypes;
  }
  var rankedAccessTypes;
  function main() {
    init_properties_Main_kt_x4808v();
    runAction$default(null, main$slambda_0(null), 1, null);
  }
  function collectConcurrently(_this__u8e3s4, concurrency, target, $cont) {
    return collect(flatMapMerge(_this__u8e3s4, concurrency, collectConcurrently$slambda_0(target, null)), $cont);
  }
  function RemoveTeam(team) {
    this.z2b_1 = team;
  }
  RemoveTeam.prototype.toString = function () {
    return 'RemoveTeam(team=' + this.z2b_1 + ')';
  };
  RemoveTeam.prototype.hashCode = function () {
    return this.z2b_1.hashCode();
  };
  RemoveTeam.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof RemoveTeam))
      return false;
    var tmp0_other_with_cast = other instanceof RemoveTeam ? other : THROW_CCE();
    if (!this.z2b_1.equals(tmp0_other_with_cast.z2b_1))
      return false;
    return true;
  };
  RemoveTeam.$metadata$ = classMeta('RemoveTeam', [RepoCommand]);
  function SetTeamPermission(team, accessType) {
    this.a2c_1 = team;
    this.b2c_1 = accessType;
  }
  SetTeamPermission.prototype.toString = function () {
    return 'SetTeamPermission(team=' + this.a2c_1 + ', accessType=' + this.b2c_1 + ')';
  };
  SetTeamPermission.prototype.hashCode = function () {
    var result = this.a2c_1.hashCode();
    result = imul(result, 31) + this.b2c_1.hashCode() | 0;
    return result;
  };
  SetTeamPermission.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SetTeamPermission))
      return false;
    var tmp0_other_with_cast = other instanceof SetTeamPermission ? other : THROW_CCE();
    if (!this.a2c_1.equals(tmp0_other_with_cast.a2c_1))
      return false;
    if (!this.b2c_1.equals(tmp0_other_with_cast.b2c_1))
      return false;
    return true;
  };
  SetTeamPermission.$metadata$ = classMeta('SetTeamPermission', [RepoCommand]);
  function RepoCommand() {
  }
  RepoCommand.$metadata$ = interfaceMeta('RepoCommand');
  function syncRepoAccess(orgTeams, repo, repoTeams, mainTeam, repoAccessConfig) {
    init_properties_Main_kt_x4808v();
    return sequence(syncRepoAccess$slambda_0(repoTeams, mainTeam, repoAccessConfig, orgTeams, repo, null));
  }
  function toAccessType(_this__u8e3s4) {
    init_properties_Main_kt_x4808v();
    var populatedPermissions = _this__u8e3s4.n22_1;
    {
      var tmp0_require = !(populatedPermissions == null);
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Team must have permissions populated';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var tmp0_iterator = get_rankedAccessTypes().d();
    while (tmp0_iterator.e()) {
      var accessType = tmp0_iterator.f();
      if (populatedPermissions.v1(accessType.s2b()) === true) {
        return accessType;
      }
    }
    return null;
  }
  function filterValuesNotNull(_this__u8e3s4) {
    init_properties_Main_kt_x4808v();
    var tmp$ret$5;
    {
      {
      }
      var tmp$ret$4;
      {
        var tmp$ret$3;
        {
          var tmp0_apply = LinkedHashMap_init_$Create$();
          {
          }
          {
            var tmp$ret$0;
            {
              tmp$ret$0 = _this__u8e3s4.j().d();
            }
            var tmp0_iterator = tmp$ret$0;
            while (tmp0_iterator.e()) {
              var tmp1_loop_parameter = tmp0_iterator.f();
              var tmp$ret$1;
              {
                tmp$ret$1 = tmp1_loop_parameter.j1();
              }
              var key = tmp$ret$1;
              var tmp$ret$2;
              {
                tmp$ret$2 = tmp1_loop_parameter.l1();
              }
              var value = tmp$ret$2;
              if (!(value == null)) {
                tmp0_apply.a(key, value);
              }
            }
          }
          tmp$ret$3 = tmp0_apply;
        }
        tmp$ret$4 = tmp$ret$3.x2();
      }
      tmp$ret$5 = tmp$ret$4;
    }
    return tmp$ret$5;
  }
  function main$slambda$slambda$o$collect$slambda($collector, resultContinuation) {
    this.k2c_1 = $collector;
    CoroutineImpl.call(this, resultContinuation);
  }
  main$slambda$slambda$o$collect$slambda.prototype.n2c = function (value, $cont) {
    var tmp = this.o2c(value, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  main$slambda$slambda$o$collect$slambda.prototype.dh = function (p1, $cont) {
    return this.n2c(p1 instanceof Repository ? p1 : THROW_CCE(), $cont);
  };
  main$slambda$slambda$o$collect$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 5;
            this.sg_1 = 1;
            continue $sm;
          case 1:
            if (this.l2c_1.o23_1.x22_1) {
              this.sg_1 = 3;
              suspendResult = this.k2c_1.wx(this.l2c_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.sg_1 = 2;
              continue $sm;
            }

            break;
          case 2:
            if (false) {}

            this.sg_1 = 4;
            continue $sm;
          case 3:
            this.m2c_1 = suspendResult;
            this.sg_1 = 4;
            continue $sm;
          case 4:
            return Unit_getInstance();
          case 5:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 5) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  main$slambda$slambda$o$collect$slambda.prototype.o2c = function (value, completion) {
    var i = new main$slambda$slambda$o$collect$slambda(this.k2c_1, completion);
    i.l2c_1 = value;
    return i;
  };
  main$slambda$slambda$o$collect$slambda.$metadata$ = classMeta('main$slambda$slambda$o$collect$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function main$slambda$slambda$o$collect$slambda_0($collector, resultContinuation) {
    var i = new main$slambda$slambda$o$collect$slambda($collector, resultContinuation);
    var l = function (value, $cont) {
      return i.n2c(value, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function $collectCOROUTINE$1(_this__u8e3s4, collector, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.x2c_1 = _this__u8e3s4;
    this.y2c_1 = collector;
  }
  $collectCOROUTINE$1.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            var tmp_0 = main$slambda$slambda$o$collect$slambda_0(this.y2c_1, null);
            suspendResult = this.x2c_1.z2c_1.ix(new sam$kotlinx_coroutines_flow_FlowCollector$0(tmp_0), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  $collectCOROUTINE$1.$metadata$ = classMeta('$collectCOROUTINE$1', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function invoke$contributeError(errorsSeen, parts) {
    errorsSeen._v = errorsSeen._v + 1 | 0;
    errorsSeen._v;
    GithubMessages_getInstance().y2b(parts.slice());
  }
  function _no_name_provided__qut3iv($tmp1_filter) {
    this.z2c_1 = $tmp1_filter;
  }
  _no_name_provided__qut3iv.prototype.a2d = function (collector, $cont) {
    var tmp = new $collectCOROUTINE$1(this, collector, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  _no_name_provided__qut3iv.prototype.ix = function (collector, $cont) {
    return this.a2d(collector, $cont);
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Flow]);
  function main$slambda$slambda$slambda($seenRepos, $resolvedAccessConfig, $github, $teams, $mainTeam, $org, $errorsSeen, resultContinuation) {
    this.j2d_1 = $seenRepos;
    this.k2d_1 = $resolvedAccessConfig;
    this.l2d_1 = $github;
    this.m2d_1 = $teams;
    this.n2d_1 = $mainTeam;
    this.o2d_1 = $org;
    this.p2d_1 = $errorsSeen;
    CoroutineImpl.call(this, resultContinuation);
  }
  main$slambda$slambda$slambda.prototype.n2c = function (repo, $cont) {
    var tmp = this.o2c(repo, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  main$slambda$slambda$slambda.prototype.dh = function (p1, $cont) {
    return this.n2c(p1 instanceof Repository ? p1 : THROW_CCE(), $cont);
  };
  main$slambda$slambda$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 8;
            var tmp_0 = this;
            tmp_0.r2d_1 = this.q2d_1.i23_1;
            this.j2d_1.c(this.r2d_1);
            ;
            this.s2d_1 = this.k2d_1.v1(this.q2d_1.i23_1);
            if (this.q2d_1.k23_1) {
              if (!(this.s2d_1 == null)) {
                GithubMessages_getInstance().x2b([this.q2d_1, 'Archived repo is still configured']);
              }
              return Unit_getInstance();
            }

            if (this.s2d_1 == null) {
              invoke$contributeError(this.p2d_1, [this.q2d_1, 'Team has admin access to repo, but there is no config for it']);
              return Unit_getInstance();
            }

            this.tg_1 = 7;
            this.sg_1 = 1;
            var tmp_1 = this.l2d_1.m28(this.q2d_1, 0, 2, null);
            suspendResult = toList$default(tmp_1, null, this, 1, null);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.t2d_1 = suspendResult;
            GithubMessages_getInstance().u2b([this.q2d_1, 'accessConfig=' + this.s2d_1 + ' repoTeams=' + this.t2d_1]);
            this.u2d_1 = syncRepoAccess(this.m2d_1, this.q2d_1, this.t2d_1, this.n2d_1, this.s2d_1).d();
            this.sg_1 = 2;
            continue $sm;
          case 2:
            if (!this.u2d_1.e()) {
              this.sg_1 = 6;
              continue $sm;
            }

            this.v2d_1 = this.u2d_1.f();
            this.w2d_1 = this.v2d_1;
            var tmp_2 = this.w2d_1;
            if (tmp_2 instanceof RemoveTeam) {
              GithubMessages_getInstance().w2b([this.q2d_1, this.v2d_1.z2b_1, 'Removing permission']);
              this.sg_1 = 4;
              suspendResult = this.l2d_1.p28(this.o2d_1, this.v2d_1.z2b_1, this.q2d_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              var tmp_3 = this.w2d_1;
              if (tmp_3 instanceof SetTeamPermission) {
                GithubMessages_getInstance().w2b([this.q2d_1, this.v2d_1.a2c_1, 'Updating permission to ' + this.v2d_1.b2c_1]);
                this.sg_1 = 3;
                suspendResult = this.l2d_1.t28(this.o2d_1, this.v2d_1.a2c_1, this.q2d_1, this.v2d_1.b2c_1.s2b(), this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                this.sg_1 = 5;
                continue $sm;
              }
            }

            break;
          case 3:
            this.sg_1 = 5;
            continue $sm;
          case 4:
            this.sg_1 = 5;
            continue $sm;
          case 5:
            this.sg_1 = 2;
            continue $sm;
          case 6:
            this.tg_1 = 8;
            this.sg_1 = 9;
            continue $sm;
          case 7:
            this.tg_1 = 8;
            var tmp_4 = this.vg_1;
            if (tmp_4 instanceof Error) {
              var ex = this.vg_1;
              invoke$contributeError(this.p2d_1, [this.q2d_1, ex.toString()]);
              this.sg_1 = 9;
              continue $sm;
            } else {
              throw this.vg_1;
            }

            break;
          case 8:
            throw this.vg_1;
          case 9:
            this.tg_1 = 8;
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.tg_1 === 8) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  main$slambda$slambda$slambda.prototype.o2c = function (repo, completion) {
    var i = new main$slambda$slambda$slambda(this.j2d_1, this.k2d_1, this.l2d_1, this.m2d_1, this.n2d_1, this.o2d_1, this.p2d_1, completion);
    i.q2d_1 = repo;
    return i;
  };
  main$slambda$slambda$slambda.$metadata$ = classMeta('main$slambda$slambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function main$slambda$slambda$slambda_0($seenRepos, $resolvedAccessConfig, $github, $teams, $mainTeam, $org, $errorsSeen, resultContinuation) {
    var i = new main$slambda$slambda$slambda($seenRepos, $resolvedAccessConfig, $github, $teams, $mainTeam, $org, $errorsSeen, resultContinuation);
    var l = function (repo, $cont) {
      return i.n2c(repo, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function sam$kotlinx_coroutines_flow_FlowCollector$0(function_0) {
    this.x2d_1 = function_0;
  }
  sam$kotlinx_coroutines_flow_FlowCollector$0.prototype.wx = function (value, $cont) {
    return this.x2d_1(value, $cont);
  };
  sam$kotlinx_coroutines_flow_FlowCollector$0.$metadata$ = classMeta('sam$kotlinx_coroutines_flow_FlowCollector$0', [FlowCollector]);
  function main$slambda$slambda($orgName, $mainTeamName, $accessConfig, resultContinuation) {
    this.g2e_1 = $orgName;
    this.h2e_1 = $mainTeamName;
    this.i2e_1 = $accessConfig;
    CoroutineImpl.call(this, resultContinuation);
  }
  main$slambda$slambda.prototype.t2e = function (github, $cont) {
    var tmp = this.u2e(github, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  main$slambda$slambda.prototype.dh = function (p1, $cont) {
    return this.t2e(p1 instanceof Github ? p1 : THROW_CCE(), $cont);
  };
  main$slambda$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 4;
            this.sg_1 = 1;
            suspendResult = this.j2e_1.d28(this.g2e_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.k2e_1 = suspendResult;
            this.sg_1 = 2;
            var tmp_0 = this.j2e_1.g28(this.k2e_1, 0, 2, null);
            suspendResult = toList$default(tmp_0, null, this, 1, null);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.l2e_1 = suspendResult;
            var tmp_1 = this;
            var tmp$ret$0;
            l$ret$1: do {
              var tmp0_iterator = this.l2e_1.d();
              while (tmp0_iterator.e()) {
                var element = tmp0_iterator.f();
                if (element.m22_1 === this.h2e_1) {
                  tmp$ret$0 = element;
                  break l$ret$1;
                }
              }
              tmp$ret$0 = null;
            }
             while (false);
            var tmp0_elvis_lhs = tmp$ret$0;
            var tmp_2;
            if (tmp0_elvis_lhs == null) {
              var tmp$ret$2;
              l$ret$3: do {
                var tmp0_iterator_0 = this.l2e_1.d();
                while (tmp0_iterator_0.e()) {
                  var element_0 = tmp0_iterator_0.f();
                  if (element_0.l22_1 === this.h2e_1) {
                    tmp$ret$2 = element_0;
                    break l$ret$3;
                  }
                }
                tmp$ret$2 = null;
              }
               while (false);
              tmp_2 = tmp$ret$2;
            } else {
              tmp_2 = tmp0_elvis_lhs;
            }

            var tmp1_elvis_lhs = tmp_2;
            var tmp_3;
            if (tmp1_elvis_lhs == null) {
              var tmp0_error = 'Main team "' + this.h2e_1 + '" not found in org "' + this.g2e_1 + '"';
              throw IllegalStateException_init_$Create$(toString(tmp0_error));
            } else {
              tmp_3 = tmp1_elvis_lhs;
            }

            tmp_1.m2e_1 = tmp_3;
            var tmp_4 = this;
            var tmp_5 = this;
            tmp_5.n2e_1 = LinkedHashMap_init_$Create$_0(mapCapacity(this.i2e_1.g()));
            var tmp_6 = this;
            tmp_6.o2e_1 = this.i2e_1.j();
            var tmp0_iterator_1 = this.o2e_1.d();
            while (tmp0_iterator_1.e()) {
              var element_1 = tmp0_iterator_1.f();
              var tmp_7 = element_1.j1();
              var repoName = element_1.j1();
              var repoAccessConfig = element_1.l1();
              var tmp0_mapKeys = repoAccessConfig.t2b_1;
              var tmp1_mapKeysTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapKeys.g()));
              var tmp0_associateByTo = tmp0_mapKeys.j();
              var tmp0_iterator_2 = tmp0_associateByTo.d();
              while (tmp0_iterator_2.e()) {
                var element_2 = tmp0_iterator_2.f();
                var teamName = element_2.j1();
                var tmp$ret$4;
                l$ret$5: do {
                  var tmp0_iterator_3 = this.l2e_1.d();
                  while (tmp0_iterator_3.e()) {
                    var element_3 = tmp0_iterator_3.f();
                    if (element_3.m22_1 === teamName) {
                      tmp$ret$4 = element_3;
                      break l$ret$5;
                    }
                  }
                  tmp$ret$4 = null;
                }
                 while (false);
                var tmp0_elvis_lhs_0 = tmp$ret$4;
                var tmp_8;
                if (tmp0_elvis_lhs_0 == null) {
                  var tmp$ret$6;
                  l$ret$7: do {
                    var tmp0_iterator_4 = this.l2e_1.d();
                    while (tmp0_iterator_4.e()) {
                      var element_4 = tmp0_iterator_4.f();
                      if (element_4.l22_1 === teamName) {
                        tmp$ret$6 = element_4;
                        break l$ret$7;
                      }
                    }
                    tmp$ret$6 = null;
                  }
                   while (false);
                  tmp_8 = tmp$ret$6;
                } else {
                  tmp_8 = tmp0_elvis_lhs_0;
                }
                var tmp1_elvis_lhs_0 = tmp_8;
                var tmp_9;
                if (tmp1_elvis_lhs_0 == null) {
                  var tmp0_error_0 = 'Team "' + teamName + '" for repo "' + repoName + '" not found in org "' + this.g2e_1 + '"';
                  throw IllegalStateException_init_$Create$(toString(tmp0_error_0));
                } else {
                  tmp_9 = tmp1_elvis_lhs_0;
                }
                var team = tmp_9;
                tmp1_mapKeysTo.a(team.m22_1, element_2.l1());
              }
              this.n2e_1.a(tmp_7, tmp1_mapKeysTo);
            }

            tmp_4.p2e_1 = this.n2e_1;
            var tmp_10 = this;
            tmp_10.q2e_1 = LinkedHashSet_init_$Create$();
            this.r2e_1 = {_v: 0};
            this.sg_1 = 3;
            var tmp_11 = this;
            tmp_11.s2e_1 = this.j2e_1.j28(this.k2e_1, this.m2e_1, 0, 4, null);
            var tmp_12 = new _no_name_provided__qut3iv(this.s2e_1);
            suspendResult = collectConcurrently(tmp_12, 4, main$slambda$slambda$slambda_0(this.q2e_1, this.p2e_1, this.j2e_1, this.l2e_1, this.m2e_1, this.k2e_1, this.r2e_1, null), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            var tmp2_iterator = this.i2e_1.w1().d();
            while (tmp2_iterator.e()) {
              var configuredRepoName = tmp2_iterator.f();
              if (!this.q2e_1.a1(configuredRepoName)) {
                invoke$contributeError(this.r2e_1, [this.k2e_1, this.m2e_1, 'Config mentions repo "' + configuredRepoName + '", but team does not have admin access']);
              }
            }

            if (this.r2e_1._v > 0) {
              var tmp2_error = 'Encountered ' + this.r2e_1._v + ' error(s), see above';
              throw IllegalStateException_init_$Create$(toString(tmp2_error));
            }

            return Unit_getInstance();
          case 4:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 4) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  main$slambda$slambda.prototype.u2e = function (github, completion) {
    var i = new main$slambda$slambda(this.g2e_1, this.h2e_1, this.i2e_1, completion);
    i.j2e_1 = github;
    return i;
  };
  main$slambda$slambda.$metadata$ = classMeta('main$slambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function main$slambda$slambda_0($orgName, $mainTeamName, $accessConfig, resultContinuation) {
    var i = new main$slambda$slambda($orgName, $mainTeamName, $accessConfig, resultContinuation);
    var l = function (github, $cont) {
      return i.t2e(github, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function main$slambda(resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
  }
  main$slambda.prototype.e10 = function ($this$runAction, $cont) {
    var tmp = this.f10($this$runAction, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  main$slambda.prototype.dh = function (p1, $cont) {
    return this.e10((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  main$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 3;
            var tmp_0 = this;
            tmp_0.e2f_1 = getInput$default('accessFile', true, false, 4, null);
            var tmp_1 = this;
            tmp_1.f2f_1 = getInput$default('org', true, false, 4, null);
            var tmp_2 = this;
            tmp_2.g2f_1 = getInput$default('team', true, false, 4, null);
            this.sg_1 = 1;
            suspendResult = readAccessConfigFile(this.e2f_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.h2f_1 = suspendResult;
            this.i2f_1 = invertAccessConfig(this.h2f_1);
            this.sg_1 = 2;
            suspendResult = useGithub$default(null, main$slambda$slambda_0(this.f2f_1, this.g2f_1, this.i2f_1, null), this, 1, null);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return Unit_getInstance();
          case 3:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 3) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  main$slambda.prototype.f10 = function ($this$runAction, completion) {
    var i = new main$slambda(completion);
    i.d2f_1 = $this$runAction;
    return i;
  };
  main$slambda.$metadata$ = classMeta('main$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function main$slambda_0(resultContinuation) {
    var i = new main$slambda(resultContinuation);
    var l = function ($this$runAction, $cont) {
      return i.e10($this$runAction, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function collectConcurrently$slambda$slambda($target, $item, resultContinuation) {
    this.r2f_1 = $target;
    this.s2f_1 = $item;
    CoroutineImpl.call(this, resultContinuation);
  }
  collectConcurrently$slambda$slambda.prototype.u2f = function ($this$flow, $cont) {
    var tmp = this.v2f($this$flow, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  collectConcurrently$slambda$slambda.prototype.dh = function (p1, $cont) {
    return this.u2f((!(p1 == null) ? isInterface(p1, FlowCollector) : false) ? p1 : THROW_CCE(), $cont);
  };
  collectConcurrently$slambda$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 2;
            this.sg_1 = 1;
            suspendResult = this.r2f_1(this.s2f_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 2) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  collectConcurrently$slambda$slambda.prototype.v2f = function ($this$flow, completion) {
    var i = new collectConcurrently$slambda$slambda(this.r2f_1, this.s2f_1, completion);
    i.t2f_1 = $this$flow;
    return i;
  };
  collectConcurrently$slambda$slambda.$metadata$ = classMeta('collectConcurrently$slambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function collectConcurrently$slambda$slambda_0($target, $item, resultContinuation) {
    var i = new collectConcurrently$slambda$slambda($target, $item, resultContinuation);
    var l = function ($this$flow, $cont) {
      return i.u2f($this$flow, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function collectConcurrently$slambda($target, resultContinuation) {
    this.e2g_1 = $target;
    CoroutineImpl.call(this, resultContinuation);
  }
  collectConcurrently$slambda.prototype.g2g = function (item, $cont) {
    var tmp = this.m12(item, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  collectConcurrently$slambda.prototype.dh = function (p1, $cont) {
    return this.g2g((p1 == null ? true : isObject(p1)) ? p1 : THROW_CCE(), $cont);
  };
  collectConcurrently$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        if (tmp === 0) {
          this.tg_1 = 1;
          return flow(collectConcurrently$slambda$slambda_0(this.e2g_1, this.f2g_1, null));
        } else if (tmp === 1) {
          throw this.vg_1;
        }
      } catch ($p) {
        throw $p;
      }
     while (true);
  };
  collectConcurrently$slambda.prototype.m12 = function (item, completion) {
    var i = new collectConcurrently$slambda(this.e2g_1, completion);
    i.f2g_1 = item;
    return i;
  };
  collectConcurrently$slambda.$metadata$ = classMeta('collectConcurrently$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function collectConcurrently$slambda_0($target, resultContinuation) {
    var i = new collectConcurrently$slambda($target, resultContinuation);
    var l = function (item, $cont) {
      return i.g2g(item, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function syncRepoAccess$slambda($repoTeams, $mainTeam, $repoAccessConfig, $orgTeams, $repo, resultContinuation) {
    this.p2g_1 = $repoTeams;
    this.q2g_1 = $mainTeam;
    this.r2g_1 = $repoAccessConfig;
    this.s2g_1 = $orgTeams;
    this.t2g_1 = $repo;
    CoroutineImpl.call(this, resultContinuation);
  }
  syncRepoAccess$slambda.prototype.h2h = function ($this$sequence, $cont) {
    var tmp = this.i2h($this$sequence, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  syncRepoAccess$slambda.prototype.dh = function (p1, $cont) {
    return this.h2h(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $cont);
  };
  syncRepoAccess$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 6;
            var tmp_0 = this;
            var tmp_1 = this;
            var tmp0_filterNotTo = ArrayList_init_$Create$();
            var tmp0_iterator = this.p2g_1.d();
            while (tmp0_iterator.e()) {
              var element = tmp0_iterator.f();
              if (!(element.m22_1 === this.q2g_1.m22_1)) {
                tmp0_filterNotTo.c(element);
              }
            }

            tmp_1.v2g_1 = tmp0_filterNotTo;
            this.w2g_1 = coerceAtLeast(mapCapacity(collectionSizeOrDefault(this.v2g_1, 10)), 16);
            var tmp_2 = this;
            tmp_2.x2g_1 = LinkedHashMap_init_$Create$_0(this.w2g_1);
            var tmp0_iterator_0 = this.v2g_1.d();
            while (tmp0_iterator_0.e()) {
              var element_0 = tmp0_iterator_0.f();
              var tmp0_plusAssign = to(element_0.m22_1, toAccessType(element_0));
              this.x2g_1.a(tmp0_plusAssign.b3_1, tmp0_plusAssign.c3_1);
            }

            tmp_0.y2g_1 = filterValuesNotNull(this.x2g_1);
            this.z2g_1 = mergeMaps(this.y2g_1, this.r2g_1).d();
            this.sg_1 = 1;
            continue $sm;
          case 1:
            if (!this.z2g_1.e()) {
              this.sg_1 = 5;
              continue $sm;
            }

            this.a2h_1 = this.z2g_1.f();
            this.b2h_1 = this.a2h_1.d3();
            this.c2h_1 = this.a2h_1.e3();
            this.d2h_1 = this.a2h_1.m2h();
            var tmp_3 = this;
            this.e2h_1 = null;
            this.f2h_1 = false;
            var tmp0_iterator_1 = this.s2g_1.d();
            while (tmp0_iterator_1.e()) {
              var element_1 = tmp0_iterator_1.f();
              if (element_1.m22_1 === this.b2h_1) {
                if (this.f2h_1)
                  throw IllegalArgumentException_init_$Create$('Collection contains more than one matching element.');
                this.e2h_1 = element_1;
                this.f2h_1 = true;
              }
            }

            if (!this.f2h_1)
              throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
            var tmp_4 = this.e2h_1;
            tmp_3.g2h_1 = (tmp_4 == null ? true : isObject(tmp_4)) ? tmp_4 : THROW_CCE();
            if (equals(this.d2h_1, AccessType_ADMIN_getInstance())) {
              GithubMessages_getInstance().x2b([this.t2g_1, this.g2h_1, 'Additional team has admin access- resolve by completing transfer']);
              this.sg_1 = 4;
              continue $sm;
            } else {
              if (equals(this.c2h_1, this.d2h_1)) {
                GithubMessages_getInstance().v2b([this.t2g_1, this.g2h_1, '' + this.c2h_1 + ' permission unchanged']);
                this.sg_1 = 4;
                continue $sm;
              } else {
                if (this.d2h_1 == null) {
                  this.sg_1 = 3;
                  suspendResult = this.u2g_1.g3(new RemoveTeam(this.g2h_1), this);
                  if (suspendResult === get_COROUTINE_SUSPENDED()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  this.sg_1 = 2;
                  suspendResult = this.u2g_1.g3(new SetTeamPermission(this.g2h_1, this.d2h_1), this);
                  if (suspendResult === get_COROUTINE_SUSPENDED()) {
                    return suspendResult;
                  }
                  continue $sm;
                }
              }
            }

            break;
          case 2:
            this.sg_1 = 4;
            continue $sm;
          case 3:
            this.sg_1 = 4;
            continue $sm;
          case 4:
            this.sg_1 = 1;
            continue $sm;
          case 5:
            return Unit_getInstance();
          case 6:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 6) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  syncRepoAccess$slambda.prototype.i2h = function ($this$sequence, completion) {
    var i = new syncRepoAccess$slambda(this.p2g_1, this.q2g_1, this.r2g_1, this.s2g_1, this.t2g_1, completion);
    i.u2g_1 = $this$sequence;
    return i;
  };
  syncRepoAccess$slambda.$metadata$ = classMeta('syncRepoAccess$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function syncRepoAccess$slambda_0($repoTeams, $mainTeam, $repoAccessConfig, $orgTeams, $repo, resultContinuation) {
    var i = new syncRepoAccess$slambda($repoTeams, $mainTeam, $repoAccessConfig, $orgTeams, $repo, resultContinuation);
    var l = function ($this$sequence, $cont) {
      return i.h2h($this$sequence, $cont);
    };
    l.$arity = 1;
    return l;
  }
  var properties_initialized_Main_kt_gqj46d;
  function init_properties_Main_kt_x4808v() {
    if (properties_initialized_Main_kt_gqj46d) {
    } else {
      properties_initialized_Main_kt_gqj46d = true;
      rankedAccessTypes = listOf([AccessType_ADMIN_getInstance(), AccessType_PUSH_getInstance(), AccessType_MAINTAIN_getInstance(), AccessType_TRIAGE_getInstance(), AccessType_PULL_getInstance()]);
    }
  }
  function MergeOutput(key, left, right) {
    this.j2h_1 = key;
    this.k2h_1 = left;
    this.l2h_1 = right;
  }
  MergeOutput.prototype.d3 = function () {
    return this.j2h_1;
  };
  MergeOutput.prototype.e3 = function () {
    return this.k2h_1;
  };
  MergeOutput.prototype.m2h = function () {
    return this.l2h_1;
  };
  MergeOutput.prototype.toString = function () {
    return 'MergeOutput(key=' + this.j2h_1 + ', left=' + this.k2h_1 + ', right=' + this.l2h_1 + ')';
  };
  MergeOutput.prototype.hashCode = function () {
    var result = this.j2h_1 == null ? 0 : hashCode(this.j2h_1);
    result = imul(result, 31) + (this.k2h_1 == null ? 0 : hashCode(this.k2h_1)) | 0;
    result = imul(result, 31) + (this.l2h_1 == null ? 0 : hashCode(this.l2h_1)) | 0;
    return result;
  };
  MergeOutput.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MergeOutput))
      return false;
    var tmp0_other_with_cast = other instanceof MergeOutput ? other : THROW_CCE();
    if (!equals(this.j2h_1, tmp0_other_with_cast.j2h_1))
      return false;
    if (!equals(this.k2h_1, tmp0_other_with_cast.k2h_1))
      return false;
    if (!equals(this.l2h_1, tmp0_other_with_cast.l2h_1))
      return false;
    return true;
  };
  MergeOutput.$metadata$ = classMeta('MergeOutput');
  function mergeMaps(left, right) {
    return sequence(mergeMaps$slambda_0(left, right, null));
  }
  function peekingIterator(_this__u8e3s4) {
    return new PeekingIterator(_this__u8e3s4.d());
  }
  var State_EMPTY_instance;
  var State_FULL_instance;
  var State_FINISHED_instance;
  var State_entriesInitialized;
  function State_initEntries() {
    if (State_entriesInitialized)
      return Unit_getInstance();
    State_entriesInitialized = true;
    State_EMPTY_instance = new State('EMPTY', 0);
    State_FULL_instance = new State('FULL', 1);
    State_FINISHED_instance = new State('FINISHED', 2);
  }
  function State(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  State.$metadata$ = classMeta('State', undefined, undefined, undefined, undefined, Enum.prototype);
  function fill($this) {
    if (!$this.o2h_1.equals(State_EMPTY_getInstance()))
      return Unit_getInstance();
    if (!$this.n2h_1.e()) {
      $this.o2h_1 = State_FINISHED_getInstance();
    } else {
      $this.p2h_1 = $this.n2h_1.f();
      $this.o2h_1 = State_FULL_getInstance();
    }
  }
  function State_EMPTY_getInstance() {
    State_initEntries();
    return State_EMPTY_instance;
  }
  function State_FULL_getInstance() {
    State_initEntries();
    return State_FULL_instance;
  }
  function State_FINISHED_getInstance() {
    State_initEntries();
    return State_FINISHED_instance;
  }
  function PeekingIterator(underlying) {
    this.n2h_1 = underlying;
    this.o2h_1 = State_EMPTY_getInstance();
    this.p2h_1 = null;
  }
  PeekingIterator.prototype.e = function () {
    fill(this);
    return this.o2h_1.equals(State_FULL_getInstance());
  };
  PeekingIterator.prototype.f = function () {
    var value = this.q2h();
    this.o2h_1 = State_EMPTY_getInstance();
    return value;
  };
  PeekingIterator.prototype.q2h = function () {
    fill(this);
    if (this.o2h_1.equals(State_EMPTY_getInstance()))
      throw NoSuchElementException_init_$Create$_0();
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = this.p2h_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  PeekingIterator.$metadata$ = classMeta('PeekingIterator', [Iterator]);
  function sam$kotlin_Comparator$0(function_0) {
    this.r2h_1 = function_0;
  }
  sam$kotlin_Comparator$0.prototype.ef = function (a, b) {
    return this.r2h_1(a, b);
  };
  sam$kotlin_Comparator$0.prototype.compare = function (a, b) {
    return this.ef(a, b);
  };
  sam$kotlin_Comparator$0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function mergeMaps$slambda$lambda() {
    return function (a, b) {
      var tmp$ret$2;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = a.j1();
        }
        var tmp = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = b.j1();
        }
        tmp$ret$2 = compareValues(tmp, tmp$ret$1);
      }
      return tmp$ret$2;
    };
  }
  function mergeMaps$slambda$lambda_0() {
    return function (a, b) {
      var tmp$ret$2;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = a.j1();
        }
        var tmp = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = b.j1();
        }
        tmp$ret$2 = compareValues(tmp, tmp$ret$1);
      }
      return tmp$ret$2;
    };
  }
  function mergeMaps$slambda($left, $right, resultContinuation) {
    this.a2i_1 = $left;
    this.b2i_1 = $right;
    CoroutineImpl.call(this, resultContinuation);
  }
  mergeMaps$slambda.prototype.q2i = function ($this$sequence, $cont) {
    var tmp = this.r2i($this$sequence, $cont);
    tmp.ug_1 = Unit_getInstance();
    tmp.vg_1 = null;
    return tmp.ch();
  };
  mergeMaps$slambda.prototype.dh = function (p1, $cont) {
    return this.q2i(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $cont);
  };
  mergeMaps$slambda.prototype.ch = function () {
    var suspendResult = this.ug_1;
    $sm: do
      try {
        var tmp = this.sg_1;
        switch (tmp) {
          case 0:
            this.tg_1 = 13;
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1.d2i_1 = this.a2i_1.j();
            var tmp_2 = mergeMaps$slambda$lambda();
            tmp_0.e2i_1 = peekingIterator(sortedWith(this.d2i_1, new sam$kotlin_Comparator$0(tmp_2)));
            var tmp_3 = this;
            var tmp_4 = this;
            tmp_4.f2i_1 = this.b2i_1.j();
            var tmp_5 = mergeMaps$slambda$lambda_0();
            tmp_3.g2i_1 = peekingIterator(sortedWith(this.f2i_1, new sam$kotlin_Comparator$0(tmp_5)));
            this.sg_1 = 1;
            continue $sm;
          case 1:
            if (!(this.e2i_1.e() ? this.g2i_1.e() : false)) {
              this.sg_1 = 6;
              continue $sm;
            }

            this.h2i_1 = compareTo(this.e2i_1.q2h().j1(), this.g2i_1.q2h().j1());
            if (this.h2i_1 < 0) {
              this.i2i_1 = this.e2i_1.f();
              this.sg_1 = 4;
              suspendResult = this.c2i_1.g3(new MergeOutput(this.i2i_1.j1(), this.i2i_1.l1(), null), this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              if (this.h2i_1 > 0) {
                this.j2i_1 = this.g2i_1.f();
                this.sg_1 = 3;
                suspendResult = this.c2i_1.g3(new MergeOutput(this.j2i_1.j1(), null, this.j2i_1.l1()), this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                this.k2i_1 = this.e2i_1.f();
                this.l2i_1 = this.g2i_1.f();
                this.sg_1 = 2;
                suspendResult = this.c2i_1.g3(new MergeOutput(this.k2i_1.j1(), this.k2i_1.l1(), this.l2i_1.l1()), this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              }
            }

            break;
          case 2:
            this.sg_1 = 5;
            continue $sm;
          case 3:
            this.sg_1 = 5;
            continue $sm;
          case 4:
            this.sg_1 = 5;
            continue $sm;
          case 5:
            this.sg_1 = 1;
            continue $sm;
          case 6:
            var tmp_6 = this;
            tmp_6.m2i_1 = this.e2i_1;
            this.sg_1 = 7;
            continue $sm;
          case 7:
            if (!this.m2i_1.e()) {
              this.sg_1 = 9;
              continue $sm;
            }

            this.n2i_1 = this.m2i_1.f();
            this.sg_1 = 8;
            suspendResult = this.c2i_1.g3(new MergeOutput(this.n2i_1.j1(), this.n2i_1.l1(), null), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 8:
            this.sg_1 = 7;
            continue $sm;
          case 9:
            var tmp_7 = this;
            tmp_7.o2i_1 = this.g2i_1;
            this.sg_1 = 10;
            continue $sm;
          case 10:
            if (!this.o2i_1.e()) {
              this.sg_1 = 12;
              continue $sm;
            }

            this.p2i_1 = this.o2i_1.f();
            this.sg_1 = 11;
            suspendResult = this.c2i_1.g3(new MergeOutput(this.p2i_1.j1(), null, this.p2i_1.l1()), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 11:
            this.sg_1 = 10;
            continue $sm;
          case 12:
            return Unit_getInstance();
          case 13:
            throw this.vg_1;
        }
      } catch ($p) {
        if (this.tg_1 === 13) {
          throw $p;
        } else {
          this.sg_1 = this.tg_1;
          this.vg_1 = $p;
        }
      }
     while (true);
  };
  mergeMaps$slambda.prototype.r2i = function ($this$sequence, completion) {
    var i = new mergeMaps$slambda(this.a2i_1, this.b2i_1, completion);
    i.c2i_1 = $this$sequence;
    return i;
  };
  mergeMaps$slambda.$metadata$ = classMeta('mergeMaps$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function mergeMaps$slambda_0($left, $right, resultContinuation) {
    var i = new mergeMaps$slambda($left, $right, resultContinuation);
    var l = function ($this$sequence, $cont) {
      return i.q2i($this$sequence, $cont);
    };
    l.$arity = 1;
    return l;
  }
  //region block: post-declaration
  $serializer.prototype.b1l = typeParametersSerializers;
  //endregion
  main();
  return _;
}(module.exports, __nccwpck_require__(147), __nccwpck_require__(403), __nccwpck_require__(737), __nccwpck_require__(180), __nccwpck_require__(596), __nccwpck_require__(790), __nccwpck_require__(36), __nccwpck_require__(915)));

//# sourceMappingURL=repo-access-action.js.map

/***/ }),

/***/ 491:
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ 361:
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ 147:
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ 685:
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ 687:
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ 808:
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ 37:
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ 17:
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ 282:
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ 404:
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ 837:
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + "/";
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __nccwpck_require__(856);
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;